/* Generated by re2c 4.0.2 on Sun Feb 16 08:07:23 2025 */
/* ============== Do not edit this file ============== */


//	TextEditor - A syntax highlighting text editor for ImGui
//	Copyright (c) 2024-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.


//
//	tokenizeJson
//

static TextEditor::Iterator tokenizeJson(TextEditor::Iterator start, TextEditor::Iterator end, TextEditor::Color& color) {
	TextEditor::Iterator i = start;
	TextEditor::Iterator marker;

	
{
	ImWchar yych;
	unsigned int yyaccept = 0;
	yych = i < end ? *i : 0;
	switch (yych) {
		case ',':
		case ':':
		case '[':
		case ']':
		case '{':
		case '}': goto yy3;
		case '-': goto yy4;
		case '0': goto yy5;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy7;
		case 'f': goto yy8;
		case 'n': goto yy9;
		case 't': goto yy10;
		default:
			if (i >= end) goto yy24;
			goto yy1;
	}
yy1:
	++i;
yy2:
	{ return start; }
yy3:
	++i;
	{
			color = TextEditor::Color::punctuation;
			return i;
		}
yy4:
	++i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case '0': goto yy5;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy7;
		default: goto yy2;
	}
yy5:
	yyaccept = 0;
	++i;
	marker = i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case '.': goto yy11;
		case 'E':
		case 'e': goto yy13;
		default: goto yy6;
	}
yy6:
	{
			color = TextEditor::Color::number;
			return i;
		}
yy7:
	yyaccept = 0;
	++i;
	marker = i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case '.': goto yy11;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy7;
		case 'E':
		case 'e': goto yy13;
		default: goto yy6;
	}
yy8:
	yyaccept = 1;
	++i;
	marker = i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case 'a': goto yy14;
		default: goto yy2;
	}
yy9:
	yyaccept = 1;
	++i;
	marker = i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case 'u': goto yy15;
		default: goto yy2;
	}
yy10:
	yyaccept = 1;
	++i;
	marker = i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case 'r': goto yy16;
		default: goto yy2;
	}
yy11:
	++i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy17;
		default: goto yy12;
	}
yy12:
	i = marker;
	if (yyaccept == 0) goto yy6;
	else goto yy2;
yy13:
	++i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case '+':
		case '-': goto yy18;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy19;
		default: goto yy12;
	}
yy14:
	++i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case 'l': goto yy20;
		default: goto yy12;
	}
yy15:
	++i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case 'l': goto yy21;
		default: goto yy12;
	}
yy16:
	++i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case 'u': goto yy22;
		default: goto yy12;
	}
yy17:
	yyaccept = 0;
	++i;
	marker = i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy17;
		case 'E':
		case 'e': goto yy13;
		default: goto yy6;
	}
yy18:
	++i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy19;
		default: goto yy12;
	}
yy19:
	++i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy19;
		default: goto yy6;
	}
yy20:
	++i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case 's': goto yy22;
		default: goto yy12;
	}
yy21:
	++i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case 'l': goto yy23;
		default: goto yy12;
	}
yy22:
	++i;
	yych = i < end ? *i : 0;
	switch (yych) {
		case 'e': goto yy23;
		default: goto yy12;
	}
yy23:
	++i;
	{
			color = TextEditor::Color::identifier;
			return i;
		}
yy24:
	{ return start; }
}

}


//
//	TextEditor::Language::Json
//

const TextEditor::Language* TextEditor::Language::Json() {
	static bool initialized = false;
	static TextEditor::Language language;

	if (!initialized) {
		language.name = "JSON";
		language.hasDoubleQuotedStrings = true;
		language.stringEscape = '\\';

		static const char* const keywords[] = {
			"false", "null", "true"
		};

		for (auto& keyword : keywords) { language.keywords.insert(keyword); }

		language.customTokenizer = tokenizeJson;
		initialized = true;
	}

	return &language;
}
