/* ============== Do not edit this file ============== */


//	TextEditor - A syntax highlighting text editor for Dear ImGui.
//	Copyright (c) 2024-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.


//
//	tokenizeJson
//

static TextEditor::Iterator tokenizeJson(TextEditor::Iterator start, TextEditor::Iterator end, TextEditor::Color& color) {
	TextEditor::Iterator i = start;
	TextEditor::Iterator marker;

	/*!re2c
		re2c:api = custom;
		re2c:api:style = free-form;
		re2c:define:YYCTYPE = ImWchar;
		re2c:define:YYPEEK = "i < end ? *i : 0";
		re2c:define:YYSKIP = "++i;";
		re2c:define:YYBACKUP = "marker = i;";
		re2c:define:YYRESTORE = "i = marker;";
		re2c:define:YYLESSTHAN = "i >= end";
		re2c:yyfill:enable = 0;
		re2c:eof = 0;

		punctuation = [[\]{},:];

		punctuation {
			color = TextEditor::Color::punctuation;
			return i;
		}

		identifiers = "null" | "true" | "false";

		identifiers {
			color = TextEditor::Color::identifier;
			return i;
		}

		digit         = [0-9];
		nonZeroDigit  = [1-9];
		e             = "e" | "E";
		minus         = "-";
		plus          = "+";
		zero          = "0";
		exp           = e (minus | plus)? digit+;
		frac          = "." digit+;
		int           = zero | (nonZeroDigit digit*);
		number        = minus? int frac? exp?;

		number {
			color = TextEditor::Color::number;
			return i;
		}

		$ { return start; }
		* { return start; }
	*/
}


//
//	TextEditor::Language::Json
//

const TextEditor::Language* TextEditor::Language::Json() {
	static bool initialized = false;
	static TextEditor::Language language;

	if (!initialized) {
		language.name = "JSON";
		language.hasDoubleQuotedStrings = true;
		language.stringEscape = '\\';

		static const char* const keywords[] = {
			"false", "null", "true"
		};

		for (auto& keyword : keywords) { language.keywords.insert(keyword); }

		language.customTokenizer = tokenizeJson;
		initialized = true;
	}

	return &language;
}
