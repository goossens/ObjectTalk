#!/usr/local/bin/ot

//	ObjectTalk Scripting Language
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

var gui = import("gui");

var leftText = "//	Demo C++ Code
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

#include <iostream>
#include <random>
#include <vector>

int main(int, char**) {
	std::random_device rd;
	std::mt19937 gen(rd());
	std::uniform_int_distribution<> distrib(0, 1000);
	std::vector<int> numbers;

	for (auto i = 0; i < 100; i++) {
		numbers.emplace_back(distrib(gen));
	}

	for (auto n : numbers) {
		std::cout << n << std::endl;
	}

	return 0;
}

//	MIT License
//
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	Permission is hereby granted, free of charge, to any person obtaining a
//	copy of this software and associated documentation files (the
//	\"Software\"), to deal in the Software without restriction, including
//	without limitation the rights to use, copy, modify, merge, publish,
//	distribute, sublicense, and/or sell copies of the Software, and to permit
//	persons to whom the Software is furnished to do so, subject to the
//	following conditions:
//
//	The above copyright notice and this permission notice shall be included
//	in all copies or substantial portions of the Software.
//
//	THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS
//	OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//	MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
//	NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
//	DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
//	OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
//	USE OR OTHER DEALINGS IN THE SOFTWARE.
";

var rightText = "//	Demo C++ Code
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

#include <iostream>
#include <random>
#include <vector>

void fillVector(std::vector<int>& vector, size_t count) {
	std::random_device rd;
	std::mt19937 gen(rd());
	std::uniform_int_distribution<> distrib(0, 1000);

	for (size_t i = 0; i < count; i++) {
		vector.emplace_back(distrib(gen));
	}
}

void printVector(std::vector<int>& vector) {
	for (auto n : vector) {
		std::cout << \"test\" << n << std::endl;
	}
}

int main(int, char**) {
	std::vector<int> numbers;
	static constexpr size_t count = 1000;

	fillVector(numbers, 1000);
	printVector(numbers);
	return 0;
}

//	MIT License
//
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	Permission is hereby granted, free of charge, to any person obtaining a
//	copy of this software and associated documentation files (the
//	\"Software\"), to deal in the Software without restriction, including
//	without limitation the rights to use, copy, modify, merge, publish,
//	distribute, sublicense, and/or sell copies of the Software, and to permit
//	persons to whom the Software is furnished to do so, subject to the
//	following conditions:
//
//	The above copyright notice and this permission notice shall be included
//	in all copies or substantial portions of the Software.
//
//	THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS
//	OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//	MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
//	NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
//	DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
//	OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
//	USE OR OTHER DEALINGS IN THE SOFTWARE.
";

class MyApp : gui.App {
	function setup(this) {
		var diff = gui.TextDiff(leftText, rightText, "C++");
		diff.setSideBySideMode(true);
		this.add(diff);
	}
}

var app = MyApp();
app.run();
