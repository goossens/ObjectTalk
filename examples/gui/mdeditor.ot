#!/usr/local/bin/ot

//	ObjectTalk Scripting Language
//	Copyright (c) 1993-2025 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

var gui = import("gui");

var markdown = "# Table

Name &nbsp; &nbsp; &nbsp; &nbsp; | Multiline &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>Header | [Link&nbsp;](#link1)
------ | ------------------- | --
Value-One | Long <br>explanation <br>with \\<br\\>\\'s|1
~~Value-Two~~ | text auto wrapped\\: long explanation here |25 37 43 56 78 90
**etc** | [~~Some **link**~~](https://github.com/goossens/ObjectTalk)|3

1. First ordered list item
2. Another item
	* Unordered sub-list 1.
	* Unordered sub-list 2.
1. Actual numbers don't matter, just that it's a number
	1. **Ordered** sub-list 1
	2. **Ordered** sub-list 2
	5. *Ordered* sub-list
4. And another item with minuses.
	- <u>sub-list with underline</u>
	- sub-list with escapes: \\[looks like\\]\\(a link\\)
5. ~~Item with pluses and strikethrough~~.
	+ sub-list 1
	+ sub-list 2
	+ [Just a link](https://github.com/goossens/ObjectTalk).
		* Item with [link1](#link1)
		* Item with bold [**link2**](#link1)
";

class MyApp : gui.App {
	function setup(this) {
		var columns = gui.Columns([50, 50]);
		columns.add(this.editorPanel());
		columns.add(this.rendererPanel());
		this.add(columns);

		this.version = this.editor.getUndoIndex();
	}

	function update(this) {
		var version = this.editor.getUndoIndex();

		if (version != this.version) {
			this.markdown.setText(this.editor.getText());
			this.version = version;
		}
	}

	function editorPanel(this) {
		var panel = gui.Panel();
		panel.add(gui.Header("Markdown Editor"));
		this.editor = gui.TextEditor(markdown, "Markdown");
		panel.add(this.editor);
		return panel;
	}

	function rendererPanel(this) {
		var panel = gui.Panel();
		panel.add(gui.Header("Markdown Renderer"));
		this.markdown = gui.Markdown(markdown);
		panel.add(this.markdown);
		return panel;
	}
}

var app = MyApp();
app.run();
