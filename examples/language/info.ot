#!/usr/local/bin/ot

//	ObjectTalk Scripting Language
//	Copyright (c) 1993-2024 Johan A. Goossens. All rights reserved.
//
//	This work is licensed under the terms of the MIT license.
//	For a copy, see <https://opensource.org/licenses/MIT>.

test

function size2string(bytes) {
	bytes = bytes.real();

	var units = [" B", " KB", " MB", " GB", " TB"];
	var i = 0;

	while bytes > 1024.0 {
		bytes /= 1024.0;
		i++;
	}

	return bytes.toFixed(2) + units[i];
}

function seconds2string(seconds) {
	var result = "";

	var day = 24 * 60 * 60;
	var days = (seconds / day).floor();
	result += days.string() + " days, ";
	seconds -= days * day;

	var hour = 60 * 60;
	var hours = (seconds / hour).floor();
	result += hours.string() + " hours, ";
	seconds -= hours * hour;

	var minute = 60;
	var minutes = (seconds / minute).floor();
	result += minutes.string() + " minutes ";
	seconds -= minutes * minute;

	result += "and " + seconds.integer() + " seconds";
	return result;
}

print("System name: " + os.sysname());
print("Release: " + os.release());
print("Version: " + os.version());
print("Machine: " + os.machine());
print("Uptime: " + seconds2string(os.uptime()));
print("Hostname: " + os.hostname());
print();

var cores = os.cores();
print("CPU: " + cores[0]["model"]);
print("Number of cores/threads: " + cores.size());
print();

print("Total memory: " + size2string(os.totalMemory()));
print("Free memory: " + size2string(os.freeMemory()));
print();

print("Filesystem capacity: " + size2string(fs.capacity("/")));
print("Filesystem free: " + size2string(fs.free("/")));
print("Filesystem available: " + size2string(fs.available("/")));
print();

var networks = os.networks();
print("Number of networks: " + networks.size());

for network in networks {
	print(network);
}

print();
