static const uint8_t OtHeightmapFS_mtl[2545] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0b, 0x75, // FSH.o.><.......u
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, 0x70, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, // _heightmap......
	0x00, 0x00, 0x00, 0x00, 0xc5, 0x09, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, // ........#include
	0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, //  <metal_stdlib>.
	0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, // #include <simd/s
	0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, // imd.h>..using na
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, // mespace metal;..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, // struct _Global.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x68, 0x65, // .    float4 u_he
	0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, 0x70, 0x5b, 0x31, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, // ightmap[1];.};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // in_out.{.    flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, // at4 bgfx_FragDat
	0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, // a0 [[color(0)]];
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, // .};..struct xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // MtlMain_in.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, //  float2 v_texcoo
	0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, // rd0 [[user(locn0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, // )]];.};..fragmen
	0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, // t xlatMtlMain_ou
	0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, // t xlatMtlMain(xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, // atMtlMain_in in 
	0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, // [[stage_in]], co
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, // nstant _Global& 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, // _mtl_u [[buffer(
	0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, // 0)]]).{.    xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, // MtlMain_out out 
	0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // = {};.    float 
	0x5f, 0x36, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x31, 0x36, 0x20, 0x3d, // _616;.    _616 =
	0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x36, //  0.0;.    int _6
	0x31, 0x35, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 15 = 0;.    floa
	0x74, 0x20, 0x5f, 0x36, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // t _617 = _mtl_u.
	0x75, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, 0x70, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // u_heightmap[0].y
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x31, 0x38, // ;.    float _618
	0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x68, 0x65, 0x69, 0x67, //  = _mtl_u.u_heig
	0x68, 0x74, 0x6d, 0x61, 0x70, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // htmap[0].x;.    
	0x66, 0x6f, 0x72, 0x20, 0x28, 0x3b, 0x20, 0x5f, 0x36, 0x31, 0x35, 0x20, 0x3c, 0x20, 0x34, 0x3b, // for (; _615 < 4;
	0x20, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  ).    {.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x69, //  float2 _376 = i
	0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, // n.v_texcoord0 * 
	0x5f, 0x36, 0x31, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // _618;.        fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x6f, // oat2 _414 = floo
	0x72, 0x28, 0x5f, 0x33, 0x37, 0x36, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // r(_376 + float2(
	0x64, 0x6f, 0x74, 0x28, 0x5f, 0x33, 0x37, 0x36, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // dot(_376, float2
	0x28, 0x30, 0x2e, 0x33, 0x36, 0x36, 0x30, 0x32, 0x35, 0x34, 0x31, 0x38, 0x30, 0x34, 0x33, 0x31, // (0.3660254180431
	0x33, 0x36, 0x35, 0x39, 0x36, 0x36, 0x37, 0x39, 0x36, 0x38, 0x37, 0x35, 0x29, 0x29, 0x29, 0x29, // 365966796875))))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // ;.        float2
	0x20, 0x5f, 0x34, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x36, 0x20, 0x2d, 0x20, //  _421 = (_376 - 
	0x5f, 0x34, 0x31, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x64, // _414) + float2(d
	0x6f, 0x74, 0x28, 0x5f, 0x34, 0x31, 0x34, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // ot(_414, float2(
	0x30, 0x2e, 0x32, 0x31, 0x31, 0x33, 0x32, 0x34, 0x38, 0x37, 0x30, 0x35, 0x38, 0x36, 0x33, 0x39, // 0.21132487058639
	0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x37, 0x35, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 5263671875)));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, //        float2 _4
	0x32, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, // 28 = select(floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, // t2(0.0, 1.0), fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, // oat2(1.0, 0.0), 
	0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x28, 0x5f, 0x34, 0x32, 0x31, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x5f, // bool2(_421.x > _
	0x34, 0x32, 0x31, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 421.y));.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x34, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x5f, //  float4 _431 = _
	0x34, 0x32, 0x31, 0x2e, 0x78, 0x79, 0x78, 0x79, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 421.xyxy + float
	0x34, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x33, 0x32, 0x34, 0x38, 0x37, 0x30, 0x35, 0x38, 0x36, // 4(0.211324870586
	0x33, 0x39, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, // 395263671875, 0.
	0x32, 0x31, 0x31, 0x33, 0x32, 0x34, 0x38, 0x37, 0x30, 0x35, 0x38, 0x36, 0x33, 0x39, 0x35, 0x32, // 2113248705863952
	0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x37, 0x37, // 63671875, -0.577
	0x33, 0x35, 0x30, 0x32, 0x35, 0x38, 0x38, 0x32, 0x37, 0x32, 0x30, 0x39, 0x34, 0x37, 0x32, 0x36, // 3502588272094726
	0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x37, 0x37, 0x33, 0x35, 0x30, 0x32, // 5625, -0.5773502
	0x35, 0x38, 0x38, 0x32, 0x37, 0x32, 0x30, 0x39, 0x34, 0x37, 0x32, 0x36, 0x35, 0x36, 0x32, 0x35, // 5882720947265625
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x32, 0x20, 0x5f, 0x34, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x33, 0x31, 0x2e, 0x78, 0x79, // 2 _435 = _431.xy
	0x20, 0x2d, 0x20, 0x5f, 0x34, 0x32, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  - _428;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x35, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x5f, //  float4 _588 = _
	0x34, 0x33, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x38, // 431;.        _58
	0x38, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x33, 0x35, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, // 8.x = _435.x;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x38, 0x38, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, //       _588.y = _
	0x34, 0x33, 0x35, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 435.y;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x35, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x31, // loat2 _548 = _41
	0x34, 0x20, 0x2d, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x34, 0x31, 0x34, 0x20, // 4 - (floor(_414 
	0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x34, 0x36, 0x30, 0x32, 0x30, 0x37, 0x37, 0x32, 0x31, // * 0.003460207721
	0x32, 0x31, 0x38, 0x34, 0x36, 0x36, 0x37, 0x35, 0x38, 0x37, 0x32, 0x38, 0x30, 0x32, 0x37, 0x33, // 2184667587280273
	0x34, 0x33, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x38, 0x39, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 4375) * 289.0);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x34, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x35, 0x34, // 448 = float3(_54
	0x38, 0x2e, 0x79, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, // 8.y) + float3(0.
	0x30, 0x2c, 0x20, 0x5f, 0x34, 0x32, 0x38, 0x2e, 0x79, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, // 0, _428.y, 1.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x35, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x34, 0x34, 0x38, 0x20, 0x2a, 0x20, 0x33, // _555 = (_448 * 3
	0x34, 0x2e, 0x30, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x30, // 4.0) + float3(10
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .0);.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x66, 0x6d, 0x61, 0x28, // at3 _457 = (fma(
	0x5f, 0x35, 0x35, 0x35, 0x2c, 0x20, 0x5f, 0x34, 0x34, 0x38, 0x2c, 0x20, 0x2d, 0x28, 0x66, 0x6c, // _555, _448, -(fl
	0x6f, 0x6f, 0x72, 0x28, 0x28, 0x5f, 0x35, 0x35, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x34, 0x38, // oor((_555 * _448
	0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x34, 0x36, 0x30, 0x32, 0x30, 0x37, 0x37, // ) * 0.0034602077
	0x32, 0x31, 0x32, 0x31, 0x38, 0x34, 0x36, 0x36, 0x37, 0x35, 0x38, 0x37, 0x32, 0x38, 0x30, 0x32, // 2121846675872802
	0x37, 0x33, 0x34, 0x33, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x38, 0x39, 0x2e, 0x30, 0x29, // 734375) * 289.0)
	0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x35, 0x34, 0x38, 0x2e, // ) + float3(_548.
	0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, // x)) + float3(0.0
	0x2c, 0x20, 0x5f, 0x34, 0x32, 0x38, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // , _428.x, 1.0);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x35, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x34, 0x35, 0x37, 0x20, 0x2a, 0x20, 0x33, 0x34, // 573 = (_457 * 34
	0x2e, 0x30, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x30, 0x2e, // .0) + float3(10.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 0);.        floa
	0x74, 0x33, 0x20, 0x5f, 0x34, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // t3 _475 = fast::
	0x6d, 0x61, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, // max(float3(0.5) 
	0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x34, 0x32, // - float3(dot(_42
	0x31, 0x2c, 0x20, 0x5f, 0x34, 0x32, 0x31, 0x29, 0x2c, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, // 1, _421), dot(_5
	0x38, 0x38, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x5f, 0x35, 0x38, 0x38, 0x2e, 0x78, 0x79, 0x29, 0x2c, // 88.xy, _588.xy),
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x38, 0x38, 0x2e, 0x7a, 0x77, 0x2c, 0x20, 0x5f, 0x35, //  dot(_588.zw, _5
	0x38, 0x38, 0x2e, 0x7a, 0x77, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 88.zw)), float3(
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 0.0));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x37, // loat3 _478 = _47
	0x35, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5 * _475;.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x38, 0x35, 0x20, 0x3d, 0x20, //   float3 _485 = 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x35, 0x37, 0x33, 0x2c, 0x20, // fract(fma(_573, 
	0x5f, 0x34, 0x35, 0x37, 0x2c, 0x20, 0x2d, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x28, 0x5f, // _457, -(floor((_
	0x35, 0x37, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x35, 0x37, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, // 573 * _457) * 0.
	0x30, 0x30, 0x33, 0x34, 0x36, 0x30, 0x32, 0x30, 0x37, 0x37, 0x32, 0x31, 0x32, 0x31, 0x38, 0x34, // 0034602077212184
	0x36, 0x36, 0x37, 0x35, 0x38, 0x37, 0x32, 0x38, 0x30, 0x32, 0x37, 0x33, 0x34, 0x33, 0x37, 0x35, // 6675872802734375
	0x29, 0x20, 0x2a, 0x20, 0x32, 0x38, 0x39, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, // ) * 289.0)) * fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x32, 0x34, 0x33, 0x39, 0x30, 0x32, 0x34, 0x32, // oat3(0.024390242
	0x39, 0x39, 0x33, 0x38, 0x33, 0x31, 0x36, 0x33, 0x34, 0x35, 0x32, 0x31, 0x34, 0x38, 0x34, 0x33, // 9938316345214843
	0x37, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 75)) * 2.0;.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x38, 0x37, 0x20, //     float3 _487 
	0x3d, 0x20, 0x5f, 0x34, 0x38, 0x35, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // = _485 - float3(
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 1.0);.        fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, // oat3 _491 = abs(
	0x5f, 0x34, 0x38, 0x37, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, // _487) - float3(0
	0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .5);.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x38, 0x37, 0x20, // at3 _497 = _487 
	0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x34, 0x38, 0x35, 0x20, 0x2b, 0x20, 0x66, // - floor(_485 + f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // loat3(-0.5));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x38, 0x30, //       float _380
	0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x36, 0x31, 0x37, 0x2c, 0x20, 0x31, 0x33, 0x30, //  = fma(_617, 130
	0x2e, 0x30, 0x20, 0x2a, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x28, 0x5f, 0x34, 0x37, 0x38, 0x20, 0x2a, // .0 * dot((_478 *
	0x20, 0x5f, 0x34, 0x37, 0x38, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  _478) * (float3
	0x28, 0x31, 0x2e, 0x37, 0x39, 0x32, 0x38, 0x34, 0x32, 0x38, 0x36, 0x34, 0x39, 0x39, 0x30, 0x32, // (1.7928428649902
	0x33, 0x34, 0x33, 0x37, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x34, // 34375) - (fma(_4
	0x39, 0x37, 0x2c, 0x20, 0x5f, 0x34, 0x39, 0x37, 0x2c, 0x20, 0x5f, 0x34, 0x39, 0x31, 0x20, 0x2a, // 97, _497, _491 *
	0x20, 0x5f, 0x34, 0x39, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x38, 0x35, 0x33, 0x37, 0x33, //  _491) * 0.85373
	0x34, 0x37, 0x33, 0x31, 0x36, 0x37, 0x34, 0x31, 0x39, 0x34, 0x33, 0x33, 0x35, 0x39, 0x33, 0x37, // 4731674194335937
	0x35, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x66, 0x6d, 0x61, 0x28, // 5)), float3(fma(
	0x5f, 0x34, 0x39, 0x37, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x34, 0x32, 0x31, 0x2e, 0x78, 0x2c, 0x20, // _497.x, _421.x, 
	0x5f, 0x34, 0x39, 0x31, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x32, 0x31, 0x2e, 0x79, 0x29, // _491.x * _421.y)
	0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x34, 0x39, 0x37, 0x2e, 0x79, 0x7a, 0x2c, 0x20, 0x5f, // , fma(_497.yz, _
	0x35, 0x38, 0x38, 0x2e, 0x78, 0x7a, 0x2c, 0x20, 0x5f, 0x34, 0x39, 0x31, 0x2e, 0x79, 0x7a, 0x20, // 588.xz, _491.yz 
	0x2a, 0x20, 0x5f, 0x35, 0x38, 0x38, 0x2e, 0x79, 0x77, 0x29, 0x29, 0x29, 0x2c, 0x20, 0x5f, 0x36, // * _588.yw))), _6
	0x31, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x31, // 16);.        _61
	0x38, 0x20, 0x2a, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x68, 0x65, // 8 *= _mtl_u.u_he
	0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, 0x70, 0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, // ightmap[0].z;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x31, 0x37, 0x20, 0x2a, 0x3d, 0x20, 0x5f, 0x6d, //       _617 *= _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, 0x70, // tl_u.u_heightmap
	0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // [0].w;.        _
	0x36, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x38, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 616 = _380;.    
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x31, 0x35, 0x2b, 0x2b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //     _615++;.    
	0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x3b, 0x0a, 0x20, 0x20, //     continue;.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, //   }.    out.bgfx
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // _FragData0 = flo
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x36, 0x31, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, // at4(_616, 0.0, 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, // .0, 1.0);.    re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x10, // turn out;.}.....
	0x00,                                                                                           // .
};
