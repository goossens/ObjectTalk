static const uint8_t OtBlurFS_mtl[2164] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x10, 0x73, // FSH.o.><.......s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, // _textureSampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, // ..........s_text
	0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // ureTexture......
	0x00, 0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x12, 0x01, 0x00, 0x00, 0x01, // .....u_blur.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, // ......s_texture.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x08, 0x00, 0x00, 0x23, 0x69, 0x6e, // .............#in
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, // clude <metal_std
	0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, // lib>.#include <s
	0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, // imd/simd.h>..usi
	0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, // ng namespace met
	0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, // al;..struct _Glo
	0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // bal.{.    float4
	0x20, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, //  u_blur;.};..str
	0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // uct xlatMtlMain_
	0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // out.{.    float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, //  bgfx_FragData0 
	0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, // [[color(0)]];.};
	0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, // ..struct xlatMtl
	0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // Main_in.{.    fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // oat2 v_texcoord0
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, //  [[user(locn0)]]
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, // ;.};..fragment x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, // latMtlMain_out x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, // latMtlMain(xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, // tlMain_in in [[s
	0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, // tage_in]], const
	0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, // ant _Global& _mt
	0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, // l_u [[buffer(0)]
	0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, // ], texture2d<flo
	0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, // at> s_texture [[
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, // texture(0)]], sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, // mpler s_textureS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, // (0)]]).{.    xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, // tMtlMain_out out
	0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  = {};.    float
	0x34, 0x20, 0x5f, 0x34, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, // 4 _478 = (((((((
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // s_texture.sample
	0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // (s_textureSample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x34, // r, float2(fma(-4
	0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, // .0, _mtl_u.u_blu
	0x72, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // r.x, in.v_texcoo
	0x72, 0x64, 0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x34, 0x2e, 0x30, // rd0.x), fma(-4.0
	0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, // , _mtl_u.u_blur.
	0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // y, in.v_texcoord
	0x30, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x30, 0x30, 0x30, // 0.y))) * 0.05000
	0x30, 0x30, 0x30, 0x30, 0x37, 0x34, 0x35, 0x30, 0x35, 0x38, 0x30, 0x35, 0x39, 0x36, 0x39, 0x32, // 0000745058059692
	0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, // 3828125) + (s_te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, // xture.sample(s_t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, // extureSampler, f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x33, 0x2e, 0x30, 0x2c, 0x20, // loat2(fma(-3.0, 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x78, 0x2c, // _mtl_u.u_blur.x,
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, //  in.v_texcoord0.
	0x78, 0x29, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x33, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, // x), fma(-3.0, _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x69, // tl_u.u_blur.y, i
	0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x29, // n.v_texcoord0.y)
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x33, // )) * 0.090000003
	0x35, 0x37, 0x36, 0x32, 0x37, 0x38, 0x36, 0x38, 0x36, 0x35, 0x32, 0x33, 0x34, 0x33, 0x37, 0x35, // 5762786865234375
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, // )) + (s_texture.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // sample(s_texture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // Sampler, float2(
	0x66, 0x6d, 0x61, 0x28, 0x2d, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // fma(-2.0, _mtl_u
	0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // .u_blur.x, in.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x66, 0x6d, // texcoord0.x), fm
	0x61, 0x28, 0x2d, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // a(-2.0, _mtl_u.u
	0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, // _blur.y, in.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, // xcoord0.y))) * 0
	0x2e, 0x31, 0x31, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x33, 0x31, 0x37, 0x37, 0x39, 0x30, // .119999997317790
	0x39, 0x38, 0x35, 0x31, 0x30, 0x37, 0x34, 0x32, 0x31, 0x38, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2b, // 985107421875)) +
	0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, //  (s_texture.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, // le(s_textureSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x69, 0x6e, 0x2e, 0x76, // ler, float2(in.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x5f, // _texcoord0.x - _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x78, 0x2c, 0x20, // mtl_u.u_blur.x, 
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, // in.v_texcoord0.y
	0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, //  - _mtl_u.u_blur
	0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, // .y)) * 0.1500000
	0x30, 0x35, 0x39, 0x36, 0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, // 0596046447753906
	0x32, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // 25)) + (s_textur
	0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, // e.sample(s_textu
	0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // reSampler, in.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, // texcoord0) * 0.1
	0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x36, 0x34, 0x32, 0x33, 0x37, 0x32, 0x31, 0x33, 0x31, // 5999999642372131
	0x33, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, // 34765625)) + (s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // texture.sample(s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // _textureSampler,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, //  float2(in.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // coord0.x + _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, // u.u_blur.x, in.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x5f, // _texcoord0.y + _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x79, 0x29, 0x29, // mtl_u.u_blur.y))
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, //  * 0.15000000596
	0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x29, 0x29, // 04644775390625))
	0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, //  + (s_texture.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, // mple(s_textureSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x6d, // mpler, float2(fm
	0x61, 0x28, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // a(2.0, _mtl_u.u_
	0x62, 0x6c, 0x75, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, // blur.x, in.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x32, // coord0.x), fma(2
	0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, // .0, _mtl_u.u_blu
	0x72, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, // r.y, in.v_texcoo
	0x72, 0x64, 0x30, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x39, // rd0.y))) * 0.119
	0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x33, 0x31, 0x37, 0x37, 0x39, 0x30, 0x39, 0x38, 0x35, 0x31, // 9999973177909851
	0x30, 0x37, 0x34, 0x32, 0x31, 0x38, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, // 07421875)) + (s_
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // texture.sample(s
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // _textureSampler,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x33, 0x2e, 0x30, 0x2c, //  float2(fma(3.0,
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x78, //  _mtl_u.u_blur.x
	0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // , in.v_texcoord0
	0x2e, 0x78, 0x29, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x33, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, // .x), fma(3.0, _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x69, // tl_u.u_blur.y, i
	0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x29, // n.v_texcoord0.y)
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x33, // )) * 0.090000003
	0x35, 0x37, 0x36, 0x32, 0x37, 0x38, 0x36, 0x38, 0x36, 0x35, 0x32, 0x33, 0x34, 0x33, 0x37, 0x35, // 5762786865234375
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, // );.    out.bgfx_
	0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x34, 0x37, // FragData0 = (_47
	0x38, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, // 8 + (s_texture.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, // ample(s_textureS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, // ampler, float2(f
	0x6d, 0x61, 0x28, 0x34, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // ma(4.0, _mtl_u.u
	0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x78, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, // _blur.x, in.v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, // xcoord0.x), fma(
	0x34, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, // 4.0, _mtl_u.u_bl
	0x75, 0x72, 0x2e, 0x79, 0x2c, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, // ur.y, in.v_texco
	0x6f, 0x72, 0x64, 0x30, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x35, // ord0.y))) * 0.05
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x34, 0x35, 0x30, 0x35, 0x38, 0x30, 0x35, 0x39, // 0000000745058059
	0x36, 0x39, 0x32, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x66, // 6923828125)) * f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x62, // loat4(_mtl_u.u_b
	0x6c, 0x75, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // lur.z, _mtl_u.u_
	0x62, 0x6c, 0x75, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // blur.z, _mtl_u.u
	0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // _blur.z, _mtl_u.
	0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // u_blur.z * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // u.u_blur.w);.   
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, //  return out;.}..
	0x00, 0x00, 0x30, 0x00,                                                                         // ..0.
};
