static const uint8_t OtFxaaFS_mtl[3211] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x1b, 0x73, // FSH.o.><.......s
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, // _postProcessText
	0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // ureSampler......
	0x00, 0x00, 0x00, 0x00, 0x1b, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, // .....s_postProce
	0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ssTextureTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, 0x66, 0x78, 0x61, // ...........u_fxa
	0x61, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x73, 0x5f, 0x70, 0x6f, // a...........s_po
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // stProcessTexture
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf9, 0x0b, 0x00, 0x00, 0x23, 0x69, // ..............#i
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, // nclude <metal_st
	0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, // dlib>.#include <
	0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, // simd/simd.h>..us
	0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, // ing namespace me
	0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, // tal;..struct _Gl
	0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // obal.{.    float
	0x34, 0x20, 0x75, 0x5f, 0x66, 0x78, 0x61, 0x61, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, // 4 u_fxaa;.};..st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, // ruct xlatMtlMain
	0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _out.{.    float
	0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, // 4 bgfx_FragData0
	0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, //  [[color(0)]];.}
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, // ;..struct xlatMt
	0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // lMain_in.{.    f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // loat2 v_texcoord
	0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, // 0 [[user(locn0)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, // ];.};..fragment 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, // xlatMtlMain_out 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, // xlatMtlMain(xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, // MtlMain_in in [[
	0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // stage_in]], cons
	0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, // tant _Global& _m
	0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, // tl_u [[buffer(0)
	0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, // ]], texture2d<fl
	0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, // oat> s_postProce
	0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, // ssTexture [[text
	0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ure(0)]], sample
	0x72, 0x20, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, // r s_postProcessT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, // extureSampler [[
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, // sampler(0)]]).{.
	0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, //     xlatMtlMain_
	0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // out out = {};.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x64, //   float _439 = d
	0x6f, 0x74, 0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, // ot(s_postProcess
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // Texture.sample(s
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, // _postProcessText
	0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // ureSampler, (in.
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x66, 0x6c, // v_texcoord0 + fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x66, // oat2(-_mtl_u.u_f
	0x78, 0x61, 0x61, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // xaa.x, -_mtl_u.u
	0x5f, 0x66, 0x78, 0x61, 0x61, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // _fxaa.y))).xyz, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x38, 0x39, 0x39, 0x39, 0x39, // float3(0.2989999
	0x39, 0x34, 0x39, 0x39, 0x33, 0x32, 0x30, 0x39, 0x38, 0x33, 0x38, 0x38, 0x36, 0x37, 0x31, 0x38, // 9499320983886718
	0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x30, 0x30, 0x30, 0x30, 0x31, 0x32, 0x33, // 75, 0.5870000123
	0x39, 0x37, 0x37, 0x36, 0x36, 0x31, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, // 9776611328125, 0
	0x2e, 0x31, 0x31, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, 0x30, 0x34, // .114000000059604
	0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, // 644775390625));.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x32, 0x20, 0x3d, //     float _442 =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, //  dot(s_postProce
	0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ssTexture.sample
	0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, // (s_postProcessTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, // xtureSampler, (i
	0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, // n.v_texcoord0 + 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // float2(_mtl_u.u_
	0x66, 0x78, 0x61, 0x61, 0x2e, 0x78, 0x2c, 0x20, 0x2d, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // fxaa.x, -_mtl_u.
	0x75, 0x5f, 0x66, 0x78, 0x61, 0x61, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // u_fxaa.y))).xyz,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x38, 0x39, 0x39, 0x39, //  float3(0.298999
	0x39, 0x39, 0x34, 0x39, 0x39, 0x33, 0x32, 0x30, 0x39, 0x38, 0x33, 0x38, 0x38, 0x36, 0x37, 0x31, // 9949932098388671
	0x38, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x30, 0x30, 0x30, 0x30, 0x31, 0x32, // 875, 0.587000012
	0x33, 0x39, 0x37, 0x37, 0x36, 0x36, 0x31, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, // 39776611328125, 
	0x30, 0x2e, 0x31, 0x31, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, 0x30, // 0.11400000005960
	0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x29, 0x29, 0x3b, // 4644775390625));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x35, 0x20, // .    float _445 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, // = dot(s_postProc
	0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // essTexture.sampl
	0x65, 0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, // e(s_postProcessT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // extureSampler, (
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, // in.v_texcoord0 +
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  float2(-_mtl_u.
	0x75, 0x5f, 0x66, 0x78, 0x61, 0x61, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // u_fxaa.x, _mtl_u
	0x2e, 0x75, 0x5f, 0x66, 0x78, 0x61, 0x61, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, // .u_fxaa.y))).xyz
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x38, 0x39, 0x39, // , float3(0.29899
	0x39, 0x39, 0x39, 0x34, 0x39, 0x39, 0x33, 0x32, 0x30, 0x39, 0x38, 0x33, 0x38, 0x38, 0x36, 0x37, // 9994993209838867
	0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x30, 0x30, 0x30, 0x30, 0x31, // 1875, 0.58700001
	0x32, 0x33, 0x39, 0x37, 0x37, 0x36, 0x36, 0x31, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x2c, // 239776611328125,
	0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, //  0.1140000000596
	0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x29, 0x29, // 04644775390625))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x38, // ;.    float _448
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, //  = dot(s_postPro
	0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, // cessTexture.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, // le(s_postProcess
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // TextureSampler, 
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, // (in.v_texcoord0 
	0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // + float2(_mtl_u.
	0x75, 0x5f, 0x66, 0x78, 0x61, 0x61, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // u_fxaa.x, _mtl_u
	0x2e, 0x75, 0x5f, 0x66, 0x78, 0x61, 0x61, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, // .u_fxaa.y))).xyz
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x38, 0x39, 0x39, // , float3(0.29899
	0x39, 0x39, 0x39, 0x34, 0x39, 0x39, 0x33, 0x32, 0x30, 0x39, 0x38, 0x33, 0x38, 0x38, 0x36, 0x37, // 9994993209838867
	0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x30, 0x30, 0x30, 0x30, 0x31, // 1875, 0.58700001
	0x32, 0x33, 0x39, 0x37, 0x37, 0x36, 0x36, 0x31, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x2c, // 239776611328125,
	0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, //  0.1140000000596
	0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x29, 0x29, // 04644775390625))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x35, 0x31, // ;.    float _451
	0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, //  = dot(s_postPro
	0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, // cessTexture.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, // le(s_postProcess
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // TextureSampler, 
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x29, 0x2e, // in.v_texcoord0).
	0x78, 0x79, 0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, // xyz, float3(0.29
	0x38, 0x39, 0x39, 0x39, 0x39, 0x39, 0x34, 0x39, 0x39, 0x33, 0x32, 0x30, 0x39, 0x38, 0x33, 0x38, // 8999994993209838
	0x38, 0x36, 0x37, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x30, 0x30, // 8671875, 0.58700
	0x30, 0x30, 0x31, 0x32, 0x33, 0x39, 0x37, 0x37, 0x36, 0x36, 0x31, 0x31, 0x33, 0x32, 0x38, 0x31, // 0012397766113281
	0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // 25, 0.1140000000
	0x35, 0x39, 0x36, 0x30, 0x34, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, // 5960464477539062
	0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // 5));.    float _
	0x34, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x2d, 0x28, 0x28, 0x5f, 0x34, 0x33, 0x39, 0x20, 0x2b, 0x20, // 477 = -((_439 + 
	0x5f, 0x34, 0x34, 0x32, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x34, 0x34, 0x35, 0x20, 0x2b, 0x20, // _442) - (_445 + 
	0x5f, 0x34, 0x34, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _448));.    floa
	0x74, 0x20, 0x5f, 0x34, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x34, 0x33, 0x39, 0x20, 0x2b, // t _484 = (_439 +
	0x20, 0x5f, 0x34, 0x34, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x34, 0x34, 0x32, 0x20, 0x2b, //  _445) - (_442 +
	0x20, 0x5f, 0x34, 0x34, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  _448);.    floa
	0x74, 0x32, 0x20, 0x5f, 0x35, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // t2 _515 = fast::
	0x6d, 0x69, 0x6e, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x38, 0x2e, 0x30, 0x29, 0x2c, // min(float2(8.0),
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  fast::max(float
	0x32, 0x28, 0x2d, 0x38, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // 2(-8.0), float2(
	0x5f, 0x34, 0x37, 0x37, 0x2c, 0x20, 0x5f, 0x34, 0x38, 0x34, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, // _477, _484) * (1
	0x2e, 0x30, 0x20, 0x2f, 0x20, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, // .0 / (fast::min(
	0x61, 0x62, 0x73, 0x28, 0x5f, 0x34, 0x37, 0x37, 0x29, 0x2c, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, // abs(_477), abs(_
	0x34, 0x38, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // 484)) + fast::ma
	0x78, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x34, 0x33, 0x39, 0x20, 0x2b, 0x20, 0x5f, 0x34, 0x34, 0x32, // x((((_439 + _442
	0x29, 0x20, 0x2b, 0x20, 0x5f, 0x34, 0x34, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x34, 0x34, 0x38, // ) + _445) + _448
	0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, // ) * 0.03125, 0.0
	0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, // 078125))))) * fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x66, 0x78, // oat2(_mtl_u.u_fx
	0x61, 0x61, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x66, // aa.x, _mtl_u.u_f
	0x78, 0x61, 0x61, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // xaa.y);.    floa
	0x74, 0x34, 0x20, 0x5f, 0x36, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, // t4 _631 = s_post
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, // ProcessTexture.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, // ample(s_postProc
	0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // essTextureSample
	0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // r, (in.v_texcoor
	0x64, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x5f, 0x35, 0x31, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x30, // d0 + (_515 * (-0
	0x2e, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x31, 0x36, 0x33, 0x33, 0x37, 0x32, 0x30, // .166666671633720
	0x33, 0x39, 0x37, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x29, 0x29, 0x29, 0x29, 0x3b, // 39794921875))));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x36, 0x34, 0x30, // .    float4 _640
	0x20, 0x3d, 0x20, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, //  = s_postProcess
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // Texture.sample(s
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, // _postProcessText
	0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x69, 0x6e, 0x2e, // ureSampler, (in.
	0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x5f, // v_texcoord0 + (_
	0x35, 0x31, 0x35, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, // 515 * 0.16666667
	0x31, 0x36, 0x33, 0x33, 0x37, 0x32, 0x30, 0x33, 0x39, 0x37, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, // 1633720397949218
	0x37, 0x35, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 75)));.    float
	0x33, 0x20, 0x5f, 0x35, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x36, 0x33, 0x31, 0x2e, 0x78, // 3 _531 = (_631.x
	0x79, 0x7a, 0x20, 0x2b, 0x20, 0x5f, 0x36, 0x34, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, // yz + _640.xyz) *
	0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //  0.5;.    float4
	0x20, 0x5f, 0x36, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, //  _649 = s_postPr
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, // ocessTexture.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, // ple(s_postProces
	0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // sTextureSampler,
	0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, //  (in.v_texcoord0
	0x20, 0x2b, 0x20, 0x28, 0x5f, 0x35, 0x31, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x30, 0x2e, 0x35, //  + (_515 * (-0.5
	0x29, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ))));.    float4
	0x20, 0x5f, 0x36, 0x35, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, //  _658 = s_postPr
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, // ocessTexture.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, // ple(s_postProces
	0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // sTextureSampler,
	0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, //  (in.v_texcoord0
	0x20, 0x2b, 0x20, 0x28, 0x5f, 0x35, 0x31, 0x35, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, //  + (_515 * 0.5))
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, // );.    float3 _5
	0x35, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x35, 0x33, 0x31, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, // 50 = (_531 * 0.5
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x36, 0x34, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2b, // ) + ((_649.xyz +
	0x20, 0x5f, 0x36, 0x35, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, //  _658.xyz) * 0.2
	0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, // 5);.    float _5
	0x35, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x35, 0x30, 0x2c, 0x20, 0x66, // 53 = dot(_550, f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x38, 0x39, 0x39, 0x39, 0x39, 0x39, // loat3(0.29899999
	0x34, 0x39, 0x39, 0x33, 0x32, 0x30, 0x39, 0x38, 0x33, 0x38, 0x38, 0x36, 0x37, 0x31, 0x38, 0x37, // 4993209838867187
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x30, 0x30, 0x30, 0x30, 0x31, 0x32, 0x33, 0x39, // 5, 0.58700001239
	0x37, 0x37, 0x36, 0x36, 0x31, 0x31, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, // 776611328125, 0.
	0x31, 0x31, 0x34, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x35, 0x39, 0x36, 0x30, 0x34, 0x36, // 1140000000596046
	0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 44775390625));. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x36, 0x39, 0x38, 0x3b, 0x0a, //    float4 _698;.
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x5f, 0x35, 0x35, 0x33, 0x20, 0x3c, 0x20, //     if ((_553 < 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x34, 0x35, 0x31, 0x2c, 0x20, // fast::min(_451, 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // fast::min(fast::
	0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x34, 0x33, 0x39, 0x2c, 0x20, 0x5f, 0x34, 0x34, 0x32, 0x29, 0x2c, // min(_439, _442),
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, 0x6e, 0x28, 0x5f, 0x34, 0x34, 0x35, 0x2c, //  fast::min(_445,
	0x20, 0x5f, 0x34, 0x34, 0x38, 0x29, 0x29, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x5f, 0x35, //  _448)))) || (_5
	0x35, 0x33, 0x20, 0x3e, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, // 53 > fast::max(_
	0x34, 0x35, 0x31, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, // 451, fast::max(f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x34, 0x33, 0x39, 0x2c, 0x20, 0x5f, // ast::max(_439, _
	0x34, 0x34, 0x32, 0x29, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 442), fast::max(
	0x5f, 0x34, 0x34, 0x35, 0x2c, 0x20, 0x5f, 0x34, 0x34, 0x38, 0x29, 0x29, 0x29, 0x29, 0x29, 0x0a, // _445, _448))))).
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, //     {.        _6
	0x39, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x35, 0x33, 0x31, // 98 = float4(_531
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // , 1.0);.    }.  
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //   else.    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x39, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, //      _698 = floa
	0x74, 0x34, 0x28, 0x5f, 0x35, 0x35, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // t4(_550, 1.0);. 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, //    }.    out.bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x36, // x_FragData0 = _6
	0x39, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, // 98;.    return o
	0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x30, 0x00,                               // ut;.}....0.
};
