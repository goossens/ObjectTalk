static const uint8_t OtForwardPbrFS_mtl[18632] =
{
	0x46, 0x53, 0x48, 0x0b, 0x19, 0x67, 0x93, 0x59, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x06, 0x75, // FSH..g.Y....*..u
	0x5f, 0x63, 0x6c, 0x69, 0x70, 0x12, 0x01, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, // _clip..@........
	0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x53, 0x61, 0x6d, 0x70, // s_iblBrdfLutSamp
	0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, // ler...........s_
	0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // iblBrdfLutTextur
	0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x69, 0x62, // e...........s_ib
	0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x61, // lIrradianceMapSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, // mpler...........
	0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, // s_iblIrradianceM
	0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, // apTexture.......
	0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, // ....s_iblEnviron
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, // mentMapSampler..
	0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, // .........s_iblEn
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, // vironmentMapText
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, // ure...........s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap0Sample
	0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, // r...........s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, // adowMap0Texture.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ..........s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // owMap1Sampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // ........s_shadow
	0x4d, 0x61, 0x70, 0x31, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // Map1Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ......s_shadowMa
	0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, // p2Sampler.......
	0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // ....s_shadowMap2
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Texture.........
	0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, // ..s_shadowMap3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, // mpler...........
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x54, 0x65, 0x78, 0x74, // s_shadowMap3Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x75, 0x5f, // ure...........u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x02, 0x90, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // shadow..........
	0x19, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // .u_shadowViewPro
	0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x14, 0x04, 0xb0, 0x00, 0x10, 0x00, // jTransform......
	0x00, 0x00, 0x00, 0x00, 0x16, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, // .....s_albedoTex
	0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, // tureSampler.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, // ......s_albedoTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // xtureTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, // ......!s_metalli
	0x63, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // cRoughnessTextur
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // eSampler........
	0x00, 0x00, 0x21, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, 0x75, // ..!s_metallicRou
	0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, // ghnessTextureTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x73, // ture...........s
	0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // _emissiveTexture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x18, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, // ..s_emissiveText
	0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // ureTexture......
	0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x61, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .....s_aoTexture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x12, 0x73, 0x5f, 0x61, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, // ..s_aoTextureTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x73, // ture...........s
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, // _normalTextureSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // mpler...........
	0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, // s_normalTextureT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x0a, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x05, 0xb0, 0x01, 0x05, // .u_material.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // ......u_lighting
	0x12, 0x04, 0x50, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, 0x76, 0x69, 0x65, // ..P........u_vie
	0x77, 0x14, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, 0x69, 0x62, // w...........s_ib
	0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // lBrdfLut........
	0x00, 0x00, 0x12, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, // ...s_iblIrradian
	0x63, 0x65, 0x4d, 0x61, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, // ceMap...........
	0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, // s_iblEnvironment
	0x4d, 0x61, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, // Map...........s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // shadowMap0......
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // .....s_shadowMap
	0x31, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, 0x73, 0x68, // 1...........s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // adowMap2........
	0x00, 0x00, 0x0c, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x10, // ...s_shadowMap3.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, // ..........s_albe
	0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // doTexture.......
	0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, // ....s_metallicRo
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, // ughnessTexture..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, // .........s_emiss
	0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // iveTexture......
	0x00, 0x00, 0x00, 0x00, 0x0b, 0x73, 0x5f, 0x61, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .....s_aoTexture
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x73, 0x5f, 0x6e, 0x6f, 0x72, // ...........s_nor
	0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // malTexture......
	0x00, 0x00, 0x00, 0x00, 0xdc, 0x43, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, // .....C..#include
	0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, //  <metal_stdlib>.
	0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, // #include <simd/s
	0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, // imd.h>..using na
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, // mespace metal;..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, // struct _Global.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // .    float4x4 u_
	0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // view;.    float4
	0x20, 0x75, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //  u_clip;.    flo
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x34, // at4 u_lighting[4
	0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // ];.    float4 u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // shadow[2];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // loat4x4 u_shadow
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, // ViewProjTransfor
	0x6d, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // m[4];.    float4
	0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x35, 0x5d, 0x3b, 0x0a, //  u_material[5];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // };..struct xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // tlMain_out.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, //  float4 bgfx_Fra
	0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, // gData0 [[color(0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // )]];.};..struct 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, // xlatMtlMain_in.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x62, 0x69, // .    float3 v_bi
	0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, // tangent [[user(l
	0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // ocn0)]];.    flo
	0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, // at3 v_normal [[u
	0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // ser(locn1)]];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //   float3 v_posit
	0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, // ion [[user(locn2
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // )]];.    float3 
	0x76, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, // v_tangent [[user
	0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // (locn3)]];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // loat2 v_texcoord
	0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x34, 0x29, 0x5d, // 0 [[user(locn4)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, // ];.};..fragment 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, // xlatMtlMain_out 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, // xlatMtlMain(xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, // MtlMain_in in [[
	0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // stage_in]], cons
	0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, // tant _Global& _m
	0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, // tl_u [[buffer(0)
	0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, // ]], texture2d<fl
	0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, // oat> s_albedoTex
	0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, // ture [[texture(0
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, // )]], texture2d<f
	0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, // loat> s_metallic
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // RoughnessTexture
	0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, //  [[texture(1)]],
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  texture2d<float
	0x3e, 0x20, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, // > s_emissiveText
	0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, // ure [[texture(2)
	0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, // ]], texture2d<fl
	0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x61, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat> s_aoTexture
	0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, //  [[texture(3)]],
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  texture2d<float
	0x3e, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // > s_normalTextur
	0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x34, 0x29, 0x5d, 0x5d, // e [[texture(4)]]
	0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, // , texture2d<floa
	0x74, 0x3e, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x20, // t> s_iblBrdfLut 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x35, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(5)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x63, 0x75, 0x62, 0x65, 0x3c, 0x66, 0x6c, 0x6f, 0x61, // texturecube<floa
	0x74, 0x3e, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, // t> s_iblIrradian
	0x63, 0x65, 0x4d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // ceMap [[texture(
	0x36, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x63, 0x75, 0x62, // 6)]], texturecub
	0x65, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, // e<float> s_iblEn
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, // vironmentMap [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x37, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, // exture(7)]], tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, // ture2d<float> s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, // shadowMap0 [[tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x38, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ture(8)]], textu
	0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, // re2d<float> s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // adowMap1 [[textu
	0x72, 0x65, 0x28, 0x39, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // re(9)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // 2d<float> s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // owMap2 [[texture
	0x28, 0x31, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // (10)]], texture2
	0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // d<float> s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // wMap3 [[texture(
	0x31, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, // 11)]], sampler s
	0x5f, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, // _albedoTextureSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, // mpler [[sampler(
	0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, // 0)]], sampler s_
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, // metallicRoughnes
	0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // sTextureSampler 
	0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[sampler(1)]], 
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, // sampler s_emissi
	0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // veTextureSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, //  [[sampler(2)]],
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x61, 0x6f, 0x54, 0x65, 0x78, //  sampler s_aoTex
	0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, // tureSampler [[sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, // mpler(3)]], samp
	0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, // ler s_normalText
	0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, // ureSampler [[sam
	0x70, 0x6c, 0x65, 0x72, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // pler(4)]], sampl
	0x65, 0x72, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x53, // er s_iblBrdfLutS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x35, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, // (5)]], sampler s
	0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, // _iblIrradianceMa
	0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, // pSampler [[sampl
	0x65, 0x72, 0x28, 0x36, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // er(6)]], sampler
	0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, //  s_iblEnvironmen
	0x74, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, // tMapSampler [[sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x37, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, // mpler(7)]], samp
	0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, // ler s_shadowMap0
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Sampler [[sample
	0x72, 0x28, 0x38, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // r(8)]], sampler 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap1Samp
	0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x39, 0x29, // ler [[sampler(9)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, // ]], sampler s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // adowMap2Sampler 
	0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x30, 0x29, 0x5d, 0x5d, 0x2c, // [[sampler(10)]],
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, //  sampler s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, // wMap3Sampler [[s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x31, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, // ampler(11)]]).{.
	0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, //     xlatMtlMain_
	0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // out out = {};.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //   if (dot(_mtl_u
	0x2e, 0x75, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // .u_clip, float4(
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, // in.v_position, 1
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // .0)) < 0.0).    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, // {.        discar
	0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, // d_fragment();.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, //   }.    float2 _
	0x31, 0x34, 0x39, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, // 1496 = (in.v_tex
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // coord0 * _mtl_u.
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x7a, 0x29, // u_material[3].z)
	0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, //  + _mtl_u.u_mate
	0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // rial[3].xy;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x31, 0x3b, 0x0a, 0x20, 0x20, // float4 _5761;.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, //   if (_mtl_u.u_m
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, // aterial[3].w != 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0).    {.     
	0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x61, 0x6c, 0x62, //    _5761 = s_alb
	0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // edoTexture.sampl
	0x65, 0x28, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // e(s_albedoTextur
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x36, 0x29, // eSampler, _1496)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, //  * _mtl_u.u_mate
	0x72, 0x69, 0x61, 0x6c, 0x5b, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // rial[0];.    }. 
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //    else.    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x6d, //       _5761 = _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, // tl_u.u_material[
	0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // 0];.    }.    if
	0x20, 0x28, 0x5f, 0x35, 0x37, 0x36, 0x31, 0x2e, 0x77, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x33, 0x30, //  (_5761.w < 0.30
	0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x31, 0x39, 0x32, 0x30, 0x39, 0x32, 0x38, 0x39, 0x35, 0x35, // 0000011920928955
	0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // 078125).    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, //       discard_fr
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, // agment();.    }.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x33, //     float3 _1713
	0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x35, 0x37, 0x36, 0x31, 0x2e, 0x78, 0x79, //  = powr(_5761.xy
	0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x32, 0x2e, 0x32, 0x30, 0x30, 0x30, // z, float3(2.2000
	0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, // 0004768371582031
	0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 25));.    float3
	0x20, 0x5f, 0x35, 0x37, 0x36, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, //  _5762;.    if (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, // _mtl_u.u_materia
	0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // l[4].w != 0.0). 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, //    {.        _57
	0x36, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // 62 = fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, // lize(((s_normalT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // exture.sample(s_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, // normalTextureSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x36, 0x29, 0x2e, 0x78, 0x79, 0x7a, // pler, _1496).xyz
	0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //  * 2.0) - float3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // (1.0)) * transpo
	0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x61, 0x73, 0x74, // se(float3x3(fast
	0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, // ::normalize(in.v
	0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x29, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // _tangent), fast:
	0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // :normalize(in.v_
	0x62, 0x69, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x29, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, // bitangent), fast
	0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, // ::normalize(in.v
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _normal))));.   
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //  }.    else.    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x32, 0x20, // {.        _5762 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // = fast::normaliz
	0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, // e(in.v_normal);.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //     }.    float4
	0x20, 0x5f, 0x31, 0x37, 0x35, 0x34, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  _1754 = s_metal
	0x6c, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, // licRoughnessText
	0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6d, 0x65, 0x74, // ure.sample(s_met
	0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, // allicRoughnessTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, // xtureSampler, _1
	0x34, 0x39, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 496);.    float 
	0x5f, 0x31, 0x35, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // _1562 = (_mtl_u.
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x20, // u_material[4].x 
	0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x35, 0x34, // != 0.0) ? (_1754
	0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, // .z * _mtl_u.u_ma
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x20, 0x3a, 0x20, 0x5f, // terial[1].x) : _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, // mtl_u.u_material
	0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // [1].x;.    float
	0x34, 0x20, 0x5f, 0x31, 0x37, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, // 4 _1763 = s_meta
	0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, // llicRoughnessTex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6d, 0x65, // ture.sample(s_me
	0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, // tallicRoughnessT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // extureSampler, _
	0x31, 0x34, 0x39, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 1496);.    float
	0x20, 0x5f, 0x31, 0x35, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  _1576 = (_mtl_u
	0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x78, // .u_material[4].x
	0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x36, //  != 0.0) ? (_176
	0x33, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, // 3.y * _mtl_u.u_m
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x3a, 0x20, // aterial[1].y) : 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, // _mtl_u.u_materia
	0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // l[1].y;.    floa
	0x74, 0x34, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x61, 0x6f, 0x54, // t4 _1772 = s_aoT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // exture.sample(s_
	0x61, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // aoTextureSampler
	0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // , _1496);.    fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, // oat _1590 = (_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, // l_u.u_material[4
	0x5d, 0x2e, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, // ].z != 0.0) ? (_
	0x31, 0x37, 0x37, 0x32, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 1772.x * _mtl_u.
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, // u_material[1].z)
	0x20, 0x3a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, //  : _mtl_u.u_mate
	0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // rial[1].z;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, // loat3 _1597 = fa
	0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, // st::normalize(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, // tl_u.u_lighting[
	0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, // 0].xyz - in.v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // sition);.    flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, // at3 _5767;.    i
	0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // f (_mtl_u.u_ligh
	0x74, 0x69, 0x6e, 0x67, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // ting[0].w != 0.0
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).    {.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x66, // float3 _1606 = f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, // ast::normalize(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // mtl_u.u_lighting
	0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [1].xyz);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x36, 0x32, 0x32, 0x20, 0x3d, //   float4 _1622 =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x20, 0x2a, //  _mtl_u.u_view *
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, //  float4(in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ition, 1.0);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x33, //      float _5763
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, // ;.        do.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, //    if (_mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, // shadow[0].x != 0
	0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0).            
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x31, 0x34, 0x20, 0x3d, 0x20, //   float _1814 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x30, 0x30, // fast::max(0.0500
	0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x34, 0x35, 0x30, 0x35, 0x38, 0x30, 0x35, 0x39, 0x36, 0x39, // 0000074505805969
	0x32, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // 23828125 * (1.0 
	0x2d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x36, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x36, // - dot(_5762, _16
	0x30, 0x36, 0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, // 06)), 0.00499999
	0x39, 0x38, 0x38, 0x38, 0x32, 0x34, 0x31, 0x32, 0x39, 0x31, 0x30, 0x34, 0x36, 0x31, 0x34, 0x32, // 9888241291046142
	0x35, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 578125);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, //          if ((-_
	0x31, 0x36, 0x32, 0x32, 0x2e, 0x7a, 0x29, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 1622.z) < _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x0a, // .u_shadow[1].x).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x38, //       float4 _18
	0x32, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 29 = _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, // adowViewProjTran
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sform[0] * float
	0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, // 4(in.v_position,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  1.0);.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x34, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x32, 0x39, 0x20, // 4 _1834 = _1829 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x38, 0x32, 0x39, 0x2e, 0x77, // / float4(_1829.w
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x31, //        float2 _1
	0x39, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x31, // 970 = float2((_1
	0x38, 0x33, 0x34, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, // 834.x + 1.0) * 0
	0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x38, 0x33, // .5, 1.0 - ((_183
	0x34, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, // 4.y + 1.0) * 0.5
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, //         float _1
	0x38, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x31, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x32, // 843 = _1814 * (2
	0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // .0 / _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // adow[1].x);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, // float _1846 = _1
	0x38, 0x33, 0x34, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 834.z;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, //  _2140 = (((((((
	0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, // (step(_1846, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap0.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, // (s_shadowMap0Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, // pler, (_1970 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // float2(-1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, // ].y))).x + _1843
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x2c, 0x20, // ) + step(_1846, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap0.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, // ple(s_shadowMap0
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x30, 0x20, // Sampler, (_1970 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, // + (float2(-1.5, 
	0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // -0.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _1843)) + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_1846, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap0.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap0Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_1970 + (flo
	0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(-1.5, 0.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, // [0].y))).x + _18
	0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, // 43)) + step(_184
	0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, // 6, s_shadowMap0.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, // ap0Sampler, (_19
	0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, // 70 + (float2(-1.
	0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, // ).x + _1843)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_1846, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap0.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap0Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_1970 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, // loat2(-0.5, -1.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, // dow[0].y))).x + 
	0x5f, 0x31, 0x38, 0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // _1843)) + step(_
	0x31, 0x38, 0x34, 0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 1846, s_shadowMa
	0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p0.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap0Sampler, (
	0x5f, 0x31, 0x39, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _1970 + (float2(
	0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // -0.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _1843)) + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_1846, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap0.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap0Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_1970 + (flo
	0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(-0.5, 0.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, // [0].y))).x + _18
	0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, // 43)) + step(_184
	0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, // 6, s_shadowMap0.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, // ap0Sampler, (_19
	0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, // 70 + (float2(-0.
	0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, // ).x + _1843)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_1846, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap0.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap0Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_1970 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, // loat2(0.5, -1.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // ow[0].y))).x + _
	0x31, 0x38, 0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, // 1843)) + step(_1
	0x38, 0x34, 0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 846, s_shadowMap
	0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 0.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap0Sampler, (_
	0x31, 0x39, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // 1970 + (float2(0
	0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // .5, -0.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x29, 0x3b, 0x0a, // ))).x + _1843);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, //     _5763 = ((((
	0x28, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // ((_2140 + step(_
	0x31, 0x38, 0x34, 0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 1846, s_shadowMa
	0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p0.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap0Sampler, (
	0x5f, 0x31, 0x39, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _1970 + (float2(
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, //  + _1843)) + ste
	0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p(_1846, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap0.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap0Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_1970 + (floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // t2(0.5, 1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, // ].y))).x + _1843
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x2c, // )) + step(_1846,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, //  s_shadowMap0.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x30, // 0Sampler, (_1970
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, //  + (float2(1.5, 
	0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // -1.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _1843)) + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_1846, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap0.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap0Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_1970 + (flo
	0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(1.5, -0.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, // [0].y))).x + _18
	0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, // 43)) + step(_184
	0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, // 6, s_shadowMap0.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, // ap0Sampler, (_19
	0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, // 70 + (float2(1.5
	0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 0.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // .x + _1843)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_1846, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap0.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap0Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_1970 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // oat2(1.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x29, 0x29, 0x20, // ))).x + _1843)) 
	0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // * 0.0625;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //        else.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x32, 0x32, 0x2e, 0x7a, 0x29, //   if ((-_1622.z)
	0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  < _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ow[1].y).       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, //        float4 _1
	0x38, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // 863 = _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, // hadowViewProjTra
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x31, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, // nsform[1] * floa
	0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // t4(in.v_position
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 1.0);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x38, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x5f, // float4 _1868 = _
	0x31, 0x38, 0x36, 0x33, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, // 1863 / float4(_1
	0x38, 0x36, 0x33, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 863.w);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x32, 0x35, 0x35, 0x30, 0x20, 0x3d, 0x20, 0x66, // float2 _2550 = f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x31, 0x38, 0x36, 0x38, 0x2e, 0x78, 0x20, 0x2b, // loat2((_1868.x +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, //  1.0) * 0.5, 1.0
	0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x38, 0x36, 0x38, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, //  - ((_1868.y + 1
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // .0) * 0.5));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, //      float _1877
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x31, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, //  = _1814 * (2.0 
	0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // / _mtl_u.u_shado
	0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w[1].y);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x5f, //  float _1880 = _
	0x31, 0x38, 0x36, 0x38, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1868.z;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x37, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, // float _2720 = ((
	0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, // ((((((step(_1880
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, // , s_shadowMap1.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, // p1Sampler, (_255
	0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, // 0 + (float2(-1.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, // dow[0].y))).x + 
	0x5f, 0x31, 0x38, 0x37, 0x37, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, // _1877) + step(_1
	0x38, 0x38, 0x30, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 880, s_shadowMap
	0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 1.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap1Sampler, (_
	0x32, 0x35, 0x35, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, // 2550 + (float2(-
	0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // 1.5, -0.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, 0x29, 0x29, // y))).x + _1877))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x2c, 0x20, 0x73, //  + step(_1880, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap1.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, // le(s_shadowMap1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x30, 0x20, 0x2b, // ampler, (_2550 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, //  (float2(-1.5, 0
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, // hadow[0].y))).x 
	0x2b, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // + _1877)) + step
	0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_1880, s_shadow
	0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map1.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap1Sampler,
	0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_2550 + (float
	0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(-1.5, 1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, // ].y))).x + _1877
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x2c, // )) + step(_1880,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, //  s_shadowMap1.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x30, // 1Sampler, (_2550
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, //  + (float2(-0.5,
	0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  -1.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // .x + _1877)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_1880, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap1.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap1Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_2550 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // oat2(-0.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, 0x29, 0x29, // y))).x + _1877))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x2c, 0x20, 0x73, //  + step(_1880, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap1.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, // le(s_shadowMap1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x30, 0x20, 0x2b, // ampler, (_2550 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, //  (float2(-0.5, 0
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, // hadow[0].y))).x 
	0x2b, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // + _1877)) + step
	0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_1880, s_shadow
	0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map1.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap1Sampler,
	0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_2550 + (float
	0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(-0.5, 1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, // ].y))).x + _1877
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x2c, // )) + step(_1880,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, //  s_shadowMap1.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x30, // 1Sampler, (_2550
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, //  + (float2(0.5, 
	0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // -1.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _1877)) + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_1880, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap1.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap1Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_2550 + (flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(0.5, -0.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, // [0].y))).x + _18
	0x37, 0x37, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 77);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, //              _57
	0x36, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x32, 0x37, 0x32, 0x30, // 63 = ((((((_2720
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x2c, 0x20, 0x73, //  + step(_1880, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap1.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, // le(s_shadowMap1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x30, 0x20, 0x2b, // ampler, (_2550 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, //  (float2(0.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x37, // 0].y))).x + _187
	0x37, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, // 7)) + step(_1880
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, // , s_shadowMap1.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, // p1Sampler, (_255
	0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, // 0 + (float2(0.5,
	0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  1.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _1877)) + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_1880, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap1.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap1Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_2550 + (flo
	0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(1.5, -1.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, // [0].y))).x + _18
	0x37, 0x37, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, // 77)) + step(_188
	0x30, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, // 0, s_shadowMap1.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, // ap1Sampler, (_25
	0x35, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, // 50 + (float2(1.5
	0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // , -0.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, 0x29, 0x29, 0x20, 0x2b, 0x20, // ).x + _1877)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x30, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_1880, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap1.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap1Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_2550 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, // loat2(1.5, 0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, // w[0].y))).x + _1
	0x38, 0x37, 0x37, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, // 877)) + step(_18
	0x38, 0x30, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, // 80, s_shadowMap1
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, // Map1Sampler, (_2
	0x35, 0x35, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, // 550 + (float2(1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x31, 0x38, 0x37, 0x37, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, //  _1877)) * 0.062
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, //                i
	0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x32, 0x32, 0x2e, 0x7a, 0x29, 0x20, 0x3c, 0x20, // f ((-_1622.z) < 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1].z).          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x34, 0x20, 0x5f, 0x31, 0x38, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // t4 _1897 = _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // u.u_shadowViewPr
	0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x32, 0x5d, 0x20, 0x2a, // ojTransform[2] *
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, //  float4(in.v_pos
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ition, 1.0);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, //          float4 
	0x5f, 0x31, 0x39, 0x30, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x39, 0x37, 0x20, 0x2f, 0x20, // _1902 = _1897 / 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x38, 0x39, 0x37, 0x2e, 0x77, 0x29, 0x3b, // float4(_1897.w);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // at2 _3130 = floa
	0x74, 0x32, 0x28, 0x28, 0x5f, 0x31, 0x39, 0x30, 0x32, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, // t2((_1902.x + 1.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // 0) * 0.5, 1.0 - 
	0x28, 0x28, 0x5f, 0x31, 0x39, 0x30, 0x32, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // ((_1902.y + 1.0)
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  * 0.5));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x39, 0x31, //       float _191
	0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x31, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, // 1 = _1814 * (2.0
	0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  / _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ow[1].z);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x39, 0x31, //       float _191
	0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x39, 0x30, 0x32, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 4 = _1902.z;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x33, 0x33, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, // 3300 = ((((((((s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_1914, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap2.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap2Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_3130 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // oat2(-1.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x29, 0x20, // y))).x + _1911) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, 0x20, 0x73, 0x5f, // + step(_1914, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap2.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, // e(s_shadowMap2Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, 0x2b, 0x20, // mpler, (_3130 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, // (float2(-1.5, -0
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, // hadow[0].y))).x 
	0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // + _1911)) + step
	0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_1914, s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map2.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap2Sampler,
	0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_3130 + (float
	0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(-1.5, 0.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, // ].y))).x + _1911
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, // )) + step(_1914,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, //  s_shadowMap2.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, // 2Sampler, (_3130
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, //  + (float2(-1.5,
	0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  1.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _1911)) + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_1914, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap2.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap2Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_3130 + (flo
	0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, // at2(-0.5, -1.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, // w[0].y))).x + _1
	0x39, 0x31, 0x31, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, // 911)) + step(_19
	0x31, 0x34, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // 14, s_shadowMap2
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, // Map2Sampler, (_3
	0x31, 0x33, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, // 130 + (float2(-0
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, // hadow[0].y))).x 
	0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // + _1911)) + step
	0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_1914, s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map2.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap2Sampler,
	0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_3130 + (float
	0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(-0.5, 0.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, // ].y))).x + _1911
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, // )) + step(_1914,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, //  s_shadowMap2.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, // 2Sampler, (_3130
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, //  + (float2(-0.5,
	0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  1.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _1911)) + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_1914, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap2.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap2Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_3130 + (flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(0.5, -1.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, // [0].y))).x + _19
	0x31, 0x31, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, // 11)) + step(_191
	0x34, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, // 4, s_shadowMap2.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, // ap2Sampler, (_31
	0x33, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, // 30 + (float2(0.5
	0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // , -0.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, // ).x + _1911);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x33, 0x20, //           _5763 
	0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x33, 0x33, 0x30, 0x30, 0x20, 0x2b, 0x20, // = ((((((_3300 + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_1914, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap2.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap2Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_3130 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // loat2(0.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x29, 0x29, // y))).x + _1911))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, 0x20, 0x73, //  + step(_1914, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, // le(s_shadowMap2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, 0x2b, // ampler, (_3130 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, //  (float2(0.5, 1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //  _1911)) + step(
	0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _1914, s_shadowM
	0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap2.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap2Sampler, 
	0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_3130 + (float2
	0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // (1.5, -1.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x29, // .y))).x + _1911)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, 0x20, // ) + step(_1914, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap2.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // ple(s_shadowMap2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, // Sampler, (_3130 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, // + (float2(1.5, -
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, //  + _1911)) + ste
	0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p(_1914, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap2.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap2Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_3130 + (floa
	0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // t2(1.5, 0.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x31, // ].y))).x + _1911
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x34, 0x2c, // )) + step(_1914,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, //  s_shadowMap2.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x30, // 2Sampler, (_3130
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, 0x20, //  + (float2(1.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, // w[0].y))).x + _1
	0x39, 0x31, 0x31, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, // 911)) * 0.0625;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // k;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x32, 0x32, 0x2e, 0x7a, 0x29, 0x20, 0x3c, // if ((-_1622.z) <
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [1].w).         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x39, 0x33, //      float4 _193
	0x31, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // 1 = _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, // dowViewProjTrans
	0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x33, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // form[3] * float4
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, // (in.v_position, 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.0);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x39, //       float4 _19
	0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x39, 0x33, 0x31, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, // 36 = _1931 / flo
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x39, 0x33, 0x31, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, // at4(_1931.w);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // oat2 _3710 = flo
	0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x31, 0x39, 0x33, 0x36, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, // at2((_1936.x + 1
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // .0) * 0.5, 1.0 -
	0x20, 0x28, 0x28, 0x5f, 0x31, 0x39, 0x33, 0x36, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, //  ((_1936.y + 1.0
	0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ) * 0.5));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x31, 0x34, 0x20, 0x2a, //  _1945 = _1814 *
	0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  (2.0 / _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, // _shadow[1].w);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x39, // loat _1948 = _19
	0x33, 0x36, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 36.z;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x38, 0x38, //       float _388
	0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, // 0 = ((((((((step
	0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_1948, s_shadow
	0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map3.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap3Sampler,
	0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_3710 + (float
	0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 2(-1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x73, // ).x + _1945) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_1948, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap3.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap3Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_3710 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, // oat2(-1.5, -0.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // ow[0].y))).x + _
	0x31, 0x39, 0x34, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, // 1945)) + step(_1
	0x39, 0x34, 0x38, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 948, s_shadowMap
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 3.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap3Sampler, (_
	0x33, 0x37, 0x31, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, // 3710 + (float2(-
	0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 1.5, 0.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, 0x29, 0x29, 0x20, // ))).x + _1945)) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, 0x20, 0x73, 0x5f, // + step(_1948, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap3.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, // e(s_shadowMap3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, 0x2b, 0x20, // mpler, (_3710 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, // (float2(-1.5, 1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //  _1945)) + step(
	0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _1948, s_shadowM
	0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap3.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap3Sampler, 
	0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_3710 + (float2
	0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // (-0.5, -1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, // ].y))).x + _1945
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, // )) + step(_1948,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, //  s_shadowMap3.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, // 3Sampler, (_3710
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, //  + (float2(-0.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // ow[0].y))).x + _
	0x31, 0x39, 0x34, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, // 1945)) + step(_1
	0x39, 0x34, 0x38, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 948, s_shadowMap
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 3.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap3Sampler, (_
	0x33, 0x37, 0x31, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, // 3710 + (float2(-
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 0.5, 0.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, 0x29, 0x29, 0x20, // ))).x + _1945)) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, 0x20, 0x73, 0x5f, // + step(_1948, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap3.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, // e(s_shadowMap3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, 0x2b, 0x20, // mpler, (_3710 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, // (float2(-0.5, 1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //  _1945)) + step(
	0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _1948, s_shadowM
	0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap3.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap3Sampler, 
	0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_3710 + (float2
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // (0.5, -1.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, 0x29, // .y))).x + _1945)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, 0x20, // ) + step(_1948, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap3.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, // ple(s_shadowMap3
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, // Sampler, (_3710 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, // + (float2(0.5, -
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  + _1945);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x33, //            _5763
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x33, 0x38, 0x38, 0x30, 0x20, 0x2b, //  = ((((((_3880 +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, 0x20, 0x73, 0x5f, 0x73, //  step(_1948, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap3.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, // (s_shadowMap3Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, 0x2b, 0x20, 0x28, // pler, (_3710 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // float2(0.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, 0x29, // .y))).x + _1945)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, 0x20, // ) + step(_1948, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap3.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, // ple(s_shadowMap3
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, // Sampler, (_3710 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, // + (float2(0.5, 1
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, // hadow[0].y))).x 
	0x2b, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // + _1945)) + step
	0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_1948, s_shadow
	0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map3.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap3Sampler,
	0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_3710 + (float
	0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(1.5, -1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, // ].y))).x + _1945
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, // )) + step(_1948,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, //  s_shadowMap3.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, // 3Sampler, (_3710
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, //  + (float2(1.5, 
	0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // -0.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _1945)) + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_1948, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap3.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap3Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_3710 + (flo
	0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // at2(1.5, 0.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x39, 0x34, // 0].y))).x + _194
	0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x34, 0x38, // 5)) + step(_1948
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, // , s_shadowMap3.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, // p3Sampler, (_371
	0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, // 0 + (float2(1.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // ow[0].y))).x + _
	0x31, 0x39, 0x34, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, // 1945)) * 0.0625;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, //      _5763 = 1.0
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, //    break; // unr
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, // eachable workaro
	0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // und.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, //       break; // 
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, // unreachable work
	0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // around.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, //  break; // unrea
	0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, // chable workaroun
	0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // d.              
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, //     break; // un
	0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, // reachable workar
	0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ound.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //  }.            e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse.            
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, //   _5763 = 1.0;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, //                b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // reak;.          
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, // break; // unreac
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, // hable workaround
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, // .        } while
	0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (false);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x34, 0x30, 0x39, 0x20, 0x3d, 0x20, //  float3 _4409 = 
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x39, // mix(float3(0.039
	0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x31, 0x30, 0x35, 0x39, 0x33, 0x30, 0x33, 0x32, 0x38, 0x33, // 9999991059303283
	0x36, 0x39, 0x31, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x33, // 69140625), _1713
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x35, 0x36, 0x32, 0x29, 0x29, // , float3(_1562))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // ;.        float3
	0x20, 0x5f, 0x34, 0x33, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, //  _4316 = fast::n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x35, 0x39, 0x37, 0x20, 0x2b, // ormalize(_1597 +
	0x20, 0x5f, 0x31, 0x36, 0x30, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _1606);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x34, 0x32, 0x31, 0x20, 0x3d, 0x20, //  float3 _4421 = 
	0x5f, 0x34, 0x34, 0x30, 0x39, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // _4409 + ((float3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x34, 0x30, 0x39, 0x29, 0x20, 0x2a, // (1.0) - _4409) *
	0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, //  powr(fast::clam
	0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // p(1.0 - fast::ma
	0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x34, 0x33, 0x31, 0x36, 0x2c, 0x20, 0x5f, 0x31, 0x35, // x(dot(_4316, _15
	0x39, 0x37, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, // 97), 0.0), 0.0, 
	0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 1.0), 5.0));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x33, 0x31, //      float _4431
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x36, //  = _1576 * _1576
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ;.        float 
	0x5f, 0x34, 0x34, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x34, 0x33, 0x31, 0x20, 0x2a, 0x20, // _4434 = _4431 * 
	0x5f, 0x34, 0x34, 0x33, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // _4431;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat _4438 = fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x36, 0x32, // t::max(dot(_5762
	0x2c, 0x20, 0x5f, 0x34, 0x33, 0x31, 0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // , _4316), 0.0);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, //         float _4
	0x34, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 447 = fast::max(
	0x28, 0x28, 0x5f, 0x34, 0x34, 0x33, 0x38, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x34, 0x33, 0x38, 0x29, // ((_4438 * _4438)
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x34, 0x34, 0x33, 0x34, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, //  * (_4434 - 1.0)
	0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, // ) + 1.0, 9.99999
	0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, // 9747378751635551
	0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x3b, // 4526367188e-05);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .        float _
	0x34, 0x34, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, // 4467 = fast::max
	0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x36, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x39, // (dot(_5762, _159
	0x37, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 7), 0.0);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x37, 0x31, 0x20, 0x3d, 0x20, //   float _4471 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, // fast::max(dot(_5
	0x37, 0x36, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, // 762, _1606), 0.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x20, 0x5f, 0x34, 0x34, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x36, 0x20, 0x2b, //  _4486 = _1576 +
	0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //  1.0;.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x34, 0x34, // oat _4490 = (_44
	0x38, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x34, 0x38, 0x36, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, // 86 * _4486) * 0.
	0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 125;.        flo
	0x61, 0x74, 0x20, 0x5f, 0x34, 0x35, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x36, // at _4504 = _1576
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  + 1.0;.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x35, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x5f, // float _4508 = (_
	0x34, 0x35, 0x30, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x35, 0x30, 0x34, 0x29, 0x20, 0x2a, 0x20, // 4504 * _4504) * 
	0x30, 0x2e, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // 0.125;.        _
	0x35, 0x37, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x66, // 5767 = ((((((((f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x34, // loat3(1.0) - _44
	0x32, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x35, // 21) * (1.0 - _15
	0x36, 0x32, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x33, 0x29, 0x20, 0x2a, 0x20, // 62)) * _1713) * 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x31, 0x38, 0x33, 0x30, 0x39, 0x38, // float3(0.3183098
	0x37, 0x33, 0x33, 0x34, 0x32, 0x35, 0x31, 0x34, 0x30, 0x33, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, // 7334251403808593
	0x37, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x34, 0x32, 0x31, 0x20, 0x2a, // 75)) + ((_4421 *
	0x20, 0x28, 0x28, 0x5f, 0x34, 0x34, 0x33, 0x34, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x33, 0x2e, 0x31, //  ((_4434 / ((3.1
	0x34, 0x31, 0x35, 0x39, 0x32, 0x37, 0x34, 0x31, 0x30, 0x31, 0x32, 0x35, 0x37, 0x33, 0x32, 0x34, // 4159274101257324
	0x32, 0x31, 0x38, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x34, 0x34, 0x37, 0x29, 0x20, 0x2a, // 21875 * _4447) *
	0x20, 0x5f, 0x34, 0x34, 0x34, 0x37, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x34, //  _4447)) * ((_44
	0x37, 0x31, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x34, 0x37, 0x31, 0x20, 0x2a, 0x20, 0x28, // 71 / ((_4471 * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x35, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, // 1.0 - _4508)) + 
	0x5f, 0x34, 0x35, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x34, 0x34, 0x36, 0x37, // _4508)) * (_4467
	0x20, 0x2f, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x34, 0x36, 0x37, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, //  / ((_4467 * (1.
	0x30, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x34, 0x39, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x34, // 0 - _4490)) + _4
	0x34, 0x39, 0x30, 0x29, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 490))))) / float
	0x33, 0x28, 0x28, 0x28, 0x34, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 3(((4.0 * fast::
	0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x36, 0x32, 0x2c, 0x20, 0x5f, // max(dot(_5762, _
	0x31, 0x35, 0x39, 0x37, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x66, // 1597), 0.0)) * f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, // ast::max(dot(_57
	0x36, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // 62, _1606), 0.0)
	0x29, 0x20, 0x2b, 0x20, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, // ) + 9.9999997473
	0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, // 7875163555145263
	0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 67188e-05))) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // mtl_u.u_lighting
	0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // [2].xyz) * fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x36, 0x32, 0x2c, 0x20, // :max(dot(_5762, 
	0x5f, 0x31, 0x36, 0x30, 0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, // _1606), 0.0)) * 
	0x5f, 0x35, 0x37, 0x36, 0x33, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x31, 0x33, // _5763) + ((_1713
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  * _mtl_u.u_ligh
	0x74, 0x69, 0x6e, 0x67, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, // ting[2].w) * _15
	0x39, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, // 90);.    }.    e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse.    {.      
	0x20, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //   _5767 = float3
	0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // (0.0);.    }.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x38, 0x3b, 0x0a, 0x20, //  float3 _5768;. 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, //    if (_mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, // lighting[3].x !=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  0.0).    {.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x36, 0x33, 0x31, //     float3 _4631
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, //  = mix(float3(0.
	0x30, 0x33, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x31, 0x30, 0x35, 0x39, 0x33, 0x30, 0x33, // 0399999991059303
	0x32, 0x38, 0x33, 0x36, 0x39, 0x31, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, // 28369140625), _1
	0x37, 0x31, 0x33, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x35, 0x36, // 713, float3(_156
	0x32, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 2));.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x36, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x36, 0x33, // at3 _4648 = _463
	0x31, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 1 + ((fast::max(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x35, // float3(1.0 - _15
	0x37, 0x36, 0x29, 0x2c, 0x20, 0x5f, 0x34, 0x36, 0x33, 0x31, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x34, // 76), _4631) - _4
	0x36, 0x33, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x66, 0x61, 0x73, 0x74, // 631) * powr(fast
	0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x66, 0x61, // ::clamp(1.0 - fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x36, // st::max(dot(_576
	0x32, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x37, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, // 2, _1597), 0.0),
	0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, //  0.0, 1.0), 5.0)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x34, 0x20, 0x5f, 0x34, 0x36, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, // 4 _4684 = s_iblB
	0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // rdfLut.sample(s_
	0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // iblBrdfLutSample
	0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // r, float2(fast::
	0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x36, 0x32, 0x2c, 0x20, 0x5f, // max(dot(_5762, _
	0x31, 0x35, 0x39, 0x37, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x35, // 1597), 0.0), _15
	0x37, 0x36, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, // 76));.        _5
	0x37, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x28, // 768 = _5767 + ((
	0x28, 0x28, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, // ((((float3(1.0) 
	0x2d, 0x20, 0x5f, 0x34, 0x36, 0x34, 0x38, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // - _4648) * (1.0 
	0x2d, 0x20, 0x5f, 0x31, 0x35, 0x36, 0x32, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x5f, 0x69, 0x62, // - _1562)) * s_ib
	0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x73, // lIrradianceMap.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, // ample(s_iblIrrad
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // ianceMapSampler,
	0x20, 0x5f, 0x35, 0x37, 0x36, 0x32, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, //  _5762).xyz) * _
	0x31, 0x37, 0x31, 0x33, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, // 1713) + (s_iblEn
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, // vironmentMap.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, // ple(s_iblEnviron
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // mentMapSampler, 
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x2d, 0x5f, 0x31, 0x35, 0x39, 0x37, 0x2c, 0x20, // reflect(-_1597, 
	0x5f, 0x35, 0x37, 0x36, 0x32, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x31, // _5762), level(_1
	0x35, 0x37, 0x36, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x6e, 0x74, 0x28, // 576 * float(int(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // _mtl_u.u_lightin
	0x67, 0x5b, 0x33, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // g[3].y)))).xyz *
	0x20, 0x28, 0x28, 0x5f, 0x34, 0x36, 0x34, 0x38, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x36, 0x38, 0x34, //  ((_4648 * _4684
	0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x34, 0x36, // .x) + float3(_46
	0x38, 0x34, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x30, // 84.y)))) * _1590
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, // );.    }.    els
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e.    {.        
	0x5f, 0x35, 0x37, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x37, 0x3b, 0x0a, 0x20, // _5768 = _5767;. 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, //    }.    out.bgf
	0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, // x_FragData0 = fl
	0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x35, 0x37, 0x36, 0x38, 0x20, 0x2b, 0x20, 0x70, 0x6f, 0x77, // oat4(_5768 + pow
	0x72, 0x28, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // r(select(_mtl_u.
	0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, // u_material[2].xy
	0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x54, 0x65, 0x78, // z, s_emissiveTex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x65, 0x6d, // ture.sample(s_em
	0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, // issiveTextureSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x36, 0x29, 0x2e, 0x78, 0x79, 0x7a, // pler, _1496).xyz
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, //  * _mtl_u.u_mate
	0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, // rial[2].xyz, boo
	0x6c, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, // l3(_mtl_u.u_mate
	0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // rial[4].y != 0.0
	0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x32, 0x2e, 0x32, 0x30, 0x30, // )), float3(2.200
	0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, // 0000476837158203
	0x31, 0x32, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x5f, 0x35, 0x37, 0x36, 0x31, 0x2e, 0x77, 0x29, 0x3b, // 125)), _5761.w);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, // .    return out;
	0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x80, 0x03,                                                 // .}......
};
