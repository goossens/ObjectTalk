static const uint8_t OtForwardPbrFS_mtl[19265] =
{
	0x46, 0x53, 0x48, 0x0b, 0x19, 0x67, 0x93, 0x59, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x06, 0x75, // FSH..g.Y....*..u
	0x5f, 0x63, 0x6c, 0x69, 0x70, 0x12, 0x01, 0x40, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, // _clip..@........
	0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x53, 0x61, 0x6d, 0x70, // s_iblBrdfLutSamp
	0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, // ler...........s_
	0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // iblBrdfLutTextur
	0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x69, 0x62, // e...........s_ib
	0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x61, // lIrradianceMapSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, // mpler...........
	0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, // s_iblIrradianceM
	0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, // apTexture.......
	0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, // ....s_iblEnviron
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, // mentMapSampler..
	0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, // .........s_iblEn
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, // vironmentMapText
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, // ure...........s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap0Sample
	0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, // r...........s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, // adowMap0Texture.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ..........s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // owMap1Sampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // ........s_shadow
	0x4d, 0x61, 0x70, 0x31, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, // Map1Texture.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ......s_shadowMa
	0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, // p2Sampler.......
	0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // ....s_shadowMap2
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Texture.........
	0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, // ..s_shadowMap3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, // mpler...........
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x54, 0x65, 0x78, 0x74, // s_shadowMap3Text
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x75, 0x5f, // ure...........u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x02, 0x90, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // shadow..........
	0x19, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // .u_shadowViewPro
	0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x14, 0x04, 0xb0, 0x00, 0x10, 0x00, // jTransform......
	0x00, 0x00, 0x00, 0x00, 0x16, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, // .....s_albedoTex
	0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, // tureSampler.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, // ......s_albedoTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // xtureTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, // ......!s_metalli
	0x63, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // cRoughnessTextur
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // eSampler........
	0x00, 0x00, 0x21, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, 0x75, // ..!s_metallicRou
	0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, // ghnessTextureTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x73, // ture...........s
	0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // _emissiveTexture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x18, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, // ..s_emissiveText
	0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // ureTexture......
	0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x61, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .....s_aoTexture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x12, 0x73, 0x5f, 0x61, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, // ..s_aoTextureTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x73, // ture...........s
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, // _normalTextureSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, // mpler...........
	0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, // s_normalTextureT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x0a, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x05, 0xb0, 0x01, 0x05, // .u_material.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // ......u_lighting
	0x12, 0x04, 0x50, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, 0x76, 0x69, 0x65, // ..P........u_vie
	0x77, 0x14, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, 0x69, 0x62, // w...........s_ib
	0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // lBrdfLut........
	0x00, 0x00, 0x12, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, // ...s_iblIrradian
	0x63, 0x65, 0x4d, 0x61, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, // ceMap...........
	0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, // s_iblEnvironment
	0x4d, 0x61, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, // Map...........s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // shadowMap0......
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // .....s_shadowMap
	0x31, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, 0x73, 0x68, // 1...........s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // adowMap2........
	0x00, 0x00, 0x0c, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x10, // ...s_shadowMap3.
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, // ..........s_albe
	0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // doTexture.......
	0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, // ....s_metallicRo
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, // ughnessTexture..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, // .........s_emiss
	0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // iveTexture......
	0x00, 0x00, 0x00, 0x00, 0x0b, 0x73, 0x5f, 0x61, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .....s_aoTexture
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x73, 0x5f, 0x6e, 0x6f, 0x72, // ...........s_nor
	0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // malTexture......
	0x00, 0x00, 0x00, 0x00, 0x55, 0x46, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, // ....UF..#include
	0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, //  <metal_stdlib>.
	0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, // #include <simd/s
	0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, // imd.h>..using na
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, // mespace metal;..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, // struct _Global.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, // .    float4x4 u_
	0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // view;.    float4
	0x20, 0x75, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //  u_clip;.    flo
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x34, // at4 u_lighting[4
	0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // ];.    float4 u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // shadow[2];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // loat4x4 u_shadow
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, // ViewProjTransfor
	0x6d, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // m[4];.    float4
	0x20, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x35, 0x5d, 0x3b, 0x0a, //  u_material[5];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // };..struct xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // tlMain_out.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, //  float4 bgfx_Fra
	0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, // gData0 [[color(0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // )]];.};..struct 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, // xlatMtlMain_in.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x62, 0x69, // .    float3 v_bi
	0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, // tangent [[user(l
	0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // ocn0)]];.    flo
	0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x5b, 0x5b, 0x75, // at3 v_normal [[u
	0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // ser(locn1)]];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, //   float3 v_posit
	0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x32, // ion [[user(locn2
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // )]];.    float3 
	0x76, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, // v_tangent [[user
	0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x33, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // (locn3)]];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, // loat2 v_texcoord
	0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x34, 0x29, 0x5d, // 0 [[user(locn4)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, // ];.};..fragment 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, // xlatMtlMain_out 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, // xlatMtlMain(xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, // MtlMain_in in [[
	0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // stage_in]], cons
	0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, // tant _Global& _m
	0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, // tl_u [[buffer(0)
	0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, // ]], texture2d<fl
	0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, // oat> s_albedoTex
	0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, // ture [[texture(0
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, // )]], texture2d<f
	0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, // loat> s_metallic
	0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // RoughnessTexture
	0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, //  [[texture(1)]],
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  texture2d<float
	0x3e, 0x20, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, // > s_emissiveText
	0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, // ure [[texture(2)
	0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, // ]], texture2d<fl
	0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x61, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // oat> s_aoTexture
	0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, //  [[texture(3)]],
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  texture2d<float
	0x3e, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // > s_normalTextur
	0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x34, 0x29, 0x5d, 0x5d, // e [[texture(4)]]
	0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, // , texture2d<floa
	0x74, 0x3e, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x20, // t> s_iblBrdfLut 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x35, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(5)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x63, 0x75, 0x62, 0x65, 0x3c, 0x66, 0x6c, 0x6f, 0x61, // texturecube<floa
	0x74, 0x3e, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, // t> s_iblIrradian
	0x63, 0x65, 0x4d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // ceMap [[texture(
	0x36, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x63, 0x75, 0x62, // 6)]], texturecub
	0x65, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, // e<float> s_iblEn
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, // vironmentMap [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x37, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, // exture(7)]], tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, // ture2d<float> s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, // shadowMap0 [[tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, // ture(10)]], text
	0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, // ure2d<float> s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, // hadowMap1 [[text
	0x75, 0x72, 0x65, 0x28, 0x31, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ure(11)]], textu
	0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, // re2d<float> s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // adowMap2 [[textu
	0x72, 0x65, 0x28, 0x31, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // re(12)]], textur
	0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // e2d<float> s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // dowMap3 [[textur
	0x65, 0x28, 0x31, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // e(13)]], sampler
	0x20, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //  s_albedoTexture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Sampler [[sample
	0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // r(0)]], sampler 
	0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x67, 0x68, 0x6e, // s_metallicRoughn
	0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // essTextureSample
	0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, // r [[sampler(1)]]
	0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, // , sampler s_emis
	0x73, 0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, // siveTextureSampl
	0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, // er [[sampler(2)]
	0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x61, 0x6f, 0x54, // ], sampler s_aoT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, // extureSampler [[
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, // sampler(3)]], sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, // mpler s_normalTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, // xtureSampler [[s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x34, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, // ampler(4)]], sam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, // pler s_iblBrdfLu
	0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, // tSampler [[sampl
	0x65, 0x72, 0x28, 0x35, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // er(5)]], sampler
	0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, //  s_iblIrradiance
	0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, // MapSampler [[sam
	0x70, 0x6c, 0x65, 0x72, 0x28, 0x36, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // pler(6)]], sampl
	0x65, 0x72, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, // er s_iblEnvironm
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, // entMapSampler [[
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x37, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, // sampler(7)]], sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // mpler s_shadowMa
	0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, // p0Sampler [[samp
	0x6c, 0x65, 0x72, 0x28, 0x31, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // ler(10)]], sampl
	0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, // er s_shadowMap1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x31, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // (11)]], sampler 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap2Samp
	0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x32, // ler [[sampler(12
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, // )]], sampler s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap3Sampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x33, 0x29, 0x5d, 0x5d, //  [[sampler(13)]]
	0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // ).{.    xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, // ain_out out = {}
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x6d, // ;.    if (dot(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // tl_u.u_clip, flo
	0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // at4(in.v_positio
	0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, // n, 1.0)) < 0.0).
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, //     {.        di
	0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, // scard_fragment()
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ;.    }.    floa
	0x74, 0x32, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, // t2 _1492 = in.v_
	0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // texcoord0 * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, // _u.u_material[1]
	0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, // .w;.    float4 _
	0x35, 0x37, 0x38, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, // 5784;.    if (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, // tl_u.u_material[
	0x33, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // 3].x != 0.0).   
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x38, 0x34, //  {.        _5784
	0x20, 0x3d, 0x20, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, //  = s_albedoTextu
	0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x61, 0x6c, 0x62, 0x65, // re.sample(s_albe
	0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // doTextureSampler
	0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // , _1492) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x30, 0x5d, 0x3b, // u.u_material[0];
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, // .    }.    else.
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, //     {.        _5
	0x37, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, // 784 = _mtl_u.u_m
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x30, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // aterial[0];.    
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x35, 0x37, 0x38, 0x34, 0x2e, // }.    if (_5784.
	0x77, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x31, 0x39, // w < 0.3000000119
	0x32, 0x30, 0x39, 0x32, 0x38, 0x39, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x0a, // 20928955078125).
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, //     {.        di
	0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, // scard_fragment()
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ;.    }.    floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, // t3 _1712 = powr(
	0x5f, 0x35, 0x37, 0x38, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // _5784.xyz, float
	0x33, 0x28, 0x32, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, // 3(2.200000047683
	0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 7158203125));.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x37, 0x38, 0x35, 0x3b, 0x0a, //   float3 _5785;.
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //     if (_mtl_u.u
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x7a, 0x20, 0x21, // _material[4].z !
	0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // = 0.0).    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, //      _5785 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x28, 0x73, // t::normalize(((s
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, // _normalTexture.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, // ample(s_normalTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, // xtureSampler, _1
	0x34, 0x39, 0x32, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, // 492).xyz * 2.0) 
	0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, // - float3(1.0)) *
	0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  transpose(float
	0x33, 0x78, 0x33, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // 3x3(fast::normal
	0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, // ize(in.v_tangent
	0x29, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // ), fast::normali
	0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x62, 0x69, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, // ze(in.v_bitangen
	0x74, 0x29, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // t), fast::normal
	0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, // ize(in.v_normal)
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, // )));.    }.    e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse.    {.      
	0x20, 0x20, 0x5f, 0x35, 0x37, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, //   _5785 = fast::
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, // normalize(in.v_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // ormal);.    }.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x37, 0x35, 0x35, 0x20, 0x3d, //   float4 _1755 =
	0x20, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x67, 0x68, //  s_metallicRough
	0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, // nessTexture.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, 0x75, // le(s_metallicRou
	0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, // ghnessTextureSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, // pler, _1492);.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x38, 0x20, 0x3d, 0x20, //   float _1558 = 
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, // (_mtl_u.u_materi
	0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x79, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x20, // al[3].y != 0.0) 
	0x3f, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x35, 0x35, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // ? (_1755.z * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, // l_u.u_material[1
	0x5d, 0x2e, 0x78, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // ].x) : _mtl_u.u_
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x3b, 0x0a, 0x20, // material[1].x;. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x37, 0x36, 0x34, 0x20, //    float4 _1764 
	0x3d, 0x20, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x67, // = s_metallicRoug
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, // hnessTexture.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x69, 0x63, 0x52, 0x6f, // ple(s_metallicRo
	0x75, 0x67, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, // ughnessTextureSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x32, 0x29, 0x3b, 0x0a, 0x20, // mpler, _1492);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x32, 0x20, 0x3d, //    float _1572 =
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, //  (_mtl_u.u_mater
	0x69, 0x61, 0x6c, 0x5b, 0x33, 0x5d, 0x2e, 0x79, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // ial[3].y != 0.0)
	0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x36, 0x34, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x5f, 0x6d, //  ? (_1764.y * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, // tl_u.u_material[
	0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // 1].y) : _mtl_u.u
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x3b, 0x0a, // _material[1].y;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, //     float4 _1773
	0x20, 0x3d, 0x20, 0x73, 0x5f, 0x61, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, //  = s_aoTexture.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x61, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // ample(s_aoTextur
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x39, 0x32, 0x29, // eSampler, _1492)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x35, 0x38, // ;.    float _158
	0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, // 6 = (_mtl_u.u_ma
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x20, 0x21, 0x3d, 0x20, 0x30, // terial[4].y != 0
	0x2e, 0x30, 0x29, 0x20, 0x3f, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x2e, 0x78, 0x20, 0x2a, // .0) ? (_1773.x *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, //  _mtl_u.u_materi
	0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x20, 0x3a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // al[1].z) : _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x31, 0x5d, 0x2e, // u.u_material[1].
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, // z;.    float3 _1
	0x35, 0x39, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, // 593 = fast::norm
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, // alize(_mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, // ighting[0].xyz -
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x3b, //  in.v_position);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x37, 0x39, // .    float3 _579
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 0;.    if (_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x30, 0x5d, 0x2e, // u.u_lighting[0].
	0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // w != 0.0).    {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x36, 0x30, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, // 1602 = fast::nor
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // malize(_mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // lighting[1].xyz)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.        float4
	0x20, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  _1618 = _mtl_u.
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // u_view * float4(
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, // in.v_position, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .0);.        flo
	0x61, 0x74, 0x20, 0x5f, 0x35, 0x37, 0x38, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at _5786;.      
	0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //   do.        {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, //            if (_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // ].x != 0.0).    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x31, 0x38, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // _1817 = fast::ma
	0x78, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x34, 0x35, // x(0.050000000745
	0x30, 0x35, 0x38, 0x30, 0x35, 0x39, 0x36, 0x39, 0x32, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, // 0580596923828125
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, //  * (1.0 - dot(_5
	0x37, 0x38, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x32, 0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, // 785, _1602)), 0.
	0x30, 0x30, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x38, 0x38, 0x38, 0x32, 0x34, 0x31, 0x32, // 0049999998882412
	0x39, 0x31, 0x30, 0x34, 0x36, 0x31, 0x34, 0x32, 0x35, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x3b, // 91046142578125);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x2e, 0x7a, 0x29, 0x20, //  if ((-_1618.z) 
	0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // < _mtl_u.u_shado
	0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w[1].x).        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, // oat4 _1832 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, // l_u.u_shadowView
	0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x30, 0x5d, // ProjTransform[0]
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, //  * float4(in.v_p
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // osition, 1.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x37, 0x20, //    float4 _1837 
	0x3d, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x32, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // = _1832 / float4
	0x28, 0x5f, 0x31, 0x38, 0x33, 0x32, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // (_1832.w);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, // loat2 _1973 = fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x31, 0x38, 0x33, 0x37, 0x2e, 0x78, 0x20, 0x2b, 0x20, // oat2((_1837.x + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, // 1.0) * 0.5, fma(
	0x28, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x38, 0x33, 0x37, 0x2e, 0x79, // (-1.0) - _1837.y
	0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // , 0.5, 1.0));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x20, 0x3d, 0x20, //   float _1845 = 
	0x32, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // 2.0 / _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // hadow[1].x;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, // float _1849 = _1
	0x38, 0x33, 0x37, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 837.z;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, //  _2143 = (((((((
	0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, // (step(_1849, fma
	0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, // (_1817, _1845, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap0.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, // le(s_shadowMap0S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, // ampler, (_1973 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, //  (float2(-1.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // [0].y))).x)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, // tep(_1849, fma(_
	0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, // 1817, _1845, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap0.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, // (s_shadowMap0Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, 0x20, 0x28, // pler, (_1973 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // float2(-1.5, -0.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, // adow[0].y))).x))
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x2c, 0x20, // ) + step(_1849, 
	0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, // fma(_1817, _1845
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, // , s_shadowMap0.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, // p0Sampler, (_197
	0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, // 3 + (float2(-1.5
	0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 0.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, // .x))) + step(_18
	0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, // 49, fma(_1817, _
	0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 1845, s_shadowMa
	0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p0.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap0Sampler, (
	0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _1973 + (float2(
	0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // -1.5, 1.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // y))).x))) + step
	0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, // (_1849, fma(_181
	0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // 7, _1845, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap0.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap0Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_1973 + (flo
	0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, // at2(-0.5, -1.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, // w[0].y))).x))) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, //  step(_1849, fma
	0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, // (_1817, _1845, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap0.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, // le(s_shadowMap0S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, // ampler, (_1973 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, //  (float2(-0.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, // [0].y))).x))) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, // step(_1849, fma(
	0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, // _1817, _1845, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap0.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, // e(s_shadowMap0Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, 0x20, // mpler, (_1973 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, // (float2(-0.5, 0.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, // adow[0].y))).x))
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x2c, 0x20, // ) + step(_1849, 
	0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, // fma(_1817, _1845
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, // , s_shadowMap0.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, // p0Sampler, (_197
	0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, // 3 + (float2(-0.5
	0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 1.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, // .x))) + step(_18
	0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, // 49, fma(_1817, _
	0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 1845, s_shadowMa
	0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p0.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap0Sampler, (
	0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _1973 + (float2(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // 0.5, -1.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // y))).x))) + step
	0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, // (_1849, fma(_181
	0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // 7, _1845, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap0.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap0Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_1973 + (flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(0.5, -0.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // [0].y))).x));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x5f, 0x35, 0x37, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, //   _5786 = ((((((
	0x5f, 0x32, 0x31, 0x34, 0x33, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, // _2143 + step(_18
	0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, // 49, fma(_1817, _
	0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 1845, s_shadowMa
	0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p0.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap0Sampler, (
	0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _1973 + (float2(
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, // ))) + step(_1849
	0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, // , fma(_1817, _18
	0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, // 45, s_shadowMap0
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, // Map0Sampler, (_1
	0x39, 0x37, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // 973 + (float2(0.
	0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, // ).x))) + step(_1
	0x38, 0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, // 849, fma(_1817, 
	0x5f, 0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _1845, s_shadowM
	0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap0.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap0Sampler, 
	0x28, 0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_1973 + (float2
	0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // (1.5, -1.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, // .y))).x))) + ste
	0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, // p(_1849, fma(_18
	0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // 17, _1845, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap0.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap0Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_1973 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, // oat2(1.5, -0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, // w[0].y))).x))) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x2c, 0x20, 0x66, 0x6d, 0x61, //  step(_1849, fma
	0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, 0x2c, 0x20, 0x73, // (_1817, _1845, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap0.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, // le(s_shadowMap0S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, 0x33, 0x20, 0x2b, // ampler, (_1973 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, //  (float2(1.5, 0.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, // adow[0].y))).x))
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x39, 0x2c, 0x20, // ) + step(_1849, 
	0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x35, // fma(_1817, _1845
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, // , s_shadowMap0.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x39, 0x37, // p0Sampler, (_197
	0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, // 3 + (float2(1.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, // ow[0].y))).x))) 
	0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // * 0.0625;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //        else.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //             {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x2e, 0x7a, 0x29, //   if ((-_1618.z)
	0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  < _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ow[1].y).       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, //        float4 _1
	0x38, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // 866 = _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, // hadowViewProjTra
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x31, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, // nsform[1] * floa
	0x74, 0x34, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, // t4(in.v_position
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 1.0);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x5f, // float4 _1871 = _
	0x31, 0x38, 0x36, 0x36, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, // 1866 / float4(_1
	0x38, 0x36, 0x36, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 866.w);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x66, // float2 _2553 = f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x31, 0x38, 0x37, 0x31, 0x2e, 0x78, 0x20, 0x2b, // loat2((_1871.x +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x66, 0x6d, 0x61, //  1.0) * 0.5, fma
	0x28, 0x28, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x31, 0x2e, // ((-1.0) - _1871.
	0x79, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // y, 0.5, 1.0));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, //        float _18
	0x37, 0x39, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 79 = 2.0 / _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x3b, // u.u_shadow[1].y;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x31, 0x38, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x31, 0x2e, 0x7a, 0x3b, 0x0a, // 1883 = _1871.z;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, //         float _2
	0x37, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, 0x74, // 723 = ((((((((st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, // ep(_1883, fma(_1
	0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // 817, _1879, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap1.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap1Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_2553 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // loat2(-1.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // .y))).x)) + step
	0x28, 0x5f, 0x31, 0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, // (_1883, fma(_181
	0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // 7, _1879, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap1.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap1Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_2553 + (flo
	0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, // at2(-1.5, -0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, // w[0].y))).x))) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, //  step(_1883, fma
	0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, // (_1817, _1879, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap1.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, // le(s_shadowMap1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, // ampler, (_2553 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, //  (float2(-1.5, 0
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, // hadow[0].y))).x)
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x33, 0x2c, // )) + step(_1883,
	0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, //  fma(_1817, _187
	0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, // 9, s_shadowMap1.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, // ap1Sampler, (_25
	0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, // 53 + (float2(-1.
	0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, // ).x))) + step(_1
	0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, // 883, fma(_1817, 
	0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _1879, s_shadowM
	0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap1.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap1Sampler, 
	0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_2553 + (float2
	0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // (-0.5, -1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // ].y))).x))) + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, // ep(_1883, fma(_1
	0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // 817, _1879, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap1.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap1Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_2553 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // loat2(-0.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, // .y))).x))) + ste
	0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, // p(_1883, fma(_18
	0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // 17, _1879, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap1.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap1Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_2553 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, // oat2(-0.5, 0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, // w[0].y))).x))) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, //  step(_1883, fma
	0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, // (_1817, _1879, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap1.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, // le(s_shadowMap1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, // ampler, (_2553 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, //  (float2(-0.5, 1
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, // hadow[0].y))).x)
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x33, 0x2c, // )) + step(_1883,
	0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, //  fma(_1817, _187
	0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, // 9, s_shadowMap1.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, // ap1Sampler, (_25
	0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, // 53 + (float2(0.5
	0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // , -1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, // ).x))) + step(_1
	0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, // 883, fma(_1817, 
	0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _1879, s_shadowM
	0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap1.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap1Sampler, 
	0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_2553 + (float2
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // (0.5, -0.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .y))).x));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, //    _5786 = (((((
	0x28, 0x5f, 0x32, 0x37, 0x32, 0x33, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, // (_2723 + step(_1
	0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, // 883, fma(_1817, 
	0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _1879, s_shadowM
	0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap1.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap1Sampler, 
	0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_2553 + (float2
	0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // (0.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, // x))) + step(_188
	0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, // 3, fma(_1817, _1
	0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 879, s_shadowMap
	0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 1.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap1Sampler, (_
	0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // 2553 + (float2(0
	0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // .5, 1.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // )).x))) + step(_
	0x31, 0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, // 1883, fma(_1817,
	0x20, 0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _1879, s_shadow
	0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map1.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap1Sampler,
	0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_2553 + (float
	0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(1.5, -1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // ].y))).x))) + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, // ep(_1883, fma(_1
	0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // 817, _1879, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap1.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap1Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_2553 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, // loat2(1.5, -0.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, // ow[0].y))).x))) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x33, 0x2c, 0x20, 0x66, 0x6d, // + step(_1883, fm
	0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x39, 0x2c, 0x20, // a(_1817, _1879, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap1.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, // ple(s_shadowMap1
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, 0x35, 0x33, 0x20, // Sampler, (_2553 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, // + (float2(1.5, 0
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, // hadow[0].y))).x)
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x33, 0x2c, // )) + step(_1883,
	0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, //  fma(_1817, _187
	0x39, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, // 9, s_shadowMap1.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x35, // ap1Sampler, (_25
	0x35, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, // 53 + (float2(1.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, // dow[0].y))).x)))
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  * 0.0625;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     else.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, 0x36, //        if ((-_16
	0x31, 0x38, 0x2e, 0x7a, 0x29, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // 18.z) < _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, // _shadow[1].z).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x39, 0x30, 0x30, //     float4 _1900
	0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  = _mtl_u.u_shad
	0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, // owViewProjTransf
	0x6f, 0x72, 0x6d, 0x5b, 0x32, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // orm[2] * float4(
	0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x31, // in.v_position, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x39, 0x30, 0x35, 0x20, 0x3d, 0x20, //  float4 _1905 = 
	0x5f, 0x31, 0x39, 0x30, 0x30, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, // _1900 / float4(_
	0x31, 0x39, 0x30, 0x30, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1900.w);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x31, 0x33, //      float2 _313
	0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x31, 0x39, 0x30, // 3 = float2((_190
	0x35, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, // 5.x + 1.0) * 0.5
	0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x28, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, // , fma((-1.0) - _
	0x31, 0x39, 0x30, 0x35, 0x2e, 0x79, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, // 1905.y, 0.5, 1.0
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x32, 0x2e, // float _1913 = 2.
	0x30, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // 0 / _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // dow[1].z;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x39, 0x31, //       float _191
	0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x39, 0x30, 0x35, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 7 = _1905.z;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x33, 0x33, 0x30, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, // 3303 = ((((((((s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, // tep(_1917, fma(_
	0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, // 1817, _1913, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap2.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, // (s_shadowMap2Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, // pler, (_3133 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // float2(-1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, // ].y))).x)) + ste
	0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, // p(_1917, fma(_18
	0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // 17, _1913, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap2.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap2Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_3133 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, // oat2(-1.5, -0.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, // ow[0].y))).x))) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, // + step(_1917, fm
	0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, // a(_1817, _1913, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap2.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // ple(s_shadowMap2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, // Sampler, (_3133 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, // + (float2(-1.5, 
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, // ))) + step(_1917
	0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, // , fma(_1817, _19
	0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // 13, s_shadowMap2
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, // Map2Sampler, (_3
	0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, // 133 + (float2(-1
	0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // .5, 1.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // )).x))) + step(_
	0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, // 1917, fma(_1817,
	0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _1913, s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map2.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap2Sampler,
	0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_3133 + (float
	0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // 2(-0.5, -1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // 0].y))).x))) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, // tep(_1917, fma(_
	0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, // 1817, _1913, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap2.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, // (s_shadowMap2Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, // pler, (_3133 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // float2(-0.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // ].y))).x))) + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, // ep(_1917, fma(_1
	0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // 817, _1913, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap2.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap2Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_3133 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, // loat2(-0.5, 0.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, // ow[0].y))).x))) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, // + step(_1917, fm
	0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, // a(_1817, _1913, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap2.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // ple(s_shadowMap2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, // Sampler, (_3133 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, // + (float2(-0.5, 
	0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, // ))) + step(_1917
	0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, // , fma(_1817, _19
	0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // 13, s_shadowMap2
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, // Map2Sampler, (_3
	0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // 133 + (float2(0.
	0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 5, -1.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // )).x))) + step(_
	0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, // 1917, fma(_1817,
	0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _1913, s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map2.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap2Sampler,
	0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_3133 + (float
	0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(0.5, -0.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ].y))).x));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x38, 0x36, 0x20, 0x3d, 0x20, //         _5786 = 
	0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x33, 0x33, 0x30, 0x33, 0x20, 0x2b, 0x20, 0x73, 0x74, // ((((((_3303 + st
	0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, // ep(_1917, fma(_1
	0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // 817, _1913, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap2.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap2Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_3133 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // loat2(0.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // y))).x))) + step
	0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, // (_1917, fma(_181
	0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // 7, _1913, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap2.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap2Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_3133 + (flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // at2(0.5, 1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // 0].y))).x))) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, // tep(_1917, fma(_
	0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, // 1817, _1913, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap2.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, // (s_shadowMap2Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, // pler, (_3133 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, // float2(1.5, -1.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, // dow[0].y))).x)))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, //  + step(_1917, f
	0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, // ma(_1817, _1913,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, //  s_shadowMap2.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, // 2Sampler, (_3133
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, //  + (float2(1.5, 
	0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // -0.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x31, // x))) + step(_191
	0x37, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, // 7, fma(_1817, _1
	0x39, 0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 913, s_shadowMap
	0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 2.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap2Sampler, (_
	0x33, 0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, // 3133 + (float2(1
	0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // .5, 0.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // )).x))) + step(_
	0x31, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, // 1917, fma(_1817,
	0x20, 0x5f, 0x31, 0x39, 0x31, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _1913, s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map2.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap2Sampler,
	0x20, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_3133 + (float
	0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 2(1.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, // .x))) * 0.0625;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // k;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      else.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   {.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x2e, 0x7a, 0x29, 0x20, 0x3c, // if ((-_1618.z) <
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [1].w).         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x39, 0x33, //      float4 _193
	0x34, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // 4 = _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, // dowViewProjTrans
	0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x33, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // form[3] * float4
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, // (in.v_position, 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.0);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x39, //       float4 _19
	0x33, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x39, 0x33, 0x34, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, // 39 = _1934 / flo
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x39, 0x33, 0x34, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, // at4(_1934.w);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x37, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // oat2 _3713 = flo
	0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x31, 0x39, 0x33, 0x39, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, // at2((_1939.x + 1
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x28, // .0) * 0.5, fma((
	0x2d, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x39, 0x33, 0x39, 0x2e, 0x79, 0x2c, // -1.0) - _1939.y,
	0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, //  0.5, 1.0));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2f, // at _1947 = 2.0 /
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // [1].w;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x39, //        float _19
	0x35, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x39, 0x33, 0x39, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, // 51 = _1939.z;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x38, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, // oat _3883 = ((((
	0x28, 0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, 0x20, // ((((step(_1951, 
	0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, // fma(_1817, _1947
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, // , s_shadowMap3.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, // p3Sampler, (_371
	0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, // 3 + (float2(-1.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x20, // dow[0].y))).x)) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, 0x20, 0x66, 0x6d, // + step(_1951, fm
	0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, 0x2c, 0x20, // a(_1817, _1947, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap3.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, // ple(s_shadowMap3
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x33, 0x20, // Sampler, (_3713 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, // + (float2(-1.5, 
	0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // -0.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, // x))) + step(_195
	0x31, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, // 1, fma(_1817, _1
	0x39, 0x34, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 947, s_shadowMap
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 3.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap3Sampler, (_
	0x33, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, // 3713 + (float2(-
	0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 1.5, 0.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ))).x))) + step(
	0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, // _1951, fma(_1817
	0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // , _1947, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap3.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap3Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_3713 + (floa
	0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // t2(-1.5, 1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // 0].y))).x))) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, // tep(_1951, fma(_
	0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, // 1817, _1947, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap3.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, // (s_shadowMap3Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x28, // pler, (_3713 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, // float2(-0.5, -1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, // adow[0].y))).x))
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, 0x20, // ) + step(_1951, 
	0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, // fma(_1817, _1947
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, // , s_shadowMap3.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, // p3Sampler, (_371
	0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, // 3 + (float2(-0.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, // dow[0].y))).x)))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, 0x20, 0x66, //  + step(_1951, f
	0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, 0x2c, // ma(_1817, _1947,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, //  s_shadowMap3.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x33, // 3Sampler, (_3713
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, //  + (float2(-0.5,
	0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  0.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, // x))) + step(_195
	0x31, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, // 1, fma(_1817, _1
	0x39, 0x34, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 947, s_shadowMap
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 3.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap3Sampler, (_
	0x33, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, // 3713 + (float2(-
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 0.5, 1.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, // ))).x))) + step(
	0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, // _1951, fma(_1817
	0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // , _1947, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap3.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap3Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_3713 + (floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // t2(0.5, -1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // 0].y))).x))) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, // tep(_1951, fma(_
	0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, // 1817, _1947, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap3.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, // (s_shadowMap3Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x28, // pler, (_3713 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, // float2(0.5, -0.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x3b, // dow[0].y))).x));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x5f, 0x35, 0x37, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, //  _5786 = ((((((_
	0x33, 0x38, 0x38, 0x33, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, // 3883 + step(_195
	0x31, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, // 1, fma(_1817, _1
	0x39, 0x34, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 947, s_shadowMap
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 3.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap3Sampler, (_
	0x33, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // 3713 + (float2(0
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, // hadow[0].y))).x)
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, // )) + step(_1951,
	0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, //  fma(_1817, _194
	0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, // 7, s_shadowMap3.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, // ap3Sampler, (_37
	0x31, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, // 13 + (float2(0.5
	0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 1.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, // .x))) + step(_19
	0x35, 0x31, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, // 51, fma(_1817, _
	0x31, 0x39, 0x34, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 1947, s_shadowMa
	0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p3.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap3Sampler, (
	0x5f, 0x33, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _3713 + (float2(
	0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // 1.5, -1.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // y))).x))) + step
	0x28, 0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, // (_1951, fma(_181
	0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // 7, _1947, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap3.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap3Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_3713 + (flo
	0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(1.5, -0.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, // [0].y))).x))) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, // step(_1951, fma(
	0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, 0x2c, 0x20, 0x73, 0x5f, // _1817, _1947, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap3.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, // e(s_shadowMap3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, // mpler, (_3713 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, // (float2(1.5, 0.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, // dow[0].y))).x)))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x31, 0x39, 0x35, 0x31, 0x2c, 0x20, 0x66, //  + step(_1951, f
	0x6d, 0x61, 0x28, 0x5f, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x39, 0x34, 0x37, 0x2c, // ma(_1817, _1947,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, //  s_shadowMap3.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x31, 0x33, // 3Sampler, (_3713
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, 0x20, //  + (float2(1.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x2a, // w[0].y))).x))) *
	0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.0625;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, //              _57
	0x38, 0x36, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 86 = 1.0;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, // ; // unreachable
	0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, //  workaround.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, // eak; // unreacha
	0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, // ble workaround. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, //          break; 
	0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, // // unreachable w
	0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // orkaround.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, //           }.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, // k; // unreachabl
	0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, // e workaround.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          }.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //        else.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x38, 0x36, 0x20, //           _5786 
	0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = 1.0;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, //        break;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, //           }.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, //         break; /
	0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, // / unreachable wo
	0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // rkaround.       
	0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, //  } while(false);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x34, 0x34, 0x31, 0x34, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, // _4414 = mix(floa
	0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x31, 0x30, // t3(0.03999999910
	0x35, 0x39, 0x33, 0x30, 0x33, 0x32, 0x38, 0x33, 0x36, 0x39, 0x31, 0x34, 0x30, 0x36, 0x32, 0x35, // 5930328369140625
	0x29, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x31, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // ), _1712, float3
	0x28, 0x5f, 0x31, 0x35, 0x35, 0x38, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (_1558));.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x33, 0x31, 0x39, 0x20, 0x3d, //   float3 _4319 =
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, //  fast::normalize
	0x28, 0x5f, 0x31, 0x35, 0x39, 0x33, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x32, 0x29, 0x3b, // (_1593 + _1602);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x34, 0x34, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x34, 0x31, 0x34, 0x20, 0x2b, 0x20, // _4426 = _4414 + 
	0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, // ((float3(1.0) - 
	0x5f, 0x34, 0x34, 0x31, 0x34, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x66, 0x61, // _4414) * powr(fa
	0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, // st::clamp(1.0 - 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x34, // fast::max(dot(_4
	0x33, 0x31, 0x39, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x33, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, // 319, _1593), 0.0
	0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x35, 0x2e, // ), 0.0, 1.0), 5.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 0));.        flo
	0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x32, // at _4436 = _1572
	0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  * _1572;.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x34, 0x33, 0x20, 0x3d, 0x20, //   float _4443 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, // fast::max(dot(_5
	0x37, 0x38, 0x35, 0x2c, 0x20, 0x5f, 0x34, 0x33, 0x31, 0x39, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, // 785, _4319), 0.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x20, 0x5f, 0x34, 0x34, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, //  _4452 = fast::m
	0x61, 0x78, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x34, 0x34, 0x34, 0x33, 0x20, 0x2a, 0x20, 0x5f, // ax(fma(_4443 * _
	0x34, 0x34, 0x34, 0x33, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x34, 0x34, 0x33, 0x36, 0x2c, // 4443, fma(_4436,
	0x20, 0x5f, 0x34, 0x34, 0x33, 0x36, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x31, //  _4436, -1.0), 1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, // .0), 9.999999747
	0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, // 3787516355514526
	0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 367188e-05);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x37, 0x32, //      float _4472
	0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, //  = fast::max(dot
	0x28, 0x5f, 0x35, 0x37, 0x38, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x39, 0x33, 0x29, 0x2c, 0x20, // (_5785, _1593), 
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 0.0);.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, // oat _4476 = fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x38, 0x35, 0x2c, // ::max(dot(_5785,
	0x20, 0x5f, 0x31, 0x36, 0x30, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, //  _1602), 0.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x34, //        float _44
	0x39, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // 91 = _1572 + 1.0
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ;.        float 
	0x5f, 0x34, 0x34, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x34, 0x39, 0x31, 0x20, 0x2a, 0x20, // _4494 = _4491 * 
	0x5f, 0x34, 0x34, 0x39, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // _4491;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x35, 0x30, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x35, // loat _4509 = _15
	0x37, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 72 + 1.0;.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x35, 0x31, 0x32, 0x20, 0x3d, 0x20, //   float _4512 = 
	0x5f, 0x34, 0x35, 0x30, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x35, 0x30, 0x39, 0x3b, 0x0a, 0x20, // _4509 * _4509;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x28, //        _5790 = (
	0x28, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, // ((fma(((float3(1
	0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x34, 0x32, 0x36, 0x29, 0x20, 0x2a, 0x20, 0x28, // .0) - _4426) * (
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x35, 0x35, 0x38, 0x29, 0x29, 0x20, 0x2a, 0x20, // 1.0 - _1558)) * 
	0x5f, 0x31, 0x37, 0x31, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, // _1712, float3(0.
	0x33, 0x31, 0x38, 0x33, 0x30, 0x39, 0x38, 0x37, 0x33, 0x33, 0x34, 0x32, 0x35, 0x31, 0x34, 0x30, // 3183098733425140
	0x33, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x34, // 380859375), (_44
	0x32, 0x36, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x34, 0x34, 0x33, 0x36, 0x20, 0x2a, 0x20, // 26 * (((_4436 * 
	0x5f, 0x34, 0x34, 0x33, 0x36, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x33, 0x2e, 0x31, 0x34, 0x31, // _4436) / ((3.141
	0x35, 0x39, 0x32, 0x37, 0x34, 0x31, 0x30, 0x31, 0x32, 0x35, 0x37, 0x33, 0x32, 0x34, 0x32, 0x31, // 5927410125732421
	0x38, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x34, 0x35, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 875 * _4452) * _
	0x34, 0x34, 0x35, 0x32, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x34, 0x37, 0x36, // 4452)) * ((_4476
	0x20, 0x2f, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x34, 0x34, 0x37, 0x36, 0x2c, 0x20, 0x66, 0x6d, //  / fma(_4476, fm
	0x61, 0x28, 0x2d, 0x5f, 0x34, 0x35, 0x31, 0x32, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x2c, // a(-_4512, 0.125,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x34, 0x35, 0x31, 0x32, 0x20, 0x2a, 0x20, 0x30, //  1.0), _4512 * 0
	0x2e, 0x31, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x34, 0x34, 0x37, 0x32, 0x20, // .125)) * (_4472 
	0x2f, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x34, 0x34, 0x37, 0x32, 0x2c, 0x20, 0x66, 0x6d, 0x61, // / fma(_4472, fma
	0x28, 0x2d, 0x5f, 0x34, 0x34, 0x39, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x2c, 0x20, // (-_4494, 0.125, 
	0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x34, 0x34, 0x39, 0x34, 0x20, 0x2a, 0x20, 0x30, 0x2e, // 1.0), _4494 * 0.
	0x31, 0x32, 0x35, 0x29, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 125))))) / float
	0x33, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x34, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, // 3(fma(4.0 * fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x38, 0x35, 0x2c, // ::max(dot(_5785,
	0x20, 0x5f, 0x31, 0x35, 0x39, 0x33, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, //  _1593), 0.0), f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, // ast::max(dot(_57
	0x38, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x30, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // 85, _1602), 0.0)
	0x2c, 0x20, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, // , 9.999999747378
	0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, // 7516355514526367
	0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // 188e-05))) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x32, // l_u.u_lighting[2
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // ].xyz) * fast::m
	0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x38, 0x35, 0x2c, 0x20, 0x5f, 0x31, // ax(dot(_5785, _1
	0x36, 0x30, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x35, // 602), 0.0)) * _5
	0x37, 0x38, 0x36, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x37, 0x31, 0x32, 0x20, 0x2a, // 786) + ((_1712 *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, //  _mtl_u.u_lighti
	0x6e, 0x67, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x36, // ng[2].w) * _1586
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, // );.    }.    els
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e.    {.        
	0x5f, 0x35, 0x37, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, // _5790 = float3(0
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // .0);.    }.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x35, 0x37, 0x39, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat3 _5791;.   
	0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, //  if (_mtl_u.u_li
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, // ghting[3].x != 0
	0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0).    {.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x36, 0x34, 0x30, 0x20, 0x3d, //   float3 _4640 =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x33, //  mix(float3(0.03
	0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x31, 0x30, 0x35, 0x39, 0x33, 0x30, 0x33, 0x32, 0x38, // 9999999105930328
	0x33, 0x36, 0x39, 0x31, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x31, // 369140625), _171
	0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x35, 0x35, 0x38, 0x29, // 2, float3(_1558)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x33, 0x20, 0x5f, 0x34, 0x36, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x36, 0x34, 0x30, 0x20, // 3 _4657 = _4640 
	0x2b, 0x20, 0x28, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x6c, // + ((fast::max(fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x32, // oat3(1.0 - _1572
	0x29, 0x2c, 0x20, 0x5f, 0x34, 0x36, 0x34, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x36, 0x34, // ), _4640) - _464
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 0) * powr(fast::
	0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x66, 0x61, 0x73, 0x74, // clamp(1.0 - fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x38, 0x35, 0x2c, // ::max(dot(_5785,
	0x20, 0x5f, 0x31, 0x35, 0x39, 0x33, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x30, //  _1593), 0.0), 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x3b, // .0, 1.0), 5.0));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // .        float4 
	0x5f, 0x34, 0x36, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, // _4697 = s_iblBrd
	0x66, 0x4c, 0x75, 0x74, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x69, 0x62, // fLut.sample(s_ib
	0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // lBrdfLutSampler,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, //  float2(fast::ma
	0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x37, 0x38, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x35, // x(dot(_5785, _15
	0x39, 0x33, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x35, 0x37, 0x32, // 93), 0.0), _1572
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x39, // ));.        _579
	0x31, 0x20, 0x3d, 0x20, 0x5f, 0x35, 0x37, 0x39, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6d, 0x61, // 1 = _5790 + (fma
	0x28, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, // (((float3(1.0) -
	0x20, 0x5f, 0x34, 0x36, 0x35, 0x37, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, //  _4657) * (1.0 -
	0x20, 0x5f, 0x31, 0x35, 0x35, 0x38, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, //  _1558)) * s_ibl
	0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x73, 0x61, // IrradianceMap.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, // mple(s_iblIrradi
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // anceMapSampler, 
	0x5f, 0x35, 0x37, 0x38, 0x35, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x31, // _5785).xyz, _171
	0x32, 0x2c, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, // 2, s_iblEnvironm
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // entMap.sample(s_
	0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, // iblEnvironmentMa
	0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // pSampler, reflec
	0x74, 0x28, 0x2d, 0x5f, 0x31, 0x35, 0x39, 0x33, 0x2c, 0x20, 0x5f, 0x35, 0x37, 0x38, 0x35, 0x29, // t(-_1593, _5785)
	0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x31, 0x35, 0x37, 0x32, 0x20, 0x2a, 0x20, // , level(_1572 * 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // float(int(_mtl_u
	0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x33, 0x5d, 0x2e, 0x79, // .u_lighting[3].y
	0x29, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x36, // )))).xyz * ((_46
	0x35, 0x37, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x36, 0x39, 0x37, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, // 57 * _4697.x) + 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x34, 0x36, 0x39, 0x37, 0x2e, 0x79, 0x29, 0x29, // float3(_4697.y))
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x35, 0x38, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ) * _1586);.    
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, // }.    else.    {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x35, 0x37, 0x39, 0x31, 0x20, 0x3d, // .        _5791 =
	0x20, 0x5f, 0x35, 0x37, 0x39, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //  _5790;.    }.  
	0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, //   out.bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x35, // ata0 = float4(_5
	0x37, 0x39, 0x31, 0x20, 0x2b, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x73, 0x65, 0x6c, 0x65, 0x63, // 791 + powr(selec
	0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, // t(_mtl_u.u_mater
	0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, 0x65, 0x6d, // ial[2].xyz, s_em
	0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, // issiveTexture.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x54, // mple(s_emissiveT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, // extureSampler, _
	0x31, 0x34, 0x39, 0x32, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 1492).xyz * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x32, 0x5d, // _u.u_material[2]
	0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, // .xyz, bool3(_mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5b, 0x34, 0x5d, // _u.u_material[4]
	0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // .x != 0.0)), flo
	0x61, 0x74, 0x33, 0x28, 0x32, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, // at3(2.2000000476
	0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x2c, 0x20, // 837158203125)), 
	0x5f, 0x35, 0x37, 0x38, 0x34, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, // _5784.w);.    re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x80, // turn out;.}.....
	0x03,                                                                                           // .
};
