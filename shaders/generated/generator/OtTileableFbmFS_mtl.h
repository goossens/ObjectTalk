static const uint8_t OtTileableFbmFS_mtl[1914] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0d, 0x75, // FSH.o.><.......u
	0x5f, 0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x12, 0x02, 0x00, 0x00, // _tileableFbm....
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x07, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, // ......L...#inclu
	0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, // de <metal_stdlib
	0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, // >.#include <simd
	0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, // /simd.h>..using 
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, // namespace metal;
	0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, // ..struct _Global
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .{.    float4 u_
	0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, // tileableFbm[2];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // };..struct xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // tlMain_out.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, //  float4 bgfx_Fra
	0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, // gData0 [[color(0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // )]];.};..struct 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, // xlatMtlMain_in.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, // .    float2 v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, // xcoord0 [[user(l
	0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, // ocn0)]];.};..fra
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // gment xlatMtlMai
	0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // n_out xlatMtlMai
	0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, // n(xlatMtlMain_in
	0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, //  in [[stage_in]]
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, // , constant _Glob
	0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, // al& _mtl_u [[buf
	0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // fer(0)]]).{.    
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, // xlatMtlMain_out 
	0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // out = {};.    fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x36, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, // oat _466;.    _4
	0x36, 0x36, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, // 66 = 0.0;.    in
	0x74, 0x20, 0x5f, 0x34, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // t _465 = 0;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, // float _467 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, // l_u.u_tileableFb
	0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // m[0].z;.    floa
	0x74, 0x20, 0x5f, 0x34, 0x36, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // t _468 = _mtl_u.
	0x75, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x5b, 0x30, 0x5d, // u_tileableFbm[0]
	0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x3b, 0x20, 0x5f, // .x;.    for (; _
	0x34, 0x36, 0x35, 0x20, 0x3c, 0x20, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 465 < int(_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x5b, 0x31, // .u_tileableFbm[1
	0x5d, 0x2e, 0x78, 0x29, 0x3b, 0x20, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // ].x); ).    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x31, //       float2 _31
	0x33, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // 3 = in.v_texcoor
	0x64, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x36, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // d0 * _468;.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x31, 0x35, 0x20, 0x3d, //    float2 _315 =
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, //  fract(_313);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x31, //       float2 _31
	0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x33, 0x31, 0x33, 0x29, 0x3b, // 7 = floor(_313);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // .        float2 
	0x5f, 0x33, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x35, 0x20, 0x2a, 0x20, 0x5f, // _325 = (_315 * _
	0x33, 0x31, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x33, // 315) * (float2(3
	0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x35, 0x20, 0x2a, 0x20, 0x32, 0x2e, // .0) - (_315 * 2.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 0));.        flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // at2 _355 = float
	0x32, 0x28, 0x5f, 0x34, 0x36, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2(_468);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x5f, //  float2 _330 = _
	0x33, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, // 317 + float2(1.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 0.0);.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, // float2 _377 = fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x34, 0x36, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat2(_468);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x33, 0x37, 0x20, //     float2 _337 
	0x3d, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // = _317 + float2(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0, 1.0);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, 0x30, 0x35, 0x20, 0x3d, //    float2 _405 =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x34, 0x36, 0x38, 0x29, 0x3b, 0x0a, 0x20, //  float2(_468);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, //        float2 _3
	0x34, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 41 = _317 + floa
	0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t2(1.0);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x66, //  float2 _427 = f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x34, 0x36, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat2(_468);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x36, 0x39, 0x20, //      float _269 
	0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x34, 0x36, 0x37, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, // = fma(_467, mix(
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, // mix(fract(sin(do
	0x74, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x33, 0x35, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // t(fma(-_355, flo
	0x6f, 0x72, 0x28, 0x5f, 0x33, 0x31, 0x37, 0x20, 0x2f, 0x20, 0x5f, 0x33, 0x35, 0x35, 0x29, 0x2c, // or(_317 / _355),
	0x20, 0x5f, 0x33, 0x31, 0x37, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x32, //  _317), float2(2
	0x37, 0x2e, 0x31, 0x36, 0x38, 0x39, 0x37, 0x39, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, // 7.16897964477539
	0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x33, 0x38, 0x2e, 0x39, 0x30, 0x35, 0x36, 0x32, 0x38, 0x32, // 0625, 38.9056282
	0x30, 0x34, 0x33, 0x34, 0x35, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2a, // 04345703125))) *
	0x20, 0x35, 0x31, 0x35, 0x31, 0x2e, 0x35, 0x34, 0x37, 0x33, 0x36, 0x33, 0x32, 0x38, 0x31, 0x32, //  5151.5473632812
	0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, // 5), fract(sin(do
	0x74, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x33, 0x37, 0x37, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // t(fma(-_377, flo
	0x6f, 0x72, 0x28, 0x5f, 0x33, 0x33, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x33, 0x37, 0x37, 0x29, 0x2c, // or(_330 / _377),
	0x20, 0x5f, 0x33, 0x33, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x32, //  _330), float2(2
	0x37, 0x2e, 0x31, 0x36, 0x38, 0x39, 0x37, 0x39, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, // 7.16897964477539
	0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x33, 0x38, 0x2e, 0x39, 0x30, 0x35, 0x36, 0x32, 0x38, 0x32, // 0625, 38.9056282
	0x30, 0x34, 0x33, 0x34, 0x35, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2a, // 04345703125))) *
	0x20, 0x35, 0x31, 0x35, 0x31, 0x2e, 0x35, 0x34, 0x37, 0x33, 0x36, 0x33, 0x32, 0x38, 0x31, 0x32, //  5151.5473632812
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x33, 0x32, 0x35, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, // 5), _325.x), mix
	0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, // (fract(sin(dot(f
	0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x34, 0x30, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, // ma(-_405, floor(
	0x5f, 0x33, 0x33, 0x37, 0x20, 0x2f, 0x20, 0x5f, 0x34, 0x30, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x33, // _337 / _405), _3
	0x33, 0x37, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x32, 0x37, 0x2e, 0x31, // 37), float2(27.1
	0x36, 0x38, 0x39, 0x37, 0x39, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, // 6897964477539062
	0x35, 0x2c, 0x20, 0x33, 0x38, 0x2e, 0x39, 0x30, 0x35, 0x36, 0x32, 0x38, 0x32, 0x30, 0x34, 0x33, // 5, 38.9056282043
	0x34, 0x35, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x35, 0x31, // 45703125))) * 51
	0x35, 0x31, 0x2e, 0x35, 0x34, 0x37, 0x33, 0x36, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x2c, // 51.54736328125),
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, //  fract(sin(dot(f
	0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x34, 0x32, 0x37, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, // ma(-_427, floor(
	0x5f, 0x33, 0x34, 0x31, 0x20, 0x2f, 0x20, 0x5f, 0x34, 0x32, 0x37, 0x29, 0x2c, 0x20, 0x5f, 0x33, // _341 / _427), _3
	0x34, 0x31, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x32, 0x37, 0x2e, 0x31, // 41), float2(27.1
	0x36, 0x38, 0x39, 0x37, 0x39, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, // 6897964477539062
	0x35, 0x2c, 0x20, 0x33, 0x38, 0x2e, 0x39, 0x30, 0x35, 0x36, 0x32, 0x38, 0x32, 0x30, 0x34, 0x33, // 5, 38.9056282043
	0x34, 0x35, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x35, 0x31, // 45703125))) * 51
	0x35, 0x31, 0x2e, 0x35, 0x34, 0x37, 0x33, 0x36, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x2c, // 51.54736328125),
	0x20, 0x5f, 0x33, 0x32, 0x35, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x33, 0x32, 0x35, 0x2e, 0x79, //  _325.x), _325.y
	0x29, 0x2c, 0x20, 0x5f, 0x34, 0x36, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ), _466);.      
	0x20, 0x20, 0x5f, 0x34, 0x36, 0x38, 0x20, 0x2a, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //   _468 *= _mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x5b, 0x30, // .u_tileableFbm[0
	0x5d, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x36, // ].y;.        _46
	0x37, 0x20, 0x2a, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x69, // 7 *= _mtl_u.u_ti
	0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x3b, 0x0a, // leableFbm[0].w;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x5f, //         _466 = _
	0x32, 0x36, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x36, // 269;.        _46
	0x35, 0x2b, 0x2b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, // 5++;.        con
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // tinue;.    }.   
	0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, //  out.bgfx_FragDa
	0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x34, 0x36, // ta0 = float4(_46
	0x36, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // 6, 0.0, 0.0, 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, // );.    return ou
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x20, 0x00,                                     // t;.}.... .
};
