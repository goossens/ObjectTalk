static const uint8_t OtTileableFbmFS_mtl[1897] =
{
	0x46, 0x53, 0x48, 0x0b, 0x6f, 0x1e, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0d, 0x75, // FSH.o.><.......u
	0x5f, 0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x12, 0x02, 0x00, 0x00, // _tileableFbm....
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x07, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, // ......;...#inclu
	0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, // de <metal_stdlib
	0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, // >.#include <simd
	0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, // /simd.h>..using 
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, // namespace metal;
	0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, // ..struct _Global
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .{.    float4 u_
	0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, // tileableFbm[2];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // };..struct xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // tlMain_out.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, //  float4 bgfx_Fra
	0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, // gData0 [[color(0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // )]];.};..struct 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, // xlatMtlMain_in.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x76, 0x5f, 0x74, 0x65, // .    float2 v_te
	0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, // xcoord0 [[user(l
	0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, // ocn0)]];.};..fra
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // gment xlatMtlMai
	0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // n_out xlatMtlMai
	0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, // n(xlatMtlMain_in
	0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, //  in [[stage_in]]
	0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, // , constant _Glob
	0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, // al& _mtl_u [[buf
	0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // fer(0)]]).{.    
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, // xlatMtlMain_out 
	0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // out = {};.    fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x35, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, // oat _457;.    _4
	0x35, 0x37, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x6e, // 57 = 0.0;.    in
	0x74, 0x20, 0x5f, 0x34, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // t _456 = 0;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x35, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, // float _458 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, // l_u.u_tileableFb
	0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // m[0].z;.    floa
	0x74, 0x20, 0x5f, 0x34, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // t _459 = _mtl_u.
	0x75, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x5b, 0x30, 0x5d, // u_tileableFbm[0]
	0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x3b, 0x20, 0x5f, // .x;.    for (; _
	0x34, 0x35, 0x36, 0x20, 0x3c, 0x20, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 456 < int(_mtl_u
	0x2e, 0x75, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x5b, 0x31, // .u_tileableFbm[1
	0x5d, 0x2e, 0x78, 0x29, 0x3b, 0x20, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // ].x); ).    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x30, //       float2 _30
	0x38, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // 8 = in.v_texcoor
	0x64, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x35, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // d0 * _459;.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x31, 0x30, 0x20, 0x3d, //    float2 _310 =
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x33, 0x30, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, //  fract(_308);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x31, //       float2 _31
	0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x33, 0x30, 0x38, 0x29, 0x3b, // 2 = floor(_308);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, // .        float2 
	0x5f, 0x33, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x30, 0x20, 0x2a, 0x20, 0x5f, // _320 = (_310 * _
	0x33, 0x31, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x33, // 310) * (float2(3
	0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x33, 0x31, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x2e, // .0) - (_310 * 2.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 0));.        flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x35, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // at2 _350 = float
	0x32, 0x28, 0x5f, 0x34, 0x35, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2(_459);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x5f, //  float2 _325 = _
	0x33, 0x31, 0x32, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, // 312 + float2(1.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 0.0);.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x6c, // float2 _372 = fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x34, 0x35, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat2(_459);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x33, 0x32, 0x20, //     float2 _332 
	0x3d, 0x20, 0x5f, 0x33, 0x31, 0x32, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // = _312 + float2(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0, 1.0);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, 0x30, 0x30, 0x20, 0x3d, //    float2 _400 =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x34, 0x35, 0x39, 0x29, 0x3b, 0x0a, 0x20, //  float2(_459);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, //        float2 _3
	0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x33, 0x31, 0x32, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 36 = _312 + floa
	0x74, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t2(1.0);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, 0x32, 0x32, 0x20, 0x3d, 0x20, 0x66, //  float2 _422 = f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x34, 0x35, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // loat2(_459);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x36, 0x35, 0x20, //      float _265 
	0x3d, 0x20, 0x5f, 0x34, 0x35, 0x38, 0x20, 0x2a, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, // = _458 * mix(mix
	0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, // (fract(sin(dot(_
	0x33, 0x31, 0x32, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x33, 0x35, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x6c, // 312 - (_350 * fl
	0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x33, 0x31, 0x32, 0x20, 0x2f, 0x20, 0x5f, 0x33, 0x35, 0x30, 0x29, // oor(_312 / _350)
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x32, 0x37, 0x2e, 0x31, 0x36, 0x38, // ), float2(27.168
	0x39, 0x37, 0x39, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, // 979644775390625,
	0x20, 0x33, 0x38, 0x2e, 0x39, 0x30, 0x35, 0x36, 0x32, 0x38, 0x32, 0x30, 0x34, 0x33, 0x34, 0x35, //  38.905628204345
	0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x35, 0x31, 0x35, 0x31, // 703125))) * 5151
	0x2e, 0x35, 0x34, 0x37, 0x33, 0x36, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, // .54736328125), f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x33, 0x32, // ract(sin(dot(_32
	0x35, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x33, 0x37, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, // 5 - (_372 * floo
	0x72, 0x28, 0x5f, 0x33, 0x32, 0x35, 0x20, 0x2f, 0x20, 0x5f, 0x33, 0x37, 0x32, 0x29, 0x29, 0x2c, // r(_325 / _372)),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x32, 0x37, 0x2e, 0x31, 0x36, 0x38, 0x39, 0x37, //  float2(27.16897
	0x39, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x33, // 9644775390625, 3
	0x38, 0x2e, 0x39, 0x30, 0x35, 0x36, 0x32, 0x38, 0x32, 0x30, 0x34, 0x33, 0x34, 0x35, 0x37, 0x30, // 8.90562820434570
	0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x35, 0x31, 0x35, 0x31, 0x2e, 0x35, // 3125))) * 5151.5
	0x34, 0x37, 0x33, 0x36, 0x33, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x33, 0x32, // 4736328125), _32
	0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // 0.x), mix(fract(
	0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x33, 0x33, 0x32, 0x20, 0x2d, 0x20, 0x28, // sin(dot(_332 - (
	0x5f, 0x34, 0x30, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x33, 0x33, // _400 * floor(_33
	0x32, 0x20, 0x2f, 0x20, 0x5f, 0x34, 0x30, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 2 / _400)), floa
	0x74, 0x32, 0x28, 0x32, 0x37, 0x2e, 0x31, 0x36, 0x38, 0x39, 0x37, 0x39, 0x36, 0x34, 0x34, 0x37, // t2(27.1689796447
	0x37, 0x35, 0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x33, 0x38, 0x2e, 0x39, 0x30, 0x35, // 75390625, 38.905
	0x36, 0x32, 0x38, 0x32, 0x30, 0x34, 0x33, 0x34, 0x35, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, // 628204345703125)
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x35, 0x31, 0x35, 0x31, 0x2e, 0x35, 0x34, 0x37, 0x33, 0x36, 0x33, // )) * 5151.547363
	0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // 28125), fract(si
	0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x33, 0x33, 0x36, 0x20, 0x2d, 0x20, 0x28, 0x5f, 0x34, // n(dot(_336 - (_4
	0x32, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x33, 0x33, 0x36, 0x20, // 22 * floor(_336 
	0x2f, 0x20, 0x5f, 0x34, 0x32, 0x32, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // / _422)), float2
	0x28, 0x32, 0x37, 0x2e, 0x31, 0x36, 0x38, 0x39, 0x37, 0x39, 0x36, 0x34, 0x34, 0x37, 0x37, 0x35, // (27.168979644775
	0x33, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x33, 0x38, 0x2e, 0x39, 0x30, 0x35, 0x36, 0x32, // 390625, 38.90562
	0x38, 0x32, 0x30, 0x34, 0x33, 0x34, 0x35, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x29, // 8204345703125)))
	0x20, 0x2a, 0x20, 0x35, 0x31, 0x35, 0x31, 0x2e, 0x35, 0x34, 0x37, 0x33, 0x36, 0x33, 0x32, 0x38, //  * 5151.54736328
	0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x33, 0x32, 0x30, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, // 125), _320.x), _
	0x33, 0x32, 0x30, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 320.y);.        
	0x5f, 0x34, 0x35, 0x39, 0x20, 0x2a, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // _459 *= _mtl_u.u
	0x5f, 0x74, 0x69, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, // _tileableFbm[0].
	0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x35, 0x38, 0x20, // y;.        _458 
	0x2a, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x74, 0x69, 0x6c, 0x65, // *= _mtl_u.u_tile
	0x61, 0x62, 0x6c, 0x65, 0x46, 0x62, 0x6d, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x3b, 0x0a, 0x20, 0x20, // ableFbm[0].w;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x35, 0x37, 0x20, 0x2b, 0x3d, 0x20, 0x5f, 0x32, //       _457 += _2
	0x36, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x34, 0x35, 0x36, // 65;.        _456
	0x2b, 0x2b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x74, // ++;.        cont
	0x69, 0x6e, 0x75, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // inue;.    }.    
	0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, // out.bgfx_FragDat
	0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x34, 0x35, 0x37, // a0 = float4(_457
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // , 0.0, 0.0, 1.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, // ;.    return out
	0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x20, 0x00,                                           // ;.}.... .
};
