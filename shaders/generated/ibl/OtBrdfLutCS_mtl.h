static const uint8_t OtBrdfLutCS_mtl[2530] =
{
	0x43, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x73, // CSH............s
	0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x01, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // _target.........
	0x00, 0x08, 0x00, 0x08, 0x00, 0x01, 0x00, 0xb3, 0x09, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // ...........#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x20, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x78, // ;..kernel void x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, // latMtlMain(textu
	0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x2c, 0x20, 0x61, 0x63, 0x63, 0x65, // re2d<float, acce
	0x73, 0x73, 0x3a, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x3e, 0x20, 0x73, 0x5f, 0x74, 0x61, 0x72, // ss::write> s_tar
	0x67, 0x65, 0x74, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, // get [[texture(0)
	0x5d, 0x5d, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x20, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, // ]], uint3 gl_Glo
	0x62, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x20, // balInvocationID 
	0x5b, 0x5b, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // [[thread_positio
	0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, // n_in_grid]]).{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, 0x35, 0x36, 0x20, 0x3d, //    float2 _456 =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, //  float2(int3(gl_
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, // GlobalInvocation
	0x49, 0x44, 0x29, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // ID).xy) / float2
	0x28, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x73, 0x5f, 0x74, 0x61, // (int2(uint2(s_ta
	0x72, 0x67, 0x65, 0x74, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x28, 0x29, // rget.get_width()
	0x2c, 0x20, 0x73, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x68, // , s_target.get_h
	0x65, 0x69, 0x67, 0x68, 0x74, 0x28, 0x29, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // eight())));.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // float _459 = fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x34, 0x35, 0x36, 0x2e, 0x79, 0x2c, 0x20, 0x30, // t::max(_456.y, 0
	0x2e, 0x30, 0x34, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x37, 0x38, 0x38, 0x31, 0x33, 0x39, // .045000001788139
	0x33, 0x34, 0x33, 0x32, 0x36, 0x31, 0x37, 0x31, 0x38, 0x37, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 34326171875);.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x5f, //   float _461 = _
	0x34, 0x35, 0x36, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 456.x;.    float
	0x33, 0x20, 0x5f, 0x35, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 3 _515 = float3(
	0x73, 0x71, 0x72, 0x74, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x34, 0x36, 0x31, 0x2c, 0x20, // sqrt(fma(-_461, 
	0x5f, 0x34, 0x36, 0x31, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, // _461, 1.0)), 0.0
	0x2c, 0x20, 0x5f, 0x34, 0x36, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // , _461);.    flo
	0x61, 0x74, 0x20, 0x5f, 0x37, 0x37, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // at _776;.    flo
	0x61, 0x74, 0x20, 0x5f, 0x37, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x37, // at _777;.    _77
	0x37, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x37, // 7 = 0.0;.    _77
	0x36, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 6 = 0.0;.    flo
	0x61, 0x74, 0x20, 0x5f, 0x37, 0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // at _779;.    flo
	0x61, 0x74, 0x20, 0x5f, 0x37, 0x38, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, // at _780;.    for
	0x20, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x37, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x30, 0x75, //  (uint _775 = 0u
	0x3b, 0x20, 0x5f, 0x37, 0x37, 0x35, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x32, 0x34, 0x75, 0x3b, 0x20, // ; _775 < 1024u; 
	0x5f, 0x37, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x38, 0x30, 0x2c, 0x20, 0x5f, 0x37, 0x37, // _777 = _780, _77
	0x36, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x37, 0x39, 0x2c, 0x20, 0x5f, 0x37, 0x37, 0x35, 0x2b, 0x2b, // 6 = _779, _775++
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ).    {.        
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x35, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x37, 0x37, // uint _597 = (_77
	0x35, 0x20, 0x3c, 0x3c, 0x20, 0x31, 0x36, 0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x5f, 0x37, 0x37, // 5 << 16u) | (_77
	0x35, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x75, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 5 >> 16u);.     
	0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x36, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x28, //    uint _604 = (
	0x28, 0x5f, 0x35, 0x39, 0x37, 0x20, 0x26, 0x20, 0x31, 0x34, 0x33, 0x31, 0x36, 0x35, 0x35, 0x37, // (_597 & 14316557
	0x36, 0x35, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x31, 0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x28, // 65u) << 1u) | ((
	0x5f, 0x35, 0x39, 0x37, 0x20, 0x26, 0x20, 0x32, 0x38, 0x36, 0x33, 0x33, 0x31, 0x31, 0x35, 0x33, // _597 & 286331153
	0x30, 0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x75, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0u) >> 1u);.    
	0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x36, 0x31, 0x31, 0x20, 0x3d, 0x20, //     uint _611 = 
	0x28, 0x28, 0x5f, 0x36, 0x30, 0x34, 0x20, 0x26, 0x20, 0x38, 0x35, 0x38, 0x39, 0x39, 0x33, 0x34, // ((_604 & 8589934
	0x35, 0x39, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x32, 0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x28, // 59u) << 2u) | ((
	0x5f, 0x36, 0x30, 0x34, 0x20, 0x26, 0x20, 0x33, 0x34, 0x33, 0x35, 0x39, 0x37, 0x33, 0x38, 0x33, // _604 & 343597383
	0x36, 0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x32, 0x75, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 6u) >> 2u);.    
	0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x36, 0x31, 0x38, 0x20, 0x3d, 0x20, //     uint _618 = 
	0x28, 0x28, 0x5f, 0x36, 0x31, 0x31, 0x20, 0x26, 0x20, 0x32, 0x35, 0x32, 0x36, 0x34, 0x35, 0x31, // ((_611 & 2526451
	0x33, 0x35, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x34, 0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x28, // 35u) << 4u) | ((
	0x5f, 0x36, 0x31, 0x31, 0x20, 0x26, 0x20, 0x34, 0x30, 0x34, 0x32, 0x33, 0x32, 0x32, 0x31, 0x36, // _611 & 404232216
	0x30, 0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x34, 0x75, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0u) >> 4u);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x32, 0x37, 0x20, 0x3d, //     float _627 =
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x28, 0x28, 0x5f, 0x36, 0x31, 0x38, 0x20, 0x26, 0x20, //  float(((_618 & 
	0x31, 0x36, 0x37, 0x31, 0x31, 0x39, 0x33, 0x35, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x38, 0x75, // 16711935u) << 8u
	0x29, 0x20, 0x7c, 0x20, 0x28, 0x28, 0x5f, 0x36, 0x31, 0x38, 0x20, 0x26, 0x20, 0x34, 0x32, 0x37, // ) | ((_618 & 427
	0x38, 0x32, 0x35, 0x35, 0x33, 0x36, 0x30, 0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x38, 0x75, 0x29, // 8255360u) >> 8u)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x20, 0x5f, 0x36, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x35, 0x39, 0x20, 0x2a, 0x20, 0x5f, //  _648 = _459 * _
	0x34, 0x35, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 459;.        flo
	0x61, 0x74, 0x20, 0x5f, 0x36, 0x35, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, // at _651 = float(
	0x5f, 0x37, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x36, 0x31, 0x33, 0x35, // _775) * 0.006135
	0x39, 0x32, 0x33, 0x33, 0x32, 0x32, 0x32, 0x39, 0x30, 0x31, 0x38, 0x32, 0x31, 0x31, 0x33, 0x36, // 9233222901821136
	0x34, 0x37, 0x34, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 474609375;.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x36, 0x34, 0x20, 0x3d, 0x20, //    float _664 = 
	0x73, 0x71, 0x72, 0x74, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x36, 0x32, 0x37, 0x2c, 0x20, // sqrt(fma(-_627, 
	0x32, 0x2e, 0x33, 0x32, 0x38, 0x33, 0x30, 0x36, 0x34, 0x33, 0x36, 0x35, 0x33, 0x38, 0x36, 0x39, // 2.32830643653869
	0x36, 0x32, 0x38, 0x39, 0x30, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x31, 0x30, 0x2c, 0x20, 0x31, 0x2e, // 62890625e-10, 1.
	0x30, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x36, 0x34, // 0) / fma(fma(_64
	0x38, 0x2c, 0x20, 0x5f, 0x36, 0x34, 0x38, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, // 8, _648, -1.0), 
	0x5f, 0x36, 0x32, 0x37, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x33, 0x32, 0x38, 0x33, 0x30, 0x36, 0x34, // _627 * 2.3283064
	0x33, 0x36, 0x35, 0x33, 0x38, 0x36, 0x39, 0x36, 0x32, 0x38, 0x39, 0x30, 0x36, 0x32, 0x35, 0x65, // 365386962890625e
	0x2d, 0x31, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // -10, 1.0));.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x36, 0x39, 0x20, 0x3d, //     float _669 =
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x36, 0x36, 0x34, 0x2c, //  sqrt(fma(-_664,
	0x20, 0x5f, 0x36, 0x36, 0x34, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, //  _664, 1.0));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x38, //       float3 _68
	0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // 9 = fast::normal
	0x69, 0x7a, 0x65, 0x28, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x28, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, // ize(cross(select
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, // (float3(1.0, 0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, // , 0.0), float3(0
	0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x62, // .0, 0.0, 1.0), b
	0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x61, 0x62, 0x73, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x3c, 0x20, // ool3(abs(1.0) < 
	0x30, 0x2e, 0x39, 0x39, 0x39, 0x30, 0x30, 0x30, 0x30, 0x31, 0x32, 0x38, 0x37, 0x34, 0x36, 0x30, // 0.99900001287460
	0x33, 0x32, 0x37, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, // 3271484375)), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, // oat3(0.0, 0.0, 1
	0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // .0)));.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // loat3 _708 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x28, 0x5f, // t::normalize(((_
	0x36, 0x38, 0x39, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x36, 0x36, 0x39, 0x20, 0x2a, 0x20, 0x63, 0x6f, // 689 * (_669 * co
	0x73, 0x28, 0x5f, 0x36, 0x35, 0x31, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x61, 0x73, // s(_651))) + (fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x63, 0x72, 0x6f, // t::normalize(cro
	0x73, 0x73, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, // ss(float3(0.0, 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x39, 0x29, 0x29, // .0, 1.0), _689))
	0x20, 0x2a, 0x20, 0x28, 0x5f, 0x36, 0x36, 0x39, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x6e, 0x28, 0x5f, //  * (_669 * sin(_
	0x36, 0x35, 0x31, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 651)))) + (float
	0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // 3(0.0, 0.0, 1.0)
	0x20, 0x2a, 0x20, 0x5f, 0x36, 0x36, 0x34, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  * _664));.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x34, 0x30, 0x20, 0x3d, 0x20, //    float _540 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x28, 0x5f, 0x37, // fast::clamp(((_7
	0x30, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x64, 0x6f, 0x74, 0x28, // 08 * (2.0 * dot(
	0x5f, 0x35, 0x31, 0x35, 0x2c, 0x20, 0x5f, 0x37, 0x30, 0x38, 0x29, 0x29, 0x29, 0x20, 0x2d, 0x20, // _515, _708))) - 
	0x5f, 0x35, 0x31, 0x35, 0x29, 0x2e, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // _515).z, 0.0, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 0);.        floa
	0x74, 0x20, 0x5f, 0x35, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, // t _548 = fast::c
	0x6c, 0x61, 0x6d, 0x70, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x35, 0x31, 0x35, 0x2c, 0x20, 0x5f, // lamp(dot(_515, _
	0x37, 0x30, 0x38, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, // 708), 0.0, 1.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x35, 0x34, // .        if (_54
	0x30, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0 > 0.0).       
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //  {.            f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x72, // loat _715 = powr
	0x28, 0x5f, 0x34, 0x35, 0x39, 0x2c, 0x20, 0x34, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // (_459, 4.0);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x35, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2f, 0x20, 0x66, // 561 = (((0.5 / f
	0x6d, 0x61, 0x28, 0x5f, 0x35, 0x34, 0x30, 0x2c, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x66, 0x6d, // ma(_540, sqrt(fm
	0x61, 0x28, 0x5f, 0x34, 0x36, 0x31, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x36, 0x31, 0x2c, 0x20, 0x31, // a(_461 * _461, 1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x37, 0x31, 0x35, 0x2c, 0x20, 0x5f, 0x37, 0x31, 0x35, 0x29, // .0 - _715, _715)
	0x29, 0x2c, 0x20, 0x5f, 0x34, 0x36, 0x31, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x66, // ), _461 * sqrt(f
	0x6d, 0x61, 0x28, 0x5f, 0x35, 0x34, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x35, 0x34, 0x30, 0x2c, 0x20, // ma(_540 * _540, 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x37, 0x31, 0x35, 0x2c, 0x20, 0x5f, 0x37, 0x31, 0x35, // 1.0 - _715, _715
	0x29, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x35, 0x34, 0x38, 0x29, 0x20, 0x2a, 0x20, 0x5f, // )))) * _548) * _
	0x35, 0x34, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, // 540) / fast::cla
	0x6d, 0x70, 0x28, 0x5f, 0x37, 0x30, 0x38, 0x2e, 0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, // mp(_708.z, 0.0, 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.0);.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x35, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x70, //   float _564 = p
	0x6f, 0x77, 0x72, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x35, 0x34, 0x38, 0x2c, 0x20, // owr(1.0 - _548, 
	0x35, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5.0);.          
	0x20, 0x20, 0x5f, 0x37, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x35, 0x36, //   _780 = fma(_56
	0x34, 0x2c, 0x20, 0x5f, 0x35, 0x36, 0x31, 0x2c, 0x20, 0x5f, 0x37, 0x37, 0x37, 0x29, 0x3b, 0x0a, // 4, _561, _777);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x37, 0x39, //             _779
	0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x35, 0x36, //  = fma(1.0 - _56
	0x34, 0x2c, 0x20, 0x5f, 0x35, 0x36, 0x31, 0x2c, 0x20, 0x5f, 0x37, 0x37, 0x36, 0x29, 0x3b, 0x0a, // 4, _561, _776);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //   else.        {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x38, // .            _78
	0x30, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x37, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0 = _777;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x37, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x37, //       _779 = _77
	0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // 6;.        }.   
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x73, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, //  }.    s_target.
	0x77, 0x72, 0x69, 0x74, 0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x28, 0x66, 0x6c, // write(float4((fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x37, 0x37, 0x36, 0x2c, 0x20, 0x5f, 0x37, 0x37, 0x37, 0x29, // oat2(_776, _777)
	0x20, 0x2a, 0x20, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, //  * 4.0) * float2
	0x28, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, // (0.0009765625), 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x2e, 0x78, 0x79, 0x79, // 0.0, 0.0).xy.xyy
	0x79, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, // y, uint2(int3(gl
	0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, // _GlobalInvocatio
	0x6e, 0x49, 0x44, 0x29, 0x2e, 0x78, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, // nID).xy));.}....
	0x10, 0x00,                                                                                     // ..
};
