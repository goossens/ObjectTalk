static const uint8_t OtIblEnvironmentMapCS_mtl[4709] =
{
	0x43, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x10, 0x73, // CSH............s
	0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x01, // _cubemapSampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, // ..........s_cube
	0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x01, 0x01, 0xff, 0xff, 0x01, 0x00, // mapTexture......
	0x00, 0x00, 0x00, 0x00, 0x10, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, // .....u_iblEnviro
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // nment...........
	0x73, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x01, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // s_target........
	0x00, 0x00, 0x09, 0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x00, 0x00, 0x00, 0x00, // ...s_cubemap....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x06, 0x00, 0xd1, 0x11, 0x00, 0x00, // ................
	0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, // #include <metal_
	0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, // stdlib>.#include
	0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, //  <simd/simd.h>..
	0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, // using namespace 
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, // metal;..struct _
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // Global.{.    flo
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, // at4 u_iblEnviron
	0x6d, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, // ment;.};..kernel
	0x20, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, //  void xlatMtlMai
	0x6e, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, // n(constant _Glob
	0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, // al& _mtl_u [[buf
	0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // fer(0)]], textur
	0x65, 0x63, 0x75, 0x62, 0x65, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x63, // ecube<float> s_c
	0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ubemap [[texture
	0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, // (0)]], texture2d
	0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x2c, 0x20, 0x61, 0x63, // _array<float, ac
	0x63, 0x65, 0x73, 0x73, 0x3a, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x3e, 0x20, 0x73, 0x5f, 0x74, // cess::write> s_t
	0x61, 0x72, 0x67, 0x65, 0x74, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // arget [[texture(
	0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, // 1)]], sampler s_
	0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // cubemapSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x75, // [sampler(0)]], u
	0x69, 0x6e, 0x74, 0x33, 0x20, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, // int3 gl_GlobalIn
	0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x20, 0x5b, 0x5b, 0x74, 0x68, 0x72, // vocationID [[thr
	0x65, 0x61, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, // ead_position_in_
	0x67, 0x72, 0x69, 0x64, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, // grid]]).{.    do
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // .    {.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // loat _617 = _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, // _u.u_iblEnvironm
	0x65, 0x6e, 0x74, 0x2e, 0x7a, 0x20, 0x2f, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x32, 0x2e, 0x30, // ent.z / powr(2.0
	0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, // , _mtl_u.u_iblEn
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, // vironment.y);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //       if ((float
	0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, // (int3(gl_GlobalI
	0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x78, 0x29, 0x20, // nvocationID).x) 
	0x3e, 0x3d, 0x20, 0x5f, 0x36, 0x31, 0x37, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x66, 0x6c, 0x6f, // >= _617) || (flo
	0x61, 0x74, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // at(int3(gl_Globa
	0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x79, // lInvocationID).y
	0x29, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x36, 0x31, 0x37, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // ) >= _617)).    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  }.        float
	0x32, 0x20, 0x5f, 0x36, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, // 2 _681 = (((floa
	0x74, 0x32, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // t2(int3(gl_Globa
	0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x78, // lInvocationID).x
	0x79, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, // y) + float2(0.5)
	0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x36, 0x31, 0x37, 0x29, // ) / float2(_617)
	0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ) * 2.0) - float
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2(1.0);.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x38, // float _683 = _68
	0x31, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 1.y;.        flo
	0x61, 0x74, 0x20, 0x5f, 0x36, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x38, 0x33, 0x20, 0x2a, // at _684 = _683 *
	0x20, 0x28, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  (-1.0);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x35, 0x3b, 0x0a, 0x20, //  float3 _1065;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x28, 0x69, //        switch (i
	0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x76, // nt3(gl_GlobalInv
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, // ocationID).z).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x30, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, //     case 0:.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x35, 0x20, //           _1065 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x36, // = float3(1.0, _6
	0x38, 0x34, 0x2c, 0x20, 0x2d, 0x5f, 0x36, 0x38, 0x31, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 84, -_681.x);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, //  }.            c
	0x61, 0x73, 0x65, 0x20, 0x31, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ase 1:.         
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, //      _1065 = flo
	0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x34, 0x2c, 0x20, // at3(-1.0, _684, 
	0x5f, 0x36, 0x38, 0x31, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _681.x);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x32, //           case 2
	0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // :.            {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x30, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, // _1065 = float3(_
	0x36, 0x38, 0x31, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x33, // 681.x, 1.0, _683
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x33, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, //     case 3:.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x35, 0x20, //           _1065 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x36, 0x38, 0x31, 0x2e, 0x78, 0x2c, // = float3(_681.x,
	0x20, 0x2d, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, //  -1.0, _684);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, //  }.            c
	0x61, 0x73, 0x65, 0x20, 0x34, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ase 4:.         
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, //      _1065 = flo
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x36, 0x38, 0x31, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x34, // at3(_681.x, _684
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 1.0);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, //          default
	0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // :.            {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x30, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, // _1065 = float3(-
	0x5f, 0x36, 0x38, 0x31, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x34, 0x2c, 0x20, 0x2d, 0x31, // _681.x, _684, -1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //   }.        floa
	0x74, 0x33, 0x20, 0x5f, 0x36, 0x33, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // t3 _635 = fast::
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x35, 0x29, // normalize(_1065)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, // ;.        if (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, // tl_u.u_iblEnviro
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, // nment.x == 0.0).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x77, //       s_target.w
	0x72, 0x69, 0x74, 0x65, 0x28, 0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x2e, 0x73, // rite(s_cubemap.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x53, // ample(s_cubemapS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x36, 0x33, 0x35, 0x2c, 0x20, 0x6c, 0x65, // ampler, _635, le
	0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, // vel(0.0)), uint2
	0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, // (int3(gl_GlobalI
	0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x78, 0x79, 0x29, // nvocationID).xy)
	0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, // , uint(int3(gl_G
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, // lobalInvocationI
	0x44, 0x29, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // D).z));.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, // }.        else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x36, //      float3 _106
	0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 7;.            f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // loat _1068;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x38, 0x20, 0x3d, 0x20, //         _1068 = 
	0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0;.           
	0x20, 0x5f, 0x31, 0x30, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, //  _1067 = float3(
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0);.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x37, 0x30, 0x3b, 0x0a, //   float3 _1070;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x31, 0x30, 0x37, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t _1071;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, //      for (uint _
	0x31, 0x30, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x30, 0x75, 0x3b, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x36, // 1066 = 0u; _1066
	0x20, 0x3c, 0x20, 0x36, 0x34, 0x75, 0x3b, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x38, 0x20, 0x3d, 0x20, //  < 64u; _1068 = 
	0x5f, 0x31, 0x30, 0x37, 0x31, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x5f, // _1071, _1067 = _
	0x31, 0x30, 0x37, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x36, 0x2b, 0x2b, 0x29, 0x0a, 0x20, // 1070, _1066++). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, //              uin
	0x74, 0x20, 0x5f, 0x38, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x36, 0x20, // t _866 = (_1066 
	0x3c, 0x3c, 0x20, 0x31, 0x36, 0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x36, // << 16u) | (_1066
	0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x75, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  >> 16u);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, //           uint _
	0x38, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, 0x38, 0x36, 0x36, 0x20, 0x26, 0x20, 0x31, // 873 = ((_866 & 1
	0x34, 0x33, 0x31, 0x36, 0x35, 0x35, 0x37, 0x36, 0x35, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x31, // 431655765u) << 1
	0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x28, 0x5f, 0x38, 0x36, 0x36, 0x20, 0x26, 0x20, 0x32, 0x38, // u) | ((_866 & 28
	0x36, 0x33, 0x33, 0x31, 0x31, 0x35, 0x33, 0x30, 0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x75, // 63311530u) >> 1u
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x38, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x28, //    uint _880 = (
	0x28, 0x5f, 0x38, 0x37, 0x33, 0x20, 0x26, 0x20, 0x38, 0x35, 0x38, 0x39, 0x39, 0x33, 0x34, 0x35, // (_873 & 85899345
	0x39, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x32, 0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x28, 0x5f, // 9u) << 2u) | ((_
	0x38, 0x37, 0x33, 0x20, 0x26, 0x20, 0x33, 0x34, 0x33, 0x35, 0x39, 0x37, 0x33, 0x38, 0x33, 0x36, // 873 & 3435973836
	0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x32, 0x75, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // u) >> 2u);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, //            uint 
	0x5f, 0x38, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, 0x38, 0x38, 0x30, 0x20, 0x26, 0x20, // _887 = ((_880 & 
	0x32, 0x35, 0x32, 0x36, 0x34, 0x35, 0x31, 0x33, 0x35, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x34, // 252645135u) << 4
	0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x28, 0x5f, 0x38, 0x38, 0x30, 0x20, 0x26, 0x20, 0x34, 0x30, // u) | ((_880 & 40
	0x34, 0x32, 0x33, 0x32, 0x32, 0x31, 0x36, 0x30, 0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x34, 0x75, // 42322160u) >> 4u
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x39, 0x36, 0x20, 0x3d, 0x20, //    float _896 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x28, 0x28, 0x5f, 0x38, 0x38, 0x37, 0x20, 0x26, 0x20, 0x31, // float(((_887 & 1
	0x36, 0x37, 0x31, 0x31, 0x39, 0x33, 0x35, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x38, 0x75, 0x29, // 6711935u) << 8u)
	0x20, 0x7c, 0x20, 0x28, 0x28, 0x5f, 0x38, 0x38, 0x37, 0x20, 0x26, 0x20, 0x34, 0x32, 0x37, 0x38, //  | ((_887 & 4278
	0x32, 0x35, 0x35, 0x33, 0x36, 0x30, 0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x38, 0x75, 0x29, 0x29, // 255360u) >> 8u))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x5f, //   float _917 = _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, // mtl_u.u_iblEnvir
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // onment.x * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, // u.u_iblEnvironme
	0x6e, 0x74, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // nt.x;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x32, 0x30, //       float _920
	0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x36, 0x29, 0x20, //  = float(_1066) 
	0x2a, 0x20, 0x30, 0x2e, 0x30, 0x39, 0x38, 0x31, 0x37, 0x34, 0x37, 0x37, 0x33, 0x31, 0x35, 0x36, // * 0.098174773156
	0x36, 0x34, 0x32, 0x39, 0x31, 0x33, 0x38, 0x31, 0x38, 0x33, 0x35, 0x39, 0x33, 0x37, 0x35, 0x3b, // 642913818359375;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x73, 0x71, //  float _933 = sq
	0x72, 0x74, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x38, 0x39, 0x36, 0x2c, 0x20, 0x32, 0x2e, // rt(fma(-_896, 2.
	0x33, 0x32, 0x38, 0x33, 0x30, 0x36, 0x34, 0x33, 0x36, 0x35, 0x33, 0x38, 0x36, 0x39, 0x36, 0x32, // 3283064365386962
	0x38, 0x39, 0x30, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x31, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // 890625e-10, 1.0)
	0x20, 0x2f, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x39, 0x31, 0x37, 0x2c, //  / fma(fma(_917,
	0x20, 0x5f, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x38, //  _917, -1.0), _8
	0x39, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x33, 0x32, 0x38, 0x33, 0x30, 0x36, 0x34, 0x33, 0x36, // 96 * 2.328306436
	0x35, 0x33, 0x38, 0x36, 0x39, 0x36, 0x32, 0x38, 0x39, 0x30, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x31, // 5386962890625e-1
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0, 1.0));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x39, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x66, 0x6d, 0x61, 0x28, // _938 = sqrt(fma(
	0x2d, 0x5f, 0x39, 0x33, 0x33, 0x2c, 0x20, 0x5f, 0x39, 0x33, 0x33, 0x2c, 0x20, 0x31, 0x2e, 0x30, // -_933, _933, 1.0
	0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ));.            
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x35, 0x38, 0x20, //     float3 _958 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // = fast::normaliz
	0x65, 0x28, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x28, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x66, // e(cross(select(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, // loat3(1.0, 0.0, 
	0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, // 0.0), float3(0.0
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x62, 0x6f, 0x6f, // , 0.0, 1.0), boo
	0x6c, 0x33, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x36, 0x33, 0x35, 0x2e, 0x7a, 0x29, 0x20, 0x3c, // l3(abs(_635.z) <
	0x20, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x30, 0x30, 0x30, 0x30, 0x31, 0x32, 0x38, 0x37, 0x34, 0x36, //  0.9990000128746
	0x30, 0x33, 0x32, 0x37, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x5f, // 03271484375)), _
	0x36, 0x33, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 635));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, //        float3 _9
	0x37, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // 77 = fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x28, 0x5f, 0x39, 0x35, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x5f, // lize(((_958 * (_
	0x39, 0x33, 0x38, 0x20, 0x2a, 0x20, 0x63, 0x6f, 0x73, 0x28, 0x5f, 0x39, 0x32, 0x30, 0x29, 0x29, // 938 * cos(_920))
	0x29, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // ) + (fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x28, 0x5f, 0x36, 0x33, 0x35, 0x2c, // lize(cross(_635,
	0x20, 0x5f, 0x39, 0x35, 0x38, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x39, 0x33, 0x38, 0x20, //  _958)) * (_938 
	0x2a, 0x20, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x39, 0x32, 0x30, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2b, // * sin(_920)))) +
	0x20, 0x28, 0x5f, 0x36, 0x33, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x33, 0x33, 0x29, 0x29, 0x3b, //  (_635 * _933));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x64, 0x6f, //  float _792 = do
	0x74, 0x28, 0x5f, 0x36, 0x33, 0x35, 0x2c, 0x20, 0x5f, 0x39, 0x37, 0x37, 0x29, 0x3b, 0x0a, 0x20, // t(_635, _977);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, 0x39, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x39, // loat3 _799 = (_9
	0x37, 0x37, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x39, 0x32, // 77 * (2.0 * _792
	0x29, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x36, 0x33, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // )) - _635;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x38, 0x30, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, //  _803 = fast::cl
	0x61, 0x6d, 0x70, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x36, 0x33, 0x35, 0x2c, 0x20, 0x5f, 0x37, // amp(dot(_635, _7
	0x39, 0x39, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // 99), 0.0, 1.0);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // float _805 = fas
	0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x5f, 0x37, 0x39, 0x32, 0x2c, 0x20, 0x30, // t::clamp(_792, 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0, 1.0);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x38, //           if (_8
	0x30, 0x33, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 03 > 0.0).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, // float _985 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, // l_u.u_iblEnviron
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // ment.x * _mtl_u.
	0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, // u_iblEnvironment
	0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .x;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, //         float _9
	0x38, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x30, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x38, 0x35, // 88 = _805 * _985
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x39, 0x38, //       float _998
	0x20, 0x3d, 0x20, 0x5f, 0x39, 0x38, 0x35, 0x20, 0x2f, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x39, //  = _985 / fma(_9
	0x38, 0x38, 0x2c, 0x20, 0x5f, 0x39, 0x38, 0x38, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, // 88, _988, fma(-_
	0x38, 0x30, 0x35, 0x2c, 0x20, 0x5f, 0x38, 0x30, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // 805, _805, 1.0))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1071 = _1
	0x30, 0x36, 0x38, 0x20, 0x2b, 0x20, 0x5f, 0x38, 0x30, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 068 + _803;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x30, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x37, 0x20, 0x2b, 0x20, // _1070 = _1067 + 
	0x28, 0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // (s_cubemap.sampl
	0x65, 0x28, 0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, // e(s_cubemapSampl
	0x65, 0x72, 0x2c, 0x20, 0x5f, 0x37, 0x39, 0x39, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, // er, _799, level(
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, // (_mtl_u.u_iblEnv
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, // ironment.x == 0.
	0x30, 0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // 0) ? 0.0 : fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, // :max(0.5 * log2(
	0x28, 0x30, 0x2e, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2f, 0x20, 0x66, 0x6d, 0x61, 0x28, // (0.015625 / fma(
	0x5f, 0x39, 0x39, 0x38, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x39, 0x38, 0x2c, 0x20, 0x30, 0x2e, 0x30, // _998 * _998, 0.0
	0x37, 0x39, 0x35, 0x37, 0x37, 0x34, 0x36, 0x38, 0x33, 0x33, 0x35, 0x36, 0x32, 0x38, 0x35, 0x30, // 7957746833562850
	0x39, 0x35, 0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, // 9521484375, 0.00
	0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x34, 0x39, 0x37, 0x34, 0x35, 0x31, // 1000000047497451
	0x33, 0x30, 0x35, 0x33, 0x38, 0x39, 0x34, 0x30, 0x34, 0x32, 0x39, 0x36, 0x38, 0x37, 0x35, 0x29, // 305389404296875)
	0x29, 0x20, 0x2f, 0x20, 0x28, 0x31, 0x32, 0x2e, 0x35, 0x36, 0x36, 0x33, 0x37, 0x30, 0x39, 0x36, // ) / (12.56637096
	0x34, 0x30, 0x35, 0x30, 0x32, 0x39, 0x32, 0x39, 0x36, 0x38, 0x37, 0x35, 0x20, 0x2f, 0x20, 0x28, // 405029296875 / (
	0x28, 0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // (6.0 * _mtl_u.u_
	0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x7a, // iblEnvironment.z
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, // ) * _mtl_u.u_ibl
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x7a, 0x29, 0x29, 0x29, // Environment.z)))
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x5f, // , 0.0))).xyz * _
	0x38, 0x30, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 803);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //         else.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, //              {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x37, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x38, //    _1071 = _1068
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, //       _1070 = _1
	0x30, 0x36, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 067;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x73, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x28, //  s_target.write(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x37, 0x20, 0x2f, 0x20, 0x66, // float4(_1067 / f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x38, 0x29, 0x2c, 0x20, 0x31, 0x2e, // loat3(_1068), 1.
	0x30, 0x29, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, // 0), uint2(int3(g
	0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, // l_GlobalInvocati
	0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x78, 0x79, 0x29, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, // onID).xy), uint(
	0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, // int3(gl_GlobalIn
	0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x7a, 0x29, 0x29, 0x3b, // vocationID).z));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // .        }.     
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, //    break;.    } 
	0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // while(false);.}.
	0x0a, 0x00, 0x00, 0x40, 0x00,                                                                   // ...@.
};
