static const uint8_t OtIblEnvironmentMapCS_mtl[4679] =
{
	0x43, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x10, 0x73, // CSH............s
	0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x01, // _cubemapSampler.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, // ..........s_cube
	0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x01, 0x01, 0xff, 0xff, 0x01, 0x00, // mapTexture......
	0x00, 0x00, 0x00, 0x00, 0x10, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, // .....u_iblEnviro
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, // nment...........
	0x73, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x01, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // s_target........
	0x00, 0x00, 0x09, 0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x00, 0x00, 0x00, 0x00, // ...s_cubemap....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x06, 0x00, 0xb3, 0x11, 0x00, 0x00, // ................
	0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, // #include <metal_
	0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, // stdlib>.#include
	0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, //  <simd/simd.h>..
	0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, // using namespace 
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, // metal;..struct _
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // Global.{.    flo
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, // at4 u_iblEnviron
	0x6d, 0x65, 0x6e, 0x74, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, // ment;.};..kernel
	0x20, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, //  void xlatMtlMai
	0x6e, 0x28, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, // n(constant _Glob
	0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, // al& _mtl_u [[buf
	0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // fer(0)]], textur
	0x65, 0x63, 0x75, 0x62, 0x65, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x63, // ecube<float> s_c
	0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ubemap [[texture
	0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, // (0)]], texture2d
	0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x2c, 0x20, 0x61, 0x63, // _array<float, ac
	0x63, 0x65, 0x73, 0x73, 0x3a, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x3e, 0x20, 0x73, 0x5f, 0x74, // cess::write> s_t
	0x61, 0x72, 0x67, 0x65, 0x74, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // arget [[texture(
	0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, // 1)]], sampler s_
	0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // cubemapSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x75, // [sampler(0)]], u
	0x69, 0x6e, 0x74, 0x33, 0x20, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, // int3 gl_GlobalIn
	0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x20, 0x5b, 0x5b, 0x74, 0x68, 0x72, // vocationID [[thr
	0x65, 0x61, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, // ead_position_in_
	0x67, 0x72, 0x69, 0x64, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, // grid]]).{.    do
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // .    {.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // loat _615 = _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, // _u.u_iblEnvironm
	0x65, 0x6e, 0x74, 0x2e, 0x7a, 0x20, 0x2f, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x32, 0x2e, 0x30, // ent.z / powr(2.0
	0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, // , _mtl_u.u_iblEn
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, // vironment.y);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //       if ((float
	0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, // (int3(gl_GlobalI
	0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x78, 0x29, 0x20, // nvocationID).x) 
	0x3e, 0x3d, 0x20, 0x5f, 0x36, 0x31, 0x35, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x66, 0x6c, 0x6f, // >= _615) || (flo
	0x61, 0x74, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // at(int3(gl_Globa
	0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x79, // lInvocationID).y
	0x29, 0x20, 0x3e, 0x3d, 0x20, 0x5f, 0x36, 0x31, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // ) >= _615)).    
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  }.        float
	0x32, 0x20, 0x5f, 0x36, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, // 2 _679 = (((floa
	0x74, 0x32, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // t2(int3(gl_Globa
	0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x78, // lInvocationID).x
	0x79, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, // y) + float2(0.5)
	0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x36, 0x31, 0x35, 0x29, // ) / float2(_615)
	0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ) * 2.0) - float
	0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2(1.0);.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x37, // float _681 = _67
	0x39, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 9.y;.        flo
	0x61, 0x74, 0x20, 0x5f, 0x36, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x38, 0x31, 0x20, 0x2a, // at _682 = _681 *
	0x20, 0x28, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  (-1.0);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x3b, 0x0a, 0x20, //  float3 _1057;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x28, 0x69, //        switch (i
	0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x76, // nt3(gl_GlobalInv
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, // ocationID).z).  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x30, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, //     case 0:.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, //           _1057 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x36, // = float3(1.0, _6
	0x38, 0x32, 0x2c, 0x20, 0x2d, 0x5f, 0x36, 0x37, 0x39, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 82, -_679.x);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, //  }.            c
	0x61, 0x73, 0x65, 0x20, 0x31, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ase 1:.         
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, //      _1057 = flo
	0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x32, 0x2c, 0x20, // at3(-1.0, _682, 
	0x5f, 0x36, 0x37, 0x39, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _679.x);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, //          break;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x32, //           case 2
	0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // :.            {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, // _1057 = float3(_
	0x36, 0x37, 0x39, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x31, // 679.x, 1.0, _681
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    break;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x63, 0x61, 0x73, 0x65, 0x20, 0x33, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, //     case 3:.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, //           _1057 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x36, 0x37, 0x39, 0x2e, 0x78, 0x2c, // = float3(_679.x,
	0x20, 0x2d, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, //  -1.0, _682);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // eak;.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, //  }.            c
	0x61, 0x73, 0x65, 0x20, 0x34, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ase 4:.         
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, //      _1057 = flo
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x36, 0x37, 0x39, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x32, // at3(_679.x, _682
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 1.0);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, //         break;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, //          default
	0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // :.            {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x31, 0x30, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, // _1057 = float3(-
	0x5f, 0x36, 0x37, 0x39, 0x2e, 0x78, 0x2c, 0x20, 0x5f, 0x36, 0x38, 0x32, 0x2c, 0x20, 0x2d, 0x31, // _679.x, _682, -1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //   }.        floa
	0x74, 0x33, 0x20, 0x5f, 0x36, 0x33, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // t3 _633 = fast::
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x37, 0x29, // normalize(_1057)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, // ;.        if (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, // tl_u.u_iblEnviro
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, // nment.x == 0.0).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x77, //       s_target.w
	0x72, 0x69, 0x74, 0x65, 0x28, 0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x2e, 0x73, // rite(s_cubemap.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x53, // ample(s_cubemapS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x36, 0x33, 0x33, 0x2c, 0x20, 0x6c, 0x65, // ampler, _633, le
	0x76, 0x65, 0x6c, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, // vel(0.0)), uint2
	0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, // (int3(gl_GlobalI
	0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x78, 0x79, 0x29, // nvocationID).xy)
	0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, // , uint(int3(gl_G
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, // lobalInvocationI
	0x44, 0x29, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // D).z));.        
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, // }.        else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x35, //      float3 _105
	0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 9;.            f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // loat _1060;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x30, 0x20, 0x3d, 0x20, //         _1060 = 
	0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0;.           
	0x20, 0x5f, 0x31, 0x30, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, //  _1059 = float3(
	0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0);.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x32, 0x3b, 0x0a, //   float3 _1062;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t _1063;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, //      for (uint _
	0x31, 0x30, 0x35, 0x38, 0x20, 0x3d, 0x20, 0x30, 0x75, 0x3b, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x38, // 1058 = 0u; _1058
	0x20, 0x3c, 0x20, 0x36, 0x34, 0x75, 0x3b, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x30, 0x20, 0x3d, 0x20, //  < 64u; _1060 = 
	0x5f, 0x31, 0x30, 0x36, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x5f, // _1063, _1059 = _
	0x31, 0x30, 0x36, 0x32, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x38, 0x2b, 0x2b, 0x29, 0x0a, 0x20, // 1062, _1058++). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, //              uin
	0x74, 0x20, 0x5f, 0x38, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x38, 0x20, // t _862 = (_1058 
	0x3c, 0x3c, 0x20, 0x31, 0x36, 0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x38, // << 16u) | (_1058
	0x20, 0x3e, 0x3e, 0x20, 0x31, 0x36, 0x75, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  >> 16u);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, //           uint _
	0x38, 0x36, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, 0x38, 0x36, 0x32, 0x20, 0x26, 0x20, 0x31, // 869 = ((_862 & 1
	0x34, 0x33, 0x31, 0x36, 0x35, 0x35, 0x37, 0x36, 0x35, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x31, // 431655765u) << 1
	0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x28, 0x5f, 0x38, 0x36, 0x32, 0x20, 0x26, 0x20, 0x32, 0x38, // u) | ((_862 & 28
	0x36, 0x33, 0x33, 0x31, 0x31, 0x35, 0x33, 0x30, 0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x31, 0x75, // 63311530u) >> 1u
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x38, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x28, //    uint _876 = (
	0x28, 0x5f, 0x38, 0x36, 0x39, 0x20, 0x26, 0x20, 0x38, 0x35, 0x38, 0x39, 0x39, 0x33, 0x34, 0x35, // (_869 & 85899345
	0x39, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x32, 0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x28, 0x5f, // 9u) << 2u) | ((_
	0x38, 0x36, 0x39, 0x20, 0x26, 0x20, 0x33, 0x34, 0x33, 0x35, 0x39, 0x37, 0x33, 0x38, 0x33, 0x36, // 869 & 3435973836
	0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x32, 0x75, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // u) >> 2u);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, //            uint 
	0x5f, 0x38, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, 0x38, 0x37, 0x36, 0x20, 0x26, 0x20, // _883 = ((_876 & 
	0x32, 0x35, 0x32, 0x36, 0x34, 0x35, 0x31, 0x33, 0x35, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x34, // 252645135u) << 4
	0x75, 0x29, 0x20, 0x7c, 0x20, 0x28, 0x28, 0x5f, 0x38, 0x37, 0x36, 0x20, 0x26, 0x20, 0x34, 0x30, // u) | ((_876 & 40
	0x34, 0x32, 0x33, 0x32, 0x32, 0x31, 0x36, 0x30, 0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x34, 0x75, // 42322160u) >> 4u
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x39, 0x33, 0x20, 0x3d, 0x20, //    float _893 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x28, 0x28, 0x5f, 0x38, 0x38, 0x33, 0x20, 0x26, 0x20, 0x31, // float(((_883 & 1
	0x36, 0x37, 0x31, 0x31, 0x39, 0x33, 0x35, 0x75, 0x29, 0x20, 0x3c, 0x3c, 0x20, 0x38, 0x75, 0x29, // 6711935u) << 8u)
	0x20, 0x7c, 0x20, 0x28, 0x28, 0x5f, 0x38, 0x38, 0x33, 0x20, 0x26, 0x20, 0x34, 0x32, 0x37, 0x38, //  | ((_883 & 4278
	0x32, 0x35, 0x35, 0x33, 0x36, 0x30, 0x75, 0x29, 0x20, 0x3e, 0x3e, 0x20, 0x38, 0x75, 0x29, 0x29, // 255360u) >> 8u))
	0x20, 0x2a, 0x20, 0x32, 0x2e, 0x33, 0x32, 0x38, 0x33, 0x30, 0x36, 0x34, 0x33, 0x36, 0x35, 0x33, //  * 2.32830643653
	0x38, 0x36, 0x39, 0x36, 0x32, 0x38, 0x39, 0x30, 0x36, 0x32, 0x35, 0x65, 0x2d, 0x31, 0x30, 0x3b, // 86962890625e-10;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x6d, //  float _913 = _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, // tl_u.u_iblEnviro
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // nment.x * _mtl_u
	0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, // .u_iblEnvironmen
	0x74, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t.x;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x31, 0x36, 0x20, //      float _916 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x38, 0x29, 0x20, 0x2a, // = float(_1058) *
	0x20, 0x30, 0x2e, 0x30, 0x39, 0x38, 0x31, 0x37, 0x34, 0x37, 0x37, 0x33, 0x31, 0x35, 0x36, 0x36, //  0.0981747731566
	0x34, 0x32, 0x39, 0x31, 0x33, 0x38, 0x31, 0x38, 0x33, 0x35, 0x39, 0x33, 0x37, 0x35, 0x3b, 0x0a, // 42913818359375;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, // float _929 = sqr
	0x74, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x38, 0x39, 0x33, 0x29, 0x20, 0x2f, // t((1.0 - _893) /
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x39, 0x31, 0x33, 0x20, //  (1.0 + (((_913 
	0x2a, 0x20, 0x5f, 0x39, 0x31, 0x33, 0x29, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, // * _913) - 1.0) *
	0x20, 0x5f, 0x38, 0x39, 0x33, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _893)));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x39, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, // _934 = sqrt(1.0 
	0x2d, 0x20, 0x28, 0x5f, 0x39, 0x32, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x32, 0x39, 0x29, 0x29, // - (_929 * _929))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x35, 0x34, 0x20, 0x3d, 0x20, //   float3 _954 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // fast::normalize(
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x28, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x66, 0x6c, 0x6f, // cross(select(flo
	0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // at3(1.0, 0.0, 0.
	0x30, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, // 0), float3(0.0, 
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, // 0.0, 1.0), bool3
	0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x36, 0x33, 0x33, 0x2e, 0x7a, 0x29, 0x20, 0x3c, 0x20, 0x30, // (abs(_633.z) < 0
	0x2e, 0x39, 0x39, 0x39, 0x30, 0x30, 0x30, 0x30, 0x31, 0x32, 0x38, 0x37, 0x34, 0x36, 0x30, 0x33, // .999000012874603
	0x32, 0x37, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x5f, 0x36, 0x33, // 271484375)), _63
	0x33, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3));.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x37, 0x33, //      float3 _973
	0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, //  = fast::normali
	0x7a, 0x65, 0x28, 0x28, 0x28, 0x5f, 0x39, 0x35, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x39, 0x33, // ze(((_954 * (_93
	0x34, 0x20, 0x2a, 0x20, 0x63, 0x6f, 0x73, 0x28, 0x5f, 0x39, 0x31, 0x36, 0x29, 0x29, 0x29, 0x20, // 4 * cos(_916))) 
	0x2b, 0x20, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, // + (fast::normali
	0x7a, 0x65, 0x28, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x28, 0x5f, 0x36, 0x33, 0x33, 0x2c, 0x20, 0x5f, // ze(cross(_633, _
	0x39, 0x35, 0x34, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x39, 0x33, 0x34, 0x20, 0x2a, 0x20, // 954)) * (_934 * 
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x39, 0x31, 0x36, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, // sin(_916)))) + (
	0x5f, 0x36, 0x33, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x32, 0x39, 0x29, 0x29, 0x3b, 0x0a, 0x20, // _633 * _929));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // loat _790 = dot(
	0x5f, 0x36, 0x33, 0x33, 0x2c, 0x20, 0x5f, 0x39, 0x37, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _633, _973);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x39, 0x37, 0x33, // at3 _797 = (_973
	0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x39, 0x30, 0x29, 0x29, //  * (2.0 * _790))
	0x20, 0x2d, 0x20, 0x5f, 0x36, 0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  - _633;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x38, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, // 801 = fast::clam
	0x70, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x36, 0x33, 0x33, 0x2c, 0x20, 0x5f, 0x37, 0x39, 0x37, // p(dot(_633, _797
	0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, // ), 0.0, 1.0);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x30, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // oat _803 = fast:
	0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x5f, 0x37, 0x39, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, // :clamp(_790, 0.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 1.0);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x38, 0x30, 0x31, //         if (_801
	0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  > 0.0).        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // oat _981 = _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, // u.u_iblEnvironme
	0x6e, 0x74, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // nt.x * _mtl_u.u_
	0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x78, // iblEnvironment.x
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x38, 0x34, //       float _984
	0x20, 0x3d, 0x20, 0x5f, 0x38, 0x30, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x38, 0x31, 0x3b, 0x0a, //  = _803 * _981;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x39, 0x34, 0x20, 0x3d, //     float _994 =
	0x20, 0x5f, 0x39, 0x38, 0x31, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, //  _981 / ((1.0 - 
	0x28, 0x5f, 0x38, 0x30, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x30, 0x33, 0x29, 0x29, 0x20, 0x2b, // (_803 * _803)) +
	0x20, 0x28, 0x5f, 0x39, 0x38, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x38, 0x34, 0x29, 0x29, 0x3b, //  (_984 * _984));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, //      _1063 = _10
	0x36, 0x30, 0x20, 0x2b, 0x20, 0x5f, 0x38, 0x30, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 60 + _801;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, //                _
	0x31, 0x30, 0x36, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x39, 0x20, 0x2b, 0x20, 0x28, // 1062 = _1059 + (
	0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // s_cubemap.sample
	0x28, 0x73, 0x5f, 0x63, 0x75, 0x62, 0x65, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // (s_cubemapSample
	0x72, 0x2c, 0x20, 0x5f, 0x37, 0x39, 0x37, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x28, // r, _797, level((
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, // _mtl_u.u_iblEnvi
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x78, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x2e, 0x30, // ronment.x == 0.0
	0x29, 0x20, 0x3f, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // ) ? 0.0 : fast::
	0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x35, 0x20, 0x2a, 0x20, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x28, // max(0.5 * log2((
	0x30, 0x2e, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x39, // 0.015625 / (((_9
	0x39, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x39, 0x39, 0x34, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, // 94 * _994) * 0.0
	0x37, 0x39, 0x35, 0x37, 0x37, 0x34, 0x36, 0x38, 0x33, 0x33, 0x35, 0x36, 0x32, 0x38, 0x35, 0x30, // 7957746833562850
	0x39, 0x35, 0x32, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, // 9521484375) + 0.
	0x30, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x34, 0x39, 0x37, 0x34, // 0010000000474974
	0x35, 0x31, 0x33, 0x30, 0x35, 0x33, 0x38, 0x39, 0x34, 0x30, 0x34, 0x32, 0x39, 0x36, 0x38, 0x37, // 5130538940429687
	0x35, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x31, 0x32, 0x2e, 0x35, 0x36, 0x36, 0x33, 0x37, 0x30, // 5)) / (12.566370
	0x39, 0x36, 0x34, 0x30, 0x35, 0x30, 0x32, 0x39, 0x32, 0x39, 0x36, 0x38, 0x37, 0x35, 0x20, 0x2f, // 96405029296875 /
	0x20, 0x28, 0x28, 0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  ((6.0 * _mtl_u.
	0x75, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, // u_iblEnvironment
	0x2e, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, // .z) * _mtl_u.u_i
	0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x7a, 0x29, // blEnvironment.z)
	0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, // )), 0.0))).xyz *
	0x20, 0x5f, 0x38, 0x30, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _801);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, //      _1063 = _10
	0x36, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 60;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x32, 0x20, 0x3d, 0x20, //         _1062 = 
	0x5f, 0x31, 0x30, 0x35, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _1059;.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x73, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x77, 0x72, 0x69, 0x74, //    s_target.writ
	0x65, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x39, 0x20, 0x2f, // e(float4(_1059 /
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x30, 0x36, 0x30, 0x29, 0x2c, 0x20, //  float3(_1060), 
	0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x28, 0x69, 0x6e, 0x74, 0x33, // 1.0), uint2(int3
	0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, // (gl_GlobalInvoca
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x78, 0x79, 0x29, 0x2c, 0x20, 0x75, 0x69, 0x6e, // tionID).xy), uin
	0x74, 0x28, 0x69, 0x6e, 0x74, 0x33, 0x28, 0x67, 0x6c, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, // t(int3(gl_Global
	0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x29, 0x2e, 0x7a, 0x29, // InvocationID).z)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // );.        }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //      break;.    
	0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, // } while(false);.
	0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x40, 0x00,                                                       // }....@.
};
