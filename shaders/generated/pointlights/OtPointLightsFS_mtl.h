static const uint8_t OtPointLightsFS_mtl[4322] =
{
	0x46, 0x53, 0x48, 0x0b, 0x01, 0x83, 0xf2, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x13, 0x73, // FSH............s
	0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _iblBrdfLutSampl
	0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x69, // er...........s_i
	0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // blBrdfLutTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x69, 0x62, 0x6c, // ...........s_ibl
	0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, // IrradianceMapSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, // pler...........s
	0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, // _iblIrradianceMa
	0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // pTexture........
	0x00, 0x00, 0x1a, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, // ...s_iblEnvironm
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // entMapSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, // ........s_iblEnv
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, // ironmentMapTextu
	0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x76, // re...........u_v
	0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // iewRect.........
	0x00, 0x0d, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x14, // ..u_invViewProj.
	0x01, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ..........s_ligh
	0x74, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // tingAlbedoTextur
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // eSampler........
	0x00, 0x00, 0x1e, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x62, // ...s_lightingAlb
	0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // edoTextureTextur
	0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x73, 0x5f, 0x6c, 0x69, // e...........s_li
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, // ghtingNormalText
	0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // ureSampler......
	0x00, 0x00, 0x00, 0x00, 0x1e, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x4e, // .....s_lightingN
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, // ormalTextureText
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x73, 0x5f, // ure...........s_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x62, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, // lightingPbrTextu
	0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, // reSampler.......
	0x00, 0x00, 0x00, 0x1b, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x62, // ....s_lightingPb
	0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, // rTextureTexture.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ..........s_ligh
	0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // tingDepthTexture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x1d, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x74, // ..s_lightingDept
	0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, // hTextureTexture.
	0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // ..........u_ligh
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x01, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x73, // ting..P........s
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, // _lightingAlbedoT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x17, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x72, 0x6d, 0x61, // .s_lightingNorma
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // lTexture........
	0x00, 0x00, 0x14, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x62, 0x72, // ...s_lightingPbr
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // Texture.........
	0x00, 0x16, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x74, // ..s_lightingDept
	0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // hTexture........
	0x00, 0x00, 0xf8, 0x0d, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, // ......#include <
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, // metal_stdlib>.#i
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, // nclude <simd/sim
	0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, // d.h>..using name
	0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, // space metal;..st
	0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, // ruct _Global.{. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, //    float4 u_view
	0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // Rect;.    float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // x4 u_invViewProj
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, // ;.    float4 u_l
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, // ighting[4];.};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // in_out.{.    flo
	0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, // at4 bgfx_FragDat
	0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, // a0 [[color(0)]];
	0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, // .};..struct xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // MtlMain_in.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, //  float4 v_color0
	0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, //  [[user(locn0)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x74, // ;.    float3 v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // excoord0 [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, // locn1)]];.};..fr
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // agment xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // in_out xlatMtlMa
	0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, // in(xlatMtlMain_i
	0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, // n in [[stage_in]
	0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, // ], constant _Glo
	0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, // bal& _mtl_u [[bu
	0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ffer(0)]], textu
	0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6c, 0x69, // re2d<float> s_li
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, // ghtingAlbedoText
	0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, // ure [[texture(0)
	0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, // ]], texture2d<fl
	0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x4e, // oat> s_lightingN
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, // ormalTexture [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, // exture(1)]], tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, // ture2d<float> s_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x62, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, // lightingPbrTextu
	0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, // re [[texture(2)]
	0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, // ], texture2d<flo
	0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, // at> s_lightingDe
	0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, // pthTexture [[tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // ture(3)]], sampl
	0x65, 0x72, 0x20, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x62, // er s_lightingAlb
	0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // edoTextureSample
	0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // r [[sampler(0)]]
	0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, // , sampler s_ligh
	0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // tingNormalTextur
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, // eSampler [[sampl
	0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // er(1)]], sampler
	0x20, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x62, 0x72, 0x54, 0x65, //  s_lightingPbrTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, // xtureSampler [[s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, // ampler(2)]], sam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x44, // pler s_lightingD
	0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, // epthTextureSampl
	0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, // er [[sampler(3)]
	0x5d, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, // ], float4 gl_Fra
	0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // gCoord [[positio
	0x6e, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // n]]).{.    xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, // tlMain_out out =
	0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, //  {};.    float4 
	0x5f, 0x37, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // _779 = s_lightin
	0x67, 0x44, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, // gDepthTexture.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x44, // mple(s_lightingD
	0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, // epthTextureSampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, // er, (gl_FragCoor
	0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // d.xy / _mtl_u.u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x2e, 0x7a, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, // viewRect.zw));. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, 0x31, 0x38, 0x20, 0x3d, //    float4 _818 =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, //  _mtl_u.u_invVie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x28, // wProj * float4((
	0x28, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, // (2.0 * (gl_FragC
	0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // oord.x - _mtl_u.
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2f, // u_viewRect.x)) /
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, //  _mtl_u.u_viewRe
	0x63, 0x74, 0x2e, 0x7a, 0x29, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x28, 0x28, 0x32, // ct.z) - 1.0, ((2
	0x2e, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // .0 * (((_mtl_u.u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x2e, 0x77, 0x20, 0x2d, 0x20, 0x67, 0x6c, // _viewRect.w - gl
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x79, 0x29, 0x20, 0x2d, 0x20, // _FragCoord.y) - 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1.0) - _mtl_u.u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, // viewRect.y)) / _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, // mtl_u.u_viewRect
	0x2e, 0x77, 0x29, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x37, 0x37, 0x39, 0x2e, // .w) - 1.0, _779.
	0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // x, 1.0);.    flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x38, 0x31, 0x38, // at3 _825 = (_818
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x38, 0x31, 0x38, 0x2e, 0x77, //  / float4(_818.w
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // )).xyz;.    floa
	0x74, 0x33, 0x20, 0x5f, 0x37, 0x30, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // t3 _702 = fast::
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x74, // normalize(in.v_t
	0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x38, 0x32, 0x35, 0x29, // excoord0 - _825)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x30, 0x36, // ;.    float _706
	0x20, 0x3d, 0x20, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, //  = distance(in.v
	0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2c, 0x20, 0x5f, 0x38, 0x32, 0x35, // _texcoord0, _825
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x33, // );.    float _83
	0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, // 5 = fast::clamp(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x5f, 0x37, 0x30, 0x36, 0x20, // 1.0 - powr(_706 
	0x2f, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2e, 0x77, 0x2c, // / in.v_color0.w,
	0x20, 0x34, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, //  4.0), 0.0, 1.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x34, 0x31, // ;.    float _841
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x38, 0x33, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x33, 0x35, 0x29, //  = (_835 * _835)
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, //  * (1.0 / fast::
	0x6d, 0x61, 0x78, 0x28, 0x5f, 0x37, 0x30, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x30, 0x36, 0x2c, // max(_706 * _706,
	0x20, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, //  9.9999997473787
	0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, // 5163555145263671
	0x38, 0x38, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 88e-05));.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _1210;.    
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x38, 0x34, 0x31, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, // if (_841 > 0.0).
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //     {.        fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x37, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x46, // oat2 _721 = gl_F
	0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x5f, 0x6d, // ragCoord.xy / _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x2e, // tl_u.u_viewRect.
	0x7a, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // zw;.        floa
	0x74, 0x33, 0x20, 0x5f, 0x37, 0x33, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x73, 0x5f, 0x6c, 0x69, 0x67, // t3 _737 = (s_lig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, // htingNormalTextu
	0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, // re.sample(s_ligh
	0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // tingNormalTextur
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x37, 0x32, 0x31, 0x29, 0x2e, // eSampler, _721).
	0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, // xyz * 2.0) - flo
	0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // at3(1.0);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x39, 0x30, 0x31, 0x20, 0x3d, 0x20, //   float4 _901 = 
	0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x62, 0x72, 0x54, 0x65, 0x78, // s_lightingPbrTex
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6c, 0x69, // ture.sample(s_li
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x62, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ghtingPbrTexture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x37, 0x32, 0x31, 0x29, 0x3b, 0x0a, // Sampler, _721);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, //         float _7
	0x34, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x39, 0x30, 0x31, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 43 = _901.x;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x34, 0x36, 0x20, //      float _746 
	0x3d, 0x20, 0x5f, 0x39, 0x30, 0x31, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = _901.y;.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, 0x35, 0x36, 0x20, 0x3d, 0x20, //   float3 _756 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, // fast::normalize(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, // _mtl_u.u_lightin
	0x67, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x38, 0x32, 0x35, 0x29, // g[0].xyz - _825)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // ;.        float3
	0x20, 0x5f, 0x31, 0x30, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, //  _1027 = mix(flo
	0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x31, // at3(0.0399999991
	0x30, 0x35, 0x39, 0x33, 0x30, 0x33, 0x32, 0x38, 0x33, 0x36, 0x39, 0x31, 0x34, 0x30, 0x36, 0x32, // 0593032836914062
	0x35, 0x29, 0x2c, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // 5), powr(s_light
	0x69, 0x6e, 0x67, 0x41, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // ingAlbedoTexture
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, // .sample(s_lighti
	0x6e, 0x67, 0x41, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, // ngAlbedoTextureS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x37, 0x32, 0x31, 0x29, 0x2e, 0x78, 0x79, // ampler, _721).xy
	0x7a, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x32, 0x2e, 0x32, 0x30, 0x30, 0x30, // z, float3(2.2000
	0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, // 0004768371582031
	0x32, 0x35, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x37, 0x34, // 25)), float3(_74
	0x33, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 3));.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x33, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // at3 _939 = fast:
	0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x37, 0x35, 0x36, 0x20, // :normalize(_756 
	0x2b, 0x20, 0x5f, 0x37, 0x30, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // + _702);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x33, 0x39, 0x20, 0x3d, 0x20, //  float3 _1039 = 
	0x5f, 0x31, 0x30, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // _1027 + ((float3
	0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x30, 0x32, 0x37, 0x29, 0x20, 0x2a, // (1.0) - _1027) *
	0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, //  powr(fast::clam
	0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // p(1.0 - fast::ma
	0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x33, 0x39, 0x2c, 0x20, 0x5f, 0x37, 0x35, 0x36, // x(dot(_939, _756
	0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // ), 0.0), 0.0, 1.
	0x30, 0x29, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0), 5.0));.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x39, 0x20, 0x3d, //    float _1049 =
	0x20, 0x5f, 0x37, 0x34, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x37, 0x34, 0x36, 0x3b, 0x0a, 0x20, 0x20, //  _746 * _746;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x35, //       float _105
	0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x30, 0x34, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x34, // 2 = _1049 * _104
	0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 9;.        float
	0x20, 0x5f, 0x31, 0x30, 0x35, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, //  _1056 = fast::m
	0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x37, 0x33, 0x37, 0x2c, 0x20, 0x5f, 0x39, 0x33, // ax(dot(_737, _93
	0x39, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 9), 0.0);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x35, 0x20, 0x3d, 0x20, //   float _1065 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x35, // fast::max(((_105
	0x36, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x35, 0x36, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x31, // 6 * _1056) * (_1
	0x30, 0x35, 0x32, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, // 052 - 1.0)) + 1.
	0x30, 0x2c, 0x20, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, // 0, 9.99999974737
	0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, // 8751635551452636
	0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 7188e-05);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x30, 0x38, 0x35, 0x20, 0x3d, //    float _1085 =
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, //  fast::max(dot(_
	0x37, 0x33, 0x37, 0x2c, 0x20, 0x5f, 0x37, 0x35, 0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // 737, _756), 0.0)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ;.        float 
	0x5f, 0x31, 0x30, 0x38, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // _1089 = fast::ma
	0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x37, 0x33, 0x37, 0x2c, 0x20, 0x5f, 0x37, 0x30, 0x32, // x(dot(_737, _702
	0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ), 0.0);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x5f, //  float _1104 = _
	0x37, 0x34, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 746 + 1.0;.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x20, 0x3d, //    float _1108 =
	0x20, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x34, 0x29, //  (_1104 * _1104)
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  * 0.125;.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x32, 0x20, 0x3d, 0x20, //   float _1122 = 
	0x5f, 0x37, 0x34, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _746 + 1.0;.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x36, 0x20, //     float _1126 
	0x3d, 0x20, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x32, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x32, // = (_1122 * _1122
	0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ) * 0.125;.     
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, //    _1210 = (((((
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, // (float3(1.0) - _
	0x31, 0x30, 0x33, 0x39, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, // 1039) * (1.0 - _
	0x37, 0x34, 0x33, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, // 743)) * float3(0
	0x2e, 0x33, 0x31, 0x38, 0x33, 0x30, 0x39, 0x38, 0x37, 0x33, 0x33, 0x34, 0x32, 0x35, 0x31, 0x34, // .318309873342514
	0x30, 0x33, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, // 0380859375)) + (
	0x28, 0x5f, 0x31, 0x30, 0x33, 0x39, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x35, 0x32, // (_1039 * ((_1052
	0x20, 0x2f, 0x20, 0x28, 0x28, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x37, 0x34, 0x31, //  / ((3.141592741
	0x30, 0x31, 0x32, 0x35, 0x37, 0x33, 0x32, 0x34, 0x32, 0x31, 0x38, 0x37, 0x35, 0x20, 0x2a, 0x20, // 0125732421875 * 
	0x5f, 0x31, 0x30, 0x36, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x30, 0x36, 0x35, 0x29, 0x29, // _1065) * _1065))
	0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x39, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x5f, //  * ((_1089 / ((_
	0x31, 0x30, 0x38, 0x39, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, // 1089 * (1.0 - _1
	0x31, 0x32, 0x36, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x31, 0x32, 0x36, 0x29, 0x29, 0x20, // 126)) + _1126)) 
	0x2a, 0x20, 0x28, 0x5f, 0x31, 0x30, 0x38, 0x35, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x30, // * (_1085 / ((_10
	0x38, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x31, 0x30, // 85 * (1.0 - _110
	0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x38, 0x29, 0x29, 0x29, 0x29, 0x29, // 8)) + _1108)))))
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x28, 0x34, 0x2e, 0x30, 0x20, //  / float3(((4.0 
	0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, // * fast::max(dot(
	0x5f, 0x37, 0x33, 0x37, 0x2c, 0x20, 0x5f, 0x37, 0x35, 0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, // _737, _756), 0.0
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, // )) * fast::max(d
	0x6f, 0x74, 0x28, 0x5f, 0x37, 0x33, 0x37, 0x2c, 0x20, 0x5f, 0x37, 0x30, 0x32, 0x29, 0x2c, 0x20, // ot(_737, _702), 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, // 0.0)) + 9.999999
	0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, // 7473787516355514
	0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x29, // 526367188e-05)))
	0x20, 0x2a, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2e, 0x78, //  * in.v_color0.x
	0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, // yz) * fast::clam
	0x70, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x37, 0x33, 0x37, 0x2c, 0x20, 0x5f, 0x37, 0x30, 0x32, // p(dot(_737, _702
	0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, // ), 0.0, 1.0)) * 
	0x5f, 0x38, 0x34, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, // _841;.    }.    
	0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // else.    {.     
	0x20, 0x20, 0x20, 0x5f, 0x31, 0x32, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //    _1210 = float
	0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // 3(0.0);.    }.  
	0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, //   out.bgfx_FragD
	0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, // ata0 = float4(_1
	0x32, 0x31, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, // 210, 1.0);.    r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, // eturn out;.}....
	0x40, 0x01,                                                                                     // @.
};
