static const uint8_t OtHdrReprojectFS_essl[1552] =
{
	0x46, 0x53, 0x48, 0x0b, 0x70, 0x94, 0x72, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x14, 0x73, // FSH.p.r........s
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, // _equirectangular
	0x4d, 0x61, 0x70, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xde, 0x05, 0x00, // Map.............
	0x00, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, // .varying highp v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, // ec3 v_position;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, // uniform sampler2
	0x44, 0x20, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, // D s_equirectangu
	0x6c, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, // larMap;.void mai
	0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, // n ().{.  highp v
	0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, // ec3 tmpvar_1;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // tmpvar_1 = norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, // lize(v_position)
	0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ;.  highp float 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, // tmpvar_2;.  high
	0x70, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, // p float tmpvar_3
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x28, // ;.  tmpvar_3 = (
	0x6d, 0x69, 0x6e, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, // min (abs(.    (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, // mpvar_1.x / tmpv
	0x61, 0x72, 0x5f, 0x31, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, // ar_1.z).  ), 1.0
	0x29, 0x20, 0x2f, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x0a, 0x20, 0x20, // ) / max (abs(.  
	0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2f, 0x20, //   (tmpvar_1.x / 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x29, 0x2c, // tmpvar_1.z).  ),
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, //  1.0));.  highp 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, // float tmpvar_4;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, //   tmpvar_4 = (tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // pvar_3 * tmpvar_
	0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x3d, // 3);.  tmpvar_4 =
	0x20, 0x28, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x28, 0x28, 0x0a, 0x20, 0x20, //  (((.    ((((.  
	0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x31, 0x32, 0x31, 0x33, //     ((((-0.01213
	0x32, 0x33, 0x32, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x29, 0x20, // 232 * tmpvar_4) 
	0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x33, 0x36, 0x38, 0x31, 0x33, 0x38, 0x29, 0x20, 0x2a, 0x20, // + 0.05368138) * 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x31, 0x31, // tmpvar_4) - 0.11
	0x37, 0x33, 0x35, 0x30, 0x33, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2a, 0x20, 0x74, 0x6d, // 73503).     * tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x31, 0x39, 0x33, 0x38, // pvar_4) + 0.1938
	0x39, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x29, // 925) * tmpvar_4)
	0x20, 0x2d, 0x20, 0x30, 0x2e, 0x33, 0x33, 0x32, 0x36, 0x37, 0x35, 0x36, 0x29, 0x0a, 0x20, 0x20, //  - 0.3326756).  
	0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x30, //  * tmpvar_4) + 0
	0x2e, 0x39, 0x39, 0x39, 0x39, 0x37, 0x39, 0x33, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, // .9999793) * tmpv
	0x61, 0x72, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ar_3);.  tmpvar_
	0x34, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x2b, 0x20, // 4 = (tmpvar_4 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x61, 0x62, 0x73, // (float(.    (abs
	0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2f, 0x20, 0x74, // ((tmpvar_1.x / t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3e, 0x20, 0x31, 0x2e, // mpvar_1.z)) > 1.
	0x30, 0x29, 0x0a, 0x20, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, // 0).  ) * (.    (
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x2a, 0x20, 0x2d, 0x32, 0x2e, 0x30, 0x29, // tmpvar_4 * -2.0)
	0x0a, 0x20, 0x20, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x35, 0x37, 0x30, 0x37, 0x39, 0x36, 0x29, 0x29, // .   + 1.570796))
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x3d, 0x20, // );.  tmpvar_2 = 
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x2a, 0x20, 0x73, 0x69, 0x67, 0x6e, // (tmpvar_4 * sign
	0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2f, 0x20, 0x74, // ((tmpvar_1.x / t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // mpvar_1.z)));.  
	0x69, 0x66, 0x20, 0x28, 0x28, 0x61, 0x62, 0x73, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // if ((abs(tmpvar_
	0x31, 0x2e, 0x7a, 0x29, 0x20, 0x3e, 0x20, 0x28, 0x31, 0x65, 0x2d, 0x30, 0x38, 0x20, 0x2a, 0x20, // 1.z) > (1e-08 * 
	0x61, 0x62, 0x73, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x29, 0x29, // abs(tmpvar_1.x))
	0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, // )) {.    if ((tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // pvar_1.z < 0.0))
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, //  {.      if ((tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, // pvar_1.x >= 0.0)
	0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // ) {.        tmpv
	0x61, 0x72, 0x5f, 0x32, 0x20, 0x2b, 0x3d, 0x20, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x33, // ar_2 += 3.141593
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, // ;.      } else {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // .        tmpvar_
	0x32, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x2d, 0x20, // 2 = (tmpvar_2 - 
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 3.141593);.     
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, //  };.    };.  } e
	0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // lse {.    tmpvar
	0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x73, 0x69, 0x67, 0x6e, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, // _2 = (sign(tmpva
	0x72, 0x5f, 0x31, 0x2e, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x35, 0x37, 0x30, 0x37, 0x39, // r_1.x) * 1.57079
	0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, // 6);.  };.  highp
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x78, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x78, 0x5f, //  float x_5;.  x_
	0x35, 0x20, 0x3d, 0x20, 0x2d, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x79, // 5 = -(tmpvar_1.y
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // );.  highp vec2 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // tmpvar_6;.  tmpv
	0x61, 0x72, 0x5f, 0x36, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ar_6.x = tmpvar_
	0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x79, 0x20, // 2;.  tmpvar_6.y 
	0x3d, 0x20, 0x28, 0x73, 0x69, 0x67, 0x6e, 0x28, 0x78, 0x5f, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x28, // = (sign(x_5) * (
	0x31, 0x2e, 0x35, 0x37, 0x30, 0x37, 0x39, 0x36, 0x20, 0x2d, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, // 1.570796 - (.   
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, //  sqrt((1.0 - abs
	0x28, 0x78, 0x5f, 0x35, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, // (x_5))).   * .  
	0x20, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x37, 0x30, 0x37, 0x39, 0x36, 0x20, 0x2b, 0x20, 0x28, 0x61, //   (1.570796 + (a
	0x62, 0x73, 0x28, 0x78, 0x5f, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x30, 0x2e, 0x32, 0x31, // bs(x_5) * (-0.21
	0x34, 0x36, 0x30, 0x31, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 46018 + (.      
	0x61, 0x62, 0x73, 0x28, 0x78, 0x5f, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2a, 0x20, // abs(x_5).     * 
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x30, 0x2e, 0x30, 0x38, 0x36, 0x35, 0x36, 0x36, // .      (0.086566
	0x37, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x78, 0x5f, 0x35, 0x29, 0x20, 0x2a, // 72 + (abs(x_5) *
	0x20, 0x2d, 0x30, 0x2e, 0x30, 0x33, 0x31, 0x30, 0x32, 0x39, 0x35, 0x35, 0x29, 0x29, 0x0a, 0x20, //  -0.03102955)). 
	0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, //    )))).  )));. 
	0x20, 0x6c, 0x6f, 0x77, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //  lowp vec4 tmpva
	0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, // r_7;.  tmpvar_7.
	0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // w = 1.0;.  tmpva
	0x72, 0x5f, 0x37, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // r_7.xyz = textur
	0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, // e2D (s_equirecta
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x2c, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, // ngularMap, ((tmp
	0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x31, // var_6 * vec2(0.1
	0x35, 0x39, 0x31, 0x35, 0x34, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x31, 0x38, 0x33, 0x30, 0x39, // 591549, 0.318309
	0x39, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, // 9)) + 0.5)).xyz;
	0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // .  gl_FragColor 
	0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, // = tmpvar_7;.}...
};
