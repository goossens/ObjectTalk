static const uint8_t OtHdrReprojectFS_glsl[1505] =
{
	0x46, 0x53, 0x48, 0x0b, 0x70, 0x94, 0x72, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x14, 0x73, // FSH.p.r........s
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, // _equirectangular
	0x4d, 0x61, 0x70, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x05, 0x00, // Map.............
	0x00, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, // .varying vec3 v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // position;.unifor
	0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x65, 0x71, // m sampler2D s_eq
	0x75, 0x69, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x70, // uirectangularMap
	0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, // ;.void main ().{
	0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // .  vec3 tmpvar_1
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6e, // ;.  tmpvar_1 = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // ormalize(v_posit
	0x69, 0x6f, 0x6e, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, // ion);.  float tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // pvar_2;.  float 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // tmpvar_3;.  tmpv
	0x61, 0x72, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x6d, 0x69, 0x6e, 0x20, 0x28, 0x61, 0x62, 0x73, // ar_3 = (min (abs
	0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, // (.    (tmpvar_1.
	0x78, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x7a, 0x29, 0x0a, // x / tmpvar_1.z).
	0x20, 0x20, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x6d, 0x61, 0x78, 0x20, //   ), 1.0) / max 
	0x28, 0x61, 0x62, 0x73, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, // (abs(.    (tmpva
	0x72, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // r_1.x / tmpvar_1
	0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, // .z).  ), 1.0));.
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, //   float tmpvar_4
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x28, // ;.  tmpvar_4 = (
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // tmpvar_3 * tmpva
	0x72, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, // r_3);.  tmpvar_4
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x28, 0x28, 0x0a, //  = (((.    ((((.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x28, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x31, 0x32, //       ((((-0.012
	0x31, 0x33, 0x32, 0x33, 0x32, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, // 13232 * tmpvar_4
	0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x33, 0x36, 0x38, 0x31, 0x33, 0x38, 0x29, 0x20, // ) + 0.05368138) 
	0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, // * tmpvar_4) - 0.
	0x31, 0x31, 0x37, 0x33, 0x35, 0x30, 0x33, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2a, 0x20, // 1173503).     * 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x31, 0x39, // tmpvar_4) + 0.19
	0x33, 0x38, 0x39, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // 38925) * tmpvar_
	0x34, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x33, 0x33, 0x32, 0x36, 0x37, 0x35, 0x36, 0x29, 0x0a, // 4) - 0.3326756).
	0x20, 0x20, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x29, 0x20, 0x2b, //    * tmpvar_4) +
	0x20, 0x30, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x37, 0x39, 0x33, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, //  0.9999793) * tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // pvar_3);.  tmpva
	0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, // r_4 = (tmpvar_4 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x61, // + (float(.    (a
	0x62, 0x73, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2f, // bs((tmpvar_1.x /
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x3e, 0x20, //  tmpvar_1.z)) > 
	0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, // 1.0).  ) * (.   
	0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x2a, 0x20, 0x2d, 0x32, 0x2e, //  (tmpvar_4 * -2.
	0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x35, 0x37, 0x30, 0x37, 0x39, 0x36, // 0).   + 1.570796
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, // )));.  tmpvar_2 
	0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x2a, 0x20, 0x73, 0x69, // = (tmpvar_4 * si
	0x67, 0x6e, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x2f, // gn((tmpvar_1.x /
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x3b, 0x0a, //  tmpvar_1.z)));.
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x61, 0x62, 0x73, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, //   if ((abs(tmpva
	0x72, 0x5f, 0x31, 0x2e, 0x7a, 0x29, 0x20, 0x3e, 0x20, 0x28, 0x31, 0x65, 0x2d, 0x30, 0x38, 0x20, // r_1.z) > (1e-08 
	0x2a, 0x20, 0x61, 0x62, 0x73, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, // * abs(tmpvar_1.x
	0x29, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // )))) {.    if ((
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x7a, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, // tmpvar_1.z < 0.0
	0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, // )) {.      if ((
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, // tmpvar_1.x >= 0.
	0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, // 0)) {.        tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x2b, 0x3d, 0x20, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, // pvar_2 += 3.1415
	0x39, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, // 93;.      } else
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //  {.        tmpva
	0x72, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, // r_2 = (tmpvar_2 
	0x2d, 0x20, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // - 3.141593);.   
	0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x7d, //    };.    };.  }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, //  else {.    tmpv
	0x61, 0x72, 0x5f, 0x32, 0x20, 0x3d, 0x20, 0x28, 0x73, 0x69, 0x67, 0x6e, 0x28, 0x74, 0x6d, 0x70, // ar_2 = (sign(tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x35, 0x37, 0x30, // var_1.x) * 1.570
	0x37, 0x39, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 796);.  };.  flo
	0x61, 0x74, 0x20, 0x78, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x78, 0x5f, 0x35, 0x20, 0x3d, 0x20, // at x_5;.  x_5 = 
	0x2d, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, // -(tmpvar_1.y);. 
	0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, //  vec2 tmpvar_6;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x74, //   tmpvar_6.x = t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // mpvar_2;.  tmpva
	0x72, 0x5f, 0x36, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x73, 0x69, 0x67, 0x6e, 0x28, 0x78, 0x5f, // r_6.y = (sign(x_
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x37, 0x30, 0x37, 0x39, 0x36, 0x20, 0x2d, // 5) * (1.570796 -
	0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x28, 0x31, 0x2e, 0x30, //  (.    sqrt((1.0
	0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x5f, 0x35, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, //  - abs(x_5))).  
	0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x31, 0x2e, 0x35, 0x37, 0x30, 0x37, 0x39, //  * .    (1.57079
	0x36, 0x20, 0x2b, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, 0x78, 0x5f, 0x35, 0x29, 0x20, 0x2a, 0x20, // 6 + (abs(x_5) * 
	0x28, 0x2d, 0x30, 0x2e, 0x32, 0x31, 0x34, 0x36, 0x30, 0x31, 0x38, 0x20, 0x2b, 0x20, 0x28, 0x0a, // (-0.2146018 + (.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x73, 0x28, 0x78, 0x5f, 0x35, 0x29, 0x0a, 0x20, //       abs(x_5). 
	0x20, 0x20, 0x20, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x30, 0x2e, //     * .      (0.
	0x30, 0x38, 0x36, 0x35, 0x36, 0x36, 0x37, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x61, 0x62, 0x73, 0x28, // 08656672 + (abs(
	0x78, 0x5f, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x2d, 0x30, 0x2e, 0x30, 0x33, 0x31, 0x30, 0x32, 0x39, // x_5) * -0.031029
	0x35, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, // 55)).    )))).  
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, // )));.  vec4 tmpv
	0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, // ar_7;.  tmpvar_7
	0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // .w = 1.0;.  tmpv
	0x61, 0x72, 0x5f, 0x37, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ar_7.xyz = textu
	0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x63, 0x74, // re2D (s_equirect
	0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x4d, 0x61, 0x70, 0x2c, 0x20, 0x28, 0x28, 0x74, 0x6d, // angularMap, ((tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x2a, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, // pvar_6 * vec2(0.
	0x31, 0x35, 0x39, 0x31, 0x35, 0x34, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x31, 0x38, 0x33, 0x30, // 1591549, 0.31830
	0x39, 0x39, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, // 99)) + 0.5)).xyz
	0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // ;.  gl_FragColor
	0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, //  = tmpvar_7;.}..
	0x00,                                                                                           // .
};
