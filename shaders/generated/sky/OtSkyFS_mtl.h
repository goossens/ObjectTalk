static const uint8_t OtSkyFS_mtl[11159] =
{
	0x46, 0x53, 0x48, 0x0b, 0x70, 0x94, 0x72, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x75, // FSH.p.r........u
	0x5f, 0x73, 0x6b, 0x79, 0x12, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x2b, // _sky..........q+
	0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, // ..#include <meta
	0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, // l_stdlib>.#inclu
	0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, // de <simd/simd.h>
	0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, // ..using namespac
	0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, // e metal;..struct
	0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, //  _Global.{.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x33, 0x5d, 0x3b, 0x0a, // loat4 u_sky[3];.
	0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // };..struct xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, // tlMain_out.{.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, //  float4 bgfx_Fra
	0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, // gData0 [[color(0
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, // )]];.    float g
	0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x5b, 0x5b, 0x64, 0x65, // l_FragDepth [[de
	0x70, 0x74, 0x68, 0x28, 0x61, 0x6e, 0x79, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, // pth(any)]];.};..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // struct xlatMtlMa
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // in_in.{.    floa
	0x74, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x5b, 0x5b, // t3 v_position [[
	0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, // user(locn0)]];.}
	0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, // ;..fragment xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, // MtlMain_out xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // MtlMain(xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, // ain_in in [[stag
	0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, // e_in]], constant
	0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  _Global& _mtl_u
	0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x29, 0x0a, //  [[buffer(0)]]).
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, // {.    xlatMtlMai
	0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, // n_out out = {};.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x30, 0x34, 0x20, //     float3 _604 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // = fast::normaliz
	0x65, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x29, // e(in.v_position)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x36, 0x30, 0x34, 0x2e, 0x79, // ;.    if (_604.y
	0x20, 0x3c, 0x20, 0x28, 0x2d, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, //  < (-0.100000001
	0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, // 4901161193847656
	0x32, 0x35, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 25)).    {.     
	0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, //    discard_fragm
	0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // ent();.    }.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x66, //  float3 _612 = f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // loat3(_mtl_u.u_s
	0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ky[1].x);.    fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, // oat _623 = dot(_
	0x36, 0x30, 0x34, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // 604, fast::norma
	0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, // lize(_mtl_u.u_sk
	0x79, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // y[2].xyz));.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x6d, 0x69, // float3 _845 = mi
	0x78, 0x28, 0x28, 0x28, 0x65, 0x78, 0x70, 0x28, 0x28, 0x28, 0x5f, 0x36, 0x31, 0x32, 0x20, 0x2a, // x(((exp(((_612 *
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x35, 0x2e, 0x35, 0x38, 0x36, 0x35, 0x39, 0x32, //  float3(5.586592
	0x31, 0x39, 0x37, 0x34, 0x31, 0x38, 0x32, 0x31, 0x32, 0x38, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, // 197418212890625,
	0x20, 0x39, 0x2e, 0x34, 0x33, 0x33, 0x39, 0x36, 0x32, 0x38, 0x32, 0x31, 0x39, 0x36, 0x30, 0x34, //  9.4339628219604
	0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x39, 0x2e, 0x36, 0x30, 0x37, 0x38, // 4921875, 19.6078
	0x34, 0x33, 0x33, 0x39, 0x39, 0x30, 0x34, 0x37, 0x38, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, // 433990478515625)
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x2d, 0x65, 0x78, 0x70, 0x28, 0x28, 0x28, 0x66, 0x6d, 0x61, // ) * ((-exp(((fma
	0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x32, 0x5d, // (_mtl_u.u_sky[2]
	0x2e, 0x79, 0x2c, 0x20, 0x34, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x36, 0x30, 0x34, 0x2e, 0x79, 0x29, // .y, 4.0, _604.y)
	0x20, 0x2a, 0x20, 0x28, 0x65, 0x78, 0x70, 0x28, 0x5f, 0x36, 0x30, 0x34, 0x2e, 0x79, 0x20, 0x2a, //  * (exp(_604.y *
	0x20, 0x28, 0x2d, 0x31, 0x36, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x31, 0x30, //  (-16.0)) + 0.10
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, 0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, // 0000001490116119
	0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x2d, // 384765625)) * (-
	0x30, 0x2e, 0x30, 0x31, 0x32, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x38, 0x36, 0x32, 0x36, // 0.01250000018626
	0x34, 0x35, 0x31, 0x34, 0x39, 0x32, 0x33, 0x30, 0x39, 0x35, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, // 4514923095703125
	0x29, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, // )) / _mtl_u.u_sk
	0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x65, 0x78, 0x70, 0x28, // y[1].x)) * (exp(
	0x5f, 0x36, 0x30, 0x34, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x31, 0x36, 0x2e, 0x30, 0x29, // _604.y * (-16.0)
	0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x34, // ) + 0.1000000014
	0x39, 0x30, 0x31, 0x31, 0x36, 0x31, 0x31, 0x39, 0x33, 0x38, 0x34, 0x37, 0x36, 0x35, 0x36, 0x32, // 9011611938476562
	0x35, 0x29, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, // 5))) / float3(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, // tl_u.u_sky[1].x)
	0x29, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, 0x28, 0x28, 0x2d, 0x5f, 0x36, 0x30, 0x34, 0x2e, // ) * exp(((-_604.
	0x79, 0x29, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, 0x5f, 0x36, 0x30, 0x34, 0x2e, 0x79, 0x20, // y) * exp(_604.y 
	0x2a, 0x20, 0x28, 0x2d, 0x38, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x2e, 0x30, // * (-8.0))) * 4.0
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x28, 0x5f, 0x36, 0x30, 0x34, 0x2e, 0x79, 0x20, // )) * exp(_604.y 
	0x2a, 0x20, 0x28, 0x2d, 0x32, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x2e, 0x30, // * (-2.0))) * 4.0
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x65, // , float3(1.0 - e
	0x78, 0x70, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, // xp(_mtl_u.u_sky[
	0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, // 2].y)) * 0.20000
	0x30, 0x30, 0x30, 0x32, 0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, // 0002980232238769
	0x35, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x66, 0x6d, // 53125, float3(fm
	0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x32, // a(_mtl_u.u_sky[2
	0x5d, 0x2e, 0x79, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // ].y, -0.20000000
	0x32, 0x39, 0x38, 0x30, 0x32, 0x33, 0x32, 0x32, 0x33, 0x38, 0x37, 0x36, 0x39, 0x35, 0x33, 0x31, // 2980232238769531
	0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 25, 0.5)));.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x37, 0x34, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x28, // float3 _741 = ((
	0x66, 0x6d, 0x61, 0x28, 0x5f, 0x36, 0x31, 0x32, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // fma(_612, float3
	0x28, 0x35, 0x2e, 0x35, 0x38, 0x36, 0x35, 0x39, 0x32, 0x31, 0x39, 0x37, 0x34, 0x31, 0x38, 0x32, // (5.5865921974182
	0x31, 0x32, 0x38, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x39, 0x2e, 0x34, 0x33, 0x33, 0x39, // 12890625, 9.4339
	0x36, 0x32, 0x38, 0x32, 0x31, 0x39, 0x36, 0x30, 0x34, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, // 6282196044921875
	0x2c, 0x20, 0x31, 0x39, 0x2e, 0x36, 0x30, 0x37, 0x38, 0x34, 0x33, 0x33, 0x39, 0x39, 0x30, 0x34, // , 19.60784339904
	0x37, 0x38, 0x35, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x66, 0x6c, // 78515625), (((fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, // oat3(_mtl_u.u_sk
	0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // y[1].y) * float3
	0x28, 0x31, 0x2e, 0x34, 0x33, 0x36, 0x37, 0x38, 0x31, 0x36, 0x34, 0x34, 0x38, 0x32, 0x31, 0x31, // (1.4367816448211
	0x36, 0x36, 0x39, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x32, // 669921875, 1.602
	0x35, 0x36, 0x34, 0x30, 0x39, 0x36, 0x34, 0x35, 0x30, 0x38, 0x30, 0x35, 0x36, 0x36, 0x34, 0x30, // 5640964508056640
	0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x38, 0x36, 0x39, 0x31, 0x35, 0x38, 0x37, 0x34, 0x34, // 625, 1.869158744
	0x38, 0x31, 0x32, 0x30, 0x31, 0x31, 0x37, 0x31, 0x38, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, // 81201171875)) * 
	0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, // fma(-_mtl_u.u_sk
	0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // y[1].z, _mtl_u.u
	0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // _sky[1].z, 1.0))
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x6d, //  / float3(fma(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x2c, // tl_u.u_sky[1].z,
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, //  _mtl_u.u_sky[1]
	0x2e, 0x7a, 0x2c, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, // .z, 2.0))) / flo
	0x61, 0x74, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x6d, 0x74, // at3(powr(fma(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, // l_u.u_sky[1].z *
	0x20, 0x28, 0x2d, 0x32, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x36, 0x32, 0x33, 0x2c, 0x20, 0x66, //  (-2.0), _623, f
	0x6d, 0x61, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, // ma(_mtl_u.u_sky[
	0x31, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // 1].z, _mtl_u.u_s
	0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, // ky[1].z, 1.0)), 
	0x31, 0x2e, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 1.5))) / float3(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x31, 0x5d, 0x2e, // _mtl_u.u_sky[1].
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, // x + _mtl_u.u_sky
	0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x30, 0x2e, 0x31, 0x31, 0x39, // [1].y)) * (0.119
	0x34, 0x32, 0x36, 0x37, 0x34, 0x39, 0x36, 0x34, 0x36, 0x36, 0x36, 0x33, 0x36, 0x36, 0x35, 0x37, // 4267496466636657
	0x37, 0x31, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, // 71484375 * fma(_
	0x36, 0x32, 0x33, 0x2c, 0x20, 0x5f, 0x36, 0x32, 0x33, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, // 623, _623, 1.0))
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x34, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ) * _845;.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x37, 0x38, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _2784;.    
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, // if (_mtl_u.u_sky
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, // [0].y > 0.0).   
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  {.        float
	0x33, 0x20, 0x5f, 0x37, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, 0x36, 0x30, 0x34, 0x20, // 3 _759 = ((_604 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x36, 0x30, 0x34, 0x2e, 0x79, 0x29, // / float3(_604.y)
	0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ) * 2.0) + float
	0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x30, // 3(_mtl_u.u_sky[0
	0x5d, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // ].x * 0.05000000
	0x30, 0x37, 0x34, 0x35, 0x30, 0x35, 0x38, 0x30, 0x35, 0x39, 0x36, 0x39, 0x32, 0x33, 0x38, 0x32, // 0745058059692382
	0x38, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 8125);.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x39, 0x32, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, // loat3 _926 = fra
	0x63, 0x74, 0x28, 0x5f, 0x37, 0x35, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ct(_759);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x64, //   float _929 = d
	0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x37, 0x35, 0x39, 0x29, 0x2c, 0x20, // ot(floor(_759), 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, // float3(1.0, 157.
	0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0, 113.0));.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x36, 0x31, 0x20, //     float3 _861 
	0x3d, 0x20, 0x28, 0x5f, 0x37, 0x35, 0x39, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x31, 0x30, 0x30, 0x30, // = (_759 * 1.1000
	0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, // 0002384185791015
	0x36, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, // 625) * float3x3(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, // float3(0.0, 1.60
	0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, // 0000023841857910
	0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // 15625, 1.2000000
	0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, // 476837158203125)
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, // , float3(-1.6000
	0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, // 0002384185791015
	0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x38, // 625, 0.720000028
	0x36, 0x31, 0x30, 0x32, 0x32, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, // 6102294921875, -
	0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, // 0.95999997854232
	0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // 7880859375), flo
	0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, // at3(-1.200000047
	0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, // 6837158203125, -
	0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, // 0.95999997854232
	0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, // 7880859375, 1.27
	0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x31, 0x33, 0x38, 0x39, 0x37, 0x37, 0x30, 0x35, 0x30, 0x37, // 9999971389770507
	0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 8125));.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x39, 0x20, 0x3d, 0x20, 0x66, // float3 _1099 = f
	0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x38, 0x36, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ract(_861);.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x31, 0x30, 0x32, 0x20, //     float _1102 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x38, 0x36, 0x31, // = dot(floor(_861
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, // ), float3(1.0, 1
	0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 57.0, 113.0));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, //        float3 _8
	0x36, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x38, 0x36, 0x31, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x32, // 69 = (_861 * 1.2
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, // 0000004768371582
	0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, // 03125) * float3x
	0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // 3(float3(0.0, 1.
	0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, // 6000000238418579
	0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, // 1015625, 1.20000
	0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, // 0047683715820312
	0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, // 5), float3(-1.60
	0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, // 0000023841857910
	0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, // 15625, 0.7200000
	0x32, 0x38, 0x36, 0x31, 0x30, 0x32, 0x32, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, // 286102294921875,
	0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, //  -0.959999978542
	0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, // 327880859375), f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // loat3(-1.2000000
	0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, // 476837158203125,
	0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, //  -0.959999978542
	0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, // 327880859375, 1.
	0x32, 0x37, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x31, 0x33, 0x38, 0x39, 0x37, 0x37, 0x30, 0x35, // 2799999713897705
	0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 078125));.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x32, 0x20, 0x3d, //   float3 _1272 =
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x38, 0x36, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, //  fract(_869);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x37, //       float _127
	0x35, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x38, // 5 = dot(floor(_8
	0x36, 0x39, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, // 69), float3(1.0,
	0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, //  157.0, 113.0));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .        float _
	0x38, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, // 874 = fma(mix(mi
	0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // x(mix(fract(sin(
	0x5f, 0x31, 0x32, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // _1275) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // 46875), fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, // n(_1275 + 1.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x5f, 0x31, 0x32, 0x37, 0x32, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, // _1272.x), mix(fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, 0x2b, 0x20, // act(sin(_1275 + 
	0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // 157.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // 46875), fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, // n(_1275 + 158.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x32, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x37, // , _1272.x), _127
	0x32, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, // 2.y), mix(mix(fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, 0x2b, 0x20, // act(sin(_1275 + 
	0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // 113.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // 46875), fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, // n(_1275 + 114.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x32, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, // , _1272.x), mix(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, // fract(sin(_1275 
	0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 270.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // .546875), fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x32, 0x37, 0x35, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, // sin(_1275 + 271.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x32, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, // 5), _1272.x), _1
	0x32, 0x37, 0x32, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x32, 0x2e, 0x7a, 0x29, // 272.y), _1272.z)
	0x2c, 0x20, 0x30, 0x2e, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x31, 0x36, 0x33, 0x33, // , 0.166666671633
	0x37, 0x32, 0x30, 0x33, 0x39, 0x37, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, // 72039794921875, 
	0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, // fma(mix(mix(mix(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x39, 0x32, 0x39, 0x29, 0x20, // fract(sin(_929) 
	0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, // * 43758.546875),
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x39, 0x32, 0x39, 0x20, //  fract(sin(_929 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // + 1.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x32, 0x36, 0x2e, 0x78, 0x29, 0x2c, // 46875), _926.x),
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, //  mix(fract(sin(_
	0x39, 0x32, 0x39, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, // 929 + 157.0) * 4
	0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, // 3758.546875), fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x39, 0x32, 0x39, 0x20, 0x2b, 0x20, 0x31, // act(sin(_929 + 1
	0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, // 58.0) * 43758.54
	0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x32, 0x36, 0x2e, 0x78, 0x29, 0x2c, 0x20, // 6875), _926.x), 
	0x5f, 0x39, 0x32, 0x36, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, // _926.y), mix(mix
	0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x39, 0x32, 0x39, 0x20, // (fract(sin(_929 
	0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 113.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // .546875), fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x39, 0x32, 0x39, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, // sin(_929 + 114.0
	0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, // ) * 43758.546875
	0x29, 0x2c, 0x20, 0x5f, 0x39, 0x32, 0x36, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, // ), _926.x), mix(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x39, 0x32, 0x39, 0x20, 0x2b, // fract(sin(_929 +
	0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, //  270.0) * 43758.
	0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, // 546875), fract(s
	0x69, 0x6e, 0x28, 0x5f, 0x39, 0x32, 0x39, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, // in(_929 + 271.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x5f, 0x39, 0x32, 0x36, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x32, 0x36, 0x2e, // , _926.x), _926.
	0x79, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x32, 0x36, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x35, // y), _926.z), 0.5
	0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, // , mix(mix(mix(fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x32, 0x29, 0x20, 0x2a, // act(sin(_1102) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x32, 0x20, // fract(sin(_1102 
	0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // + 1.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x39, 0x2e, 0x78, 0x29, // 46875), _1099.x)
	0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // , mix(fract(sin(
	0x5f, 0x31, 0x31, 0x30, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _1102 + 157.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x32, 0x20, // fract(sin(_1102 
	0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 158.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x39, 0x2e, // .546875), _1099.
	0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x39, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, // x), _1099.y), mi
	0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // x(mix(fract(sin(
	0x5f, 0x31, 0x31, 0x30, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _1102 + 113.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x32, 0x20, // fract(sin(_1102 
	0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 114.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x39, 0x2e, // .546875), _1099.
	0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // x), mix(fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x31, 0x30, 0x32, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, // n(_1102 + 270.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x31, 0x30, // , fract(sin(_110
	0x32, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 2 + 271.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x39, // 58.546875), _109
	0x39, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x39, 0x39, 0x2e, 0x79, 0x29, 0x2c, 0x20, // 9.x), _1099.y), 
	0x5f, 0x31, 0x30, 0x39, 0x39, 0x2e, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, // _1099.z) * 0.25)
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // );.        float
	0x33, 0x20, 0x5f, 0x38, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x38, 0x36, 0x39, 0x20, 0x2a, // 3 _877 = (_869 *
	0x20, 0x31, 0x2e, 0x32, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x35, 0x32, 0x33, 0x31, 0x36, 0x32, //  1.2999999523162
	0x38, 0x34, 0x31, 0x37, 0x39, 0x36, 0x38, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // 841796875) * flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, // at3x3(float3(0.0
	0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, // , 1.600000023841
	0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, // 85791015625, 1.2
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, // 0000004768371582
	0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, // 03125), float3(-
	0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, // 1.60000002384185
	0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, // 791015625, 0.720
	0x30, 0x30, 0x30, 0x30, 0x32, 0x38, 0x36, 0x31, 0x30, 0x32, 0x32, 0x39, 0x34, 0x39, 0x32, 0x31, // 0000286102294921
	0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, // 875, -0.95999997
	0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, // 8542327880859375
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, // ), float3(-1.200
	0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, // 0000476837158203
	0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, // 125, -0.95999997
	0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, // 8542327880859375
	0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x31, 0x33, 0x38, 0x39, // , 1.279999971389
	0x37, 0x37, 0x30, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 7705078125));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x34, //       float3 _14
	0x34, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x38, 0x37, 0x37, 0x29, // 45 = fract(_877)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // ;.        float 
	0x5f, 0x31, 0x34, 0x34, 0x38, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, // _1448 = dot(floo
	0x72, 0x28, 0x5f, 0x38, 0x37, 0x37, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // r(_877), float3(
	0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, // 1.0, 157.0, 113.
	0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 0));.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x38, 0x37, 0x37, // at3 _885 = (_877
	0x20, 0x2a, 0x20, 0x31, 0x2e, 0x33, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x36, 0x31, 0x35, //  * 1.39999997615
	0x38, 0x31, 0x34, 0x32, 0x30, 0x38, 0x39, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, // 814208984375) * 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // float3x3(float3(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, // 0.0, 1.600000023
	0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, // 84185791015625, 
	0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, // 1.20000004768371
	0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 58203125), float
	0x33, 0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, // 3(-1.60000002384
	0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, // 185791015625, 0.
	0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x38, 0x36, 0x31, 0x30, 0x32, 0x32, 0x39, 0x34, // 7200000286102294
	0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, // 921875, -0.95999
	0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, // 9978542327880859
	0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, // 375), float3(-1.
	0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, // 2000000476837158
	0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, // 203125, -0.95999
	0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, // 9978542327880859
	0x33, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x31, // 375, 1.279999971
	0x33, 0x38, 0x39, 0x37, 0x37, 0x30, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, // 3897705078125));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .        float3 
	0x5f, 0x31, 0x36, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x38, // _1618 = fract(_8
	0x38, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // 85);.        flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, // at _1621 = dot(f
	0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x38, 0x38, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // loor(_885), floa
	0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, // t3(1.0, 157.0, 1
	0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 13.0));.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x37, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, // float _761 = smo
	0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x6d, // othstep(1.0 - _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x2c, // tl_u.u_sky[0].y,
	0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, //  1.0, fma(mix(mi
	0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // x(mix(fract(sin(
	0x5f, 0x31, 0x36, 0x32, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // _1621) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // 46875), fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x36, 0x32, 0x31, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, // n(_1621 + 1.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x5f, 0x31, 0x36, 0x31, 0x38, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, // _1618.x), mix(fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x36, 0x32, 0x31, 0x20, 0x2b, 0x20, // act(sin(_1621 + 
	0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // 157.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // 46875), fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x36, 0x32, 0x31, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, // n(_1621 + 158.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x31, // , _1618.x), _161
	0x38, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, // 8.y), mix(mix(fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x36, 0x32, 0x31, 0x20, 0x2b, 0x20, // act(sin(_1621 + 
	0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // 113.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // 46875), fract(si
	0x6e, 0x28, 0x5f, 0x31, 0x36, 0x32, 0x31, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, // n(_1621 + 114.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, // , _1618.x), mix(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x36, 0x32, 0x31, 0x20, // fract(sin(_1621 
	0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 270.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // .546875), fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x36, 0x32, 0x31, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, // sin(_1621 + 271.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, // 5), _1618.x), _1
	0x36, 0x31, 0x38, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x36, 0x31, 0x38, 0x2e, 0x7a, 0x29, // 618.y), _1618.z)
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x39, 0x30, 0x38, // , 0.041666667908
	0x34, 0x33, 0x30, 0x30, 0x39, 0x39, 0x34, 0x38, 0x37, 0x33, 0x30, 0x34, 0x36, 0x38, 0x37, 0x35, // 4300994873046875
	0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, // , fma(mix(mix(mi
	0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x34, 0x34, // x(fract(sin(_144
	0x38, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 8) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, // 5), fract(sin(_1
	0x34, 0x34, 0x38, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 448 + 1.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x34, // 58.546875), _144
	0x35, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // 5.x), mix(fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x34, 0x34, 0x38, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, // sin(_1448 + 157.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, // 5), fract(sin(_1
	0x34, 0x34, 0x38, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, // 448 + 158.0) * 4
	0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, // 3758.546875), _1
	0x34, 0x34, 0x35, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x35, 0x2e, 0x79, 0x29, // 445.x), _1445.y)
	0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // , mix(mix(fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x34, 0x34, 0x38, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, // sin(_1448 + 113.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, // 5), fract(sin(_1
	0x34, 0x34, 0x38, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, // 448 + 114.0) * 4
	0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, // 3758.546875), _1
	0x34, 0x34, 0x35, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, // 445.x), mix(frac
	0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x34, 0x34, 0x38, 0x20, 0x2b, 0x20, 0x32, 0x37, // t(sin(_1448 + 27
	0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, // 0.0) * 43758.546
	0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // 875), fract(sin(
	0x5f, 0x31, 0x34, 0x34, 0x38, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _1448 + 271.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x5f, 0x31, 0x34, 0x34, 0x35, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x35, 0x2e, // _1445.x), _1445.
	0x79, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x34, 0x34, 0x35, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, // y), _1445.z), 0.
	0x30, 0x38, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x35, 0x38, 0x31, 0x36, 0x38, 0x36, 0x30, 0x31, // 0833333358168601
	0x39, 0x38, 0x39, 0x37, 0x34, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x5f, 0x38, 0x37, // 98974609375, _87
	0x34, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, // 4)));.        _2
	0x37, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x37, 0x34, 0x31, 0x2c, 0x20, // 784 = mix(_741, 
	0x5f, 0x38, 0x34, 0x35, 0x20, 0x2a, 0x20, 0x34, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // _845 * 4.0, floa
	0x74, 0x33, 0x28, 0x28, 0x5f, 0x37, 0x36, 0x31, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x33, 0x30, 0x30, // t3((_761 * 0.300
	0x30, 0x30, 0x30, 0x30, 0x31, 0x31, 0x39, 0x32, 0x30, 0x39, 0x32, 0x38, 0x39, 0x35, 0x35, 0x30, // 0000119209289550
	0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // 78125) * fast::m
	0x61, 0x78, 0x28, 0x5f, 0x36, 0x30, 0x34, 0x2e, 0x79, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // ax(_604.y, 0.0))
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, // );.    }.    els
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e.    {.        
	0x5f, 0x32, 0x37, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x37, 0x34, 0x31, 0x3b, 0x0a, 0x20, 0x20, // _2784 = _741;.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //   }.    float3 _
	0x32, 0x37, 0x38, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, // 2783;.    if (_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x20, // tl_u.u_sky[0].z 
	0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // > 0.0).    {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x37, 0x38, //      float3 _278
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x37, 0x38, 0x35, // 5;.        _2785
	0x20, 0x3d, 0x20, 0x5f, 0x32, 0x37, 0x38, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  = _2784;.      
	0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x32, 0x37, 0x38, 0x32, //   for (int _2782
	0x20, 0x3d, 0x20, 0x30, 0x3b, 0x20, 0x5f, 0x32, 0x37, 0x38, 0x32, 0x20, 0x3c, 0x20, 0x32, 0x3b, //  = 0; _2782 < 2;
	0x20, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //  ).        {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x38, 0x30, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x5f, 0x36, 0x30, 0x34, 0x20, 0x2a, 0x20, // _800 = ((_604 * 
	0x66, 0x6d, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x5f, 0x32, 0x37, 0x38, 0x32, 0x29, // fma(float(_2782)
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x37, 0x36, // , 0.009999999776
	0x34, 0x38, 0x32, 0x35, 0x38, 0x32, 0x30, 0x39, 0x32, 0x32, 0x38, 0x35, 0x31, 0x35, 0x36, 0x32, // 4825820922851562
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x38, 0x38, 0x30, 0x37, // 5, 0.69999998807
	0x39, 0x30, 0x37, 0x31, 0x30, 0x34, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x29, 0x29, 0x20, // 9071044921875)) 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x36, 0x30, 0x34, 0x2e, 0x79, 0x29, // / float3(_604.y)
	0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // ) + float3(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x30, // u.u_sky[0].x * 0
	0x2e, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x31, 0x39, 0x32, 0x30, 0x39, 0x32, 0x38, // .300000011920928
	0x39, 0x35, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 955078125);.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x38, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x38, 0x30, // 1843 = fract(_80
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0);.            
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x20, 0x3d, 0x20, 0x64, 0x6f, // float _1846 = do
	0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x38, 0x30, 0x30, 0x29, 0x2c, 0x20, 0x66, // t(floor(_800), f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, // loat3(1.0, 157.0
	0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // , 113.0));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, //        float3 _1
	0x37, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x38, 0x30, 0x30, 0x20, 0x2a, 0x20, 0x31, 0x2e, // 778 = (_800 * 1.
	0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, // 1000000238418579
	0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 1015625) * float
	0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, // 3x3(float3(0.0, 
	0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, // 1.60000002384185
	0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, // 791015625, 1.200
	0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, // 0000476837158203
	0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, // 125), float3(-1.
	0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, // 6000000238418579
	0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, 0x30, 0x30, // 1015625, 0.72000
	0x30, 0x30, 0x32, 0x38, 0x36, 0x31, 0x30, 0x32, 0x32, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, // 0028610229492187
	0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, // 5, -0.9599999785
	0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, // 42327880859375),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, //  float3(-1.20000
	0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, // 0047683715820312
	0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, // 5, -0.9599999785
	0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, // 42327880859375, 
	0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x31, 0x33, 0x38, 0x39, 0x37, 0x37, // 1.27999997138977
	0x30, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 05078125));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x32, 0x30, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x31, 0x37, // 2016 = fract(_17
	0x37, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 78);.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x20, 0x3d, 0x20, 0x64, //  float _2019 = d
	0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x38, 0x29, 0x2c, // ot(floor(_1778),
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, //  float3(1.0, 157
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // .0, 113.0));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, //          float3 
	0x5f, 0x31, 0x37, 0x38, 0x36, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x38, 0x20, 0x2a, // _1786 = (_1778 *
	0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, //  1.2000000476837
	0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // 158203125) * flo
	0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, // at3x3(float3(0.0
	0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, // , 1.600000023841
	0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, // 85791015625, 1.2
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, // 0000004768371582
	0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, // 03125), float3(-
	0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, // 1.60000002384185
	0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, // 791015625, 0.720
	0x30, 0x30, 0x30, 0x30, 0x32, 0x38, 0x36, 0x31, 0x30, 0x32, 0x32, 0x39, 0x34, 0x39, 0x32, 0x31, // 0000286102294921
	0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, // 875, -0.95999997
	0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, // 8542327880859375
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, // ), float3(-1.200
	0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, // 0000476837158203
	0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, // 125, -0.95999997
	0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, // 8542327880859375
	0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x31, 0x33, 0x38, 0x39, // , 1.279999971389
	0x37, 0x37, 0x30, 0x35, 0x30, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 7705078125));.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, //           float3
	0x20, 0x5f, 0x32, 0x31, 0x38, 0x39, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, //  _2189 = fract(_
	0x31, 0x37, 0x38, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1786);.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x31, 0x39, 0x32, 0x20, 0x3d, //    float _2192 =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x31, 0x37, 0x38, 0x36, //  dot(floor(_1786
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, // ), float3(1.0, 1
	0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // 57.0, 113.0));. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x31, 0x37, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, 0x78, //  _1791 = fma(mix
	0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, // (mix(mix(fract(s
	0x69, 0x6e, 0x28, 0x5f, 0x32, 0x31, 0x39, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, // in(_2192) * 4375
	0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, // 8.546875), fract
	0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x31, 0x39, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, // (sin(_2192 + 1.0
	0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, // ) * 43758.546875
	0x29, 0x2c, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x39, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, // ), _2189.x), mix
	0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x31, 0x39, 0x32, // (fract(sin(_2192
	0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, //  + 157.0) * 4375
	0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, // 8.546875), fract
	0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x31, 0x39, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, // (sin(_2192 + 158
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, // .0) * 43758.5468
	0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x39, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, // 75), _2189.x), _
	0x32, 0x31, 0x38, 0x39, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, // 2189.y), mix(mix
	0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x31, 0x39, 0x32, // (fract(sin(_2192
	0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, //  + 113.0) * 4375
	0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, // 8.546875), fract
	0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x31, 0x39, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, // (sin(_2192 + 114
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, // .0) * 43758.5468
	0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x39, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, // 75), _2189.x), m
	0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x31, // ix(fract(sin(_21
	0x39, 0x32, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, // 92 + 270.0) * 43
	0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, // 758.546875), fra
	0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x31, 0x39, 0x32, 0x20, 0x2b, 0x20, 0x32, // ct(sin(_2192 + 2
	0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, // 71.0) * 43758.54
	0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x39, 0x2e, 0x78, 0x29, 0x2c, // 6875), _2189.x),
	0x20, 0x5f, 0x32, 0x31, 0x38, 0x39, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x39, //  _2189.y), _2189
	0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x31, // .z), 0.166666671
	0x36, 0x33, 0x33, 0x37, 0x32, 0x30, 0x33, 0x39, 0x37, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, // 6337203979492187
	0x35, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, // 5, fma(mix(mix(m
	0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, // ix(fract(sin(_18
	0x34, 0x36, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, // 46) * 43758.5468
	0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, // 75), fract(sin(_
	0x31, 0x38, 0x34, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, // 1846 + 1.0) * 43
	0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x38, // 758.546875), _18
	0x34, 0x33, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, // 43.x), mix(fract
	0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, // (sin(_1846 + 157
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, // .0) * 43758.5468
	0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, // 75), fract(sin(_
	0x31, 0x38, 0x34, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, // 1846 + 158.0) * 
	0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, // 43758.546875), _
	0x31, 0x38, 0x34, 0x33, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x2e, 0x79, // 1843.x), _1843.y
	0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, // ), mix(mix(fract
	0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, // (sin(_1846 + 113
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, // .0) * 43758.5468
	0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, // 75), fract(sin(_
	0x31, 0x38, 0x34, 0x36, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, // 1846 + 114.0) * 
	0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, // 43758.546875), _
	0x31, 0x38, 0x34, 0x33, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, // 1843.x), mix(fra
	0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x20, 0x2b, 0x20, 0x32, // ct(sin(_1846 + 2
	0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, // 70.0) * 43758.54
	0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, // 6875), fract(sin
	0x28, 0x5f, 0x31, 0x38, 0x34, 0x36, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, // (_1846 + 271.0) 
	0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, // * 43758.546875),
	0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, //  _1843.x), _1843
	0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x34, 0x33, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, // .y), _1843.z), 0
	0x2e, 0x35, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, // .5, mix(mix(mix(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x29, // fract(sin(_2019)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x31, // , fract(sin(_201
	0x39, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // 9 + 1.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x31, 0x36, 0x2e, // .546875), _2016.
	0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // x), mix(fract(si
	0x6e, 0x28, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, // n(_2019 + 157.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x31, // , fract(sin(_201
	0x39, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 9 + 158.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x31, // 58.546875), _201
	0x36, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x31, 0x36, 0x2e, 0x79, 0x29, 0x2c, 0x20, // 6.x), _2016.y), 
	0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // mix(mix(fract(si
	0x6e, 0x28, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, // n(_2019 + 113.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x31, // , fract(sin(_201
	0x39, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 9 + 114.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x31, // 58.546875), _201
	0x36, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // 6.x), mix(fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x30, 0x31, 0x39, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, // sin(_2019 + 270.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, // 5), fract(sin(_2
	0x30, 0x31, 0x39, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, // 019 + 271.0) * 4
	0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, // 3758.546875), _2
	0x30, 0x31, 0x36, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x31, 0x36, 0x2e, 0x79, 0x29, // 016.x), _2016.y)
	0x2c, 0x20, 0x5f, 0x32, 0x30, 0x31, 0x36, 0x2e, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, // , _2016.z) * 0.2
	0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5));.           
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x34, 0x20, 0x3d, 0x20, //  float3 _1794 = 
	0x28, 0x5f, 0x31, 0x37, 0x38, 0x36, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x32, 0x39, 0x39, 0x39, 0x39, // (_1786 * 1.29999
	0x39, 0x39, 0x35, 0x32, 0x33, 0x31, 0x36, 0x32, 0x38, 0x34, 0x31, 0x37, 0x39, 0x36, 0x38, 0x37, // 9952316284179687
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, 0x28, 0x66, 0x6c, // 5) * float3x3(fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, // oat3(0.0, 1.6000
	0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, // 0002384185791015
	0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, // 625, 1.200000047
	0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x29, 0x2c, 0x20, // 6837158203125), 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, // float3(-1.600000
	0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, 0x35, 0x36, 0x32, // 0238418579101562
	0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x38, 0x36, 0x31, // 5, 0.72000002861
	0x30, 0x32, 0x32, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // 02294921875, -0.
	0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, // 9599999785423278
	0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 80859375), float
	0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x36, 0x38, // 3(-1.20000004768
	0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // 37158203125, -0.
	0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, 0x38, // 9599999785423278
	0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x37, 0x39, 0x39, // 80859375, 1.2799
	0x39, 0x39, 0x39, 0x37, 0x31, 0x33, 0x38, 0x39, 0x37, 0x37, 0x30, 0x35, 0x30, 0x37, 0x38, 0x31, // 9997138977050781
	0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 25));.          
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x32, 0x20, 0x3d, //   float3 _2362 =
	0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x39, 0x34, 0x29, 0x3b, 0x0a, 0x20, //  fract(_1794);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x32, 0x33, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x6c, 0x6f, //  _2365 = dot(flo
	0x6f, 0x72, 0x28, 0x5f, 0x31, 0x37, 0x39, 0x34, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // or(_1794), float
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x31, // 3(1.0, 157.0, 11
	0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3.0));.         
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x30, 0x32, 0x20, //    float3 _1802 
	0x3d, 0x20, 0x28, 0x5f, 0x31, 0x37, 0x39, 0x34, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x33, 0x39, 0x39, // = (_1794 * 1.399
	0x39, 0x39, 0x39, 0x39, 0x37, 0x36, 0x31, 0x35, 0x38, 0x31, 0x34, 0x32, 0x30, 0x38, 0x39, 0x38, // 9999761581420898
	0x34, 0x33, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 0x33, // 4375) * float3x3
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x36, // (float3(0.0, 1.6
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, // 0000002384185791
	0x30, 0x31, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, // 015625, 1.200000
	0x30, 0x34, 0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, // 0476837158203125
	0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x36, 0x30, 0x30, // ), float3(-1.600
	0x30, 0x30, 0x30, 0x30, 0x32, 0x33, 0x38, 0x34, 0x31, 0x38, 0x35, 0x37, 0x39, 0x31, 0x30, 0x31, // 0000238418579101
	0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, // 5625, 0.72000002
	0x38, 0x36, 0x31, 0x30, 0x32, 0x32, 0x39, 0x34, 0x39, 0x32, 0x31, 0x38, 0x37, 0x35, 0x2c, 0x20, // 86102294921875, 
	0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, // -0.9599999785423
	0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x6c, // 27880859375), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x2d, 0x31, 0x2e, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, // oat3(-1.20000004
	0x37, 0x36, 0x38, 0x33, 0x37, 0x31, 0x35, 0x38, 0x32, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, // 76837158203125, 
	0x2d, 0x30, 0x2e, 0x39, 0x35, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, // -0.9599999785423
	0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x32, // 27880859375, 1.2
	0x37, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x31, 0x33, 0x38, 0x39, 0x37, 0x37, 0x30, 0x35, 0x30, // 7999997138977050
	0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 78125));.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x35, 0x33, //      float3 _253
	0x35, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x31, 0x38, 0x30, 0x32, 0x29, // 5 = fract(_1802)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ;.            fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x35, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // oat _2538 = dot(
	0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, 0x5f, 0x31, 0x38, 0x30, 0x32, 0x29, 0x2c, 0x20, 0x66, 0x6c, // floor(_1802), fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x2c, // oat3(1.0, 157.0,
	0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  113.0));.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x38, 0x30, 0x32, //       float _802
	0x20, 0x3d, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x31, 0x2e, //  = smoothstep(1.
	0x30, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x6b, 0x79, // 0 - _mtl_u.u_sky
	0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, // [0].z, 1.0, fma(
	0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, // mix(mix(mix(frac
	0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x35, 0x33, 0x38, 0x29, 0x20, 0x2a, 0x20, 0x34, // t(sin(_2538) * 4
	0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, // 3758.546875), fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x35, 0x33, 0x38, 0x20, 0x2b, 0x20, // act(sin(_2538 + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, // 1.0) * 43758.546
	0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x35, 0x33, 0x35, 0x2e, 0x78, 0x29, 0x2c, 0x20, // 875), _2535.x), 
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, // mix(fract(sin(_2
	0x35, 0x33, 0x38, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, // 538 + 157.0) * 4
	0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, // 3758.546875), fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x35, 0x33, 0x38, 0x20, 0x2b, 0x20, // act(sin(_2538 + 
	0x31, 0x35, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // 158.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x35, 0x33, 0x35, 0x2e, 0x78, 0x29, // 46875), _2535.x)
	0x2c, 0x20, 0x5f, 0x32, 0x35, 0x33, 0x35, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, // , _2535.y), mix(
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, // mix(fract(sin(_2
	0x35, 0x33, 0x38, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, // 538 + 113.0) * 4
	0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, // 3758.546875), fr
	0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x35, 0x33, 0x38, 0x20, 0x2b, 0x20, // act(sin(_2538 + 
	0x31, 0x31, 0x34, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, // 114.0) * 43758.5
	0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x35, 0x33, 0x35, 0x2e, 0x78, 0x29, // 46875), _2535.x)
	0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, // , mix(fract(sin(
	0x5f, 0x32, 0x35, 0x33, 0x38, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _2538 + 270.0) *
	0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, //  43758.546875), 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x35, 0x33, 0x38, 0x20, // fract(sin(_2538 
	0x2b, 0x20, 0x32, 0x37, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 271.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x35, 0x33, 0x35, 0x2e, // .546875), _2535.
	0x78, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x35, 0x33, 0x35, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x32, // x), _2535.y), _2
	0x35, 0x33, 0x35, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x31, 0x36, 0x36, 0x36, // 535.z), 0.041666
	0x36, 0x36, 0x37, 0x39, 0x30, 0x38, 0x34, 0x33, 0x30, 0x30, 0x39, 0x39, 0x34, 0x38, 0x37, 0x33, // 6679084300994873
	0x30, 0x34, 0x36, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x6d, 0x69, 0x78, 0x28, // 046875, fma(mix(
	0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, // mix(mix(fract(si
	0x6e, 0x28, 0x5f, 0x32, 0x33, 0x36, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // n(_2365) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // .546875), fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x36, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // sin(_2365 + 1.0)
	0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, //  * 43758.546875)
	0x2c, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x32, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, // , _2362.x), mix(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x36, 0x35, 0x20, // fract(sin(_2365 
	0x2b, 0x20, 0x31, 0x35, 0x37, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 157.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // .546875), fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x36, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x35, 0x38, 0x2e, // sin(_2365 + 158.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x32, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x5f, 0x32, // 5), _2362.x), _2
	0x33, 0x36, 0x32, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6d, 0x69, 0x78, 0x28, // 362.y), mix(mix(
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x36, 0x35, 0x20, // fract(sin(_2365 
	0x2b, 0x20, 0x31, 0x31, 0x33, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, // + 113.0) * 43758
	0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // .546875), fract(
	0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x36, 0x35, 0x20, 0x2b, 0x20, 0x31, 0x31, 0x34, 0x2e, // sin(_2365 + 114.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, // 0) * 43758.54687
	0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x32, 0x2e, 0x78, 0x29, 0x2c, 0x20, 0x6d, 0x69, // 5), _2362.x), mi
	0x78, 0x28, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x36, // x(fract(sin(_236
	0x35, 0x20, 0x2b, 0x20, 0x32, 0x37, 0x30, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, // 5 + 270.0) * 437
	0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x66, 0x72, 0x61, 0x63, // 58.546875), frac
	0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x5f, 0x32, 0x33, 0x36, 0x35, 0x20, 0x2b, 0x20, 0x32, 0x37, // t(sin(_2365 + 27
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x36, // 1.0) * 43758.546
	0x38, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x32, 0x2e, 0x78, 0x29, 0x2c, 0x20, // 875), _2362.x), 
	0x5f, 0x32, 0x33, 0x36, 0x32, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x33, 0x36, 0x32, 0x2e, // _2362.y), _2362.
	0x7a, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x38, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x35, 0x38, // z), 0.0833333358
	0x31, 0x36, 0x38, 0x36, 0x30, 0x31, 0x39, 0x38, 0x39, 0x37, 0x34, 0x36, 0x30, 0x39, 0x33, 0x37, // 1686019897460937
	0x35, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x39, 0x31, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 5, _1791)));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x37, 0x38, 0x35, 0x20, 0x3d, //          _2785 =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, 0x37, 0x38, 0x35, 0x2c, 0x20, 0x28, 0x5f, 0x38, 0x34, //  mix(_2785, (_84
	0x35, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x30, 0x32, 0x29, 0x20, 0x2a, 0x20, 0x35, 0x2e, 0x30, 0x2c, // 5 * _802) * 5.0,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x69, //  float3(fast::mi
	0x6e, 0x28, 0x5f, 0x38, 0x30, 0x32, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x66, // n(_802, 1.0) * f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x36, 0x30, 0x34, 0x2e, 0x79, 0x2c, // ast::max(_604.y,
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.0)));.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x37, 0x38, 0x32, 0x2b, 0x2b, 0x3b, 0x0a, 0x20, 0x20, //      _2782++;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, //           contin
	0x75, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // ue;.        }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x32, 0x37, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x32, //       _2783 = _2
	0x37, 0x38, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, // 785;.    }.    e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse.    {.      
	0x20, 0x20, 0x5f, 0x32, 0x37, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x37, 0x38, 0x34, 0x3b, //   _2783 = _2784;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, // .    }.    out.b
	0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, // gfx_FragData0 = 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, 0x37, 0x38, 0x33, 0x2c, 0x20, 0x31, 0x2e, // float4(_2783, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x46, // 0);.    out.gl_F
	0x72, 0x61, 0x67, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, // ragDepth = 1.0;.
	0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, //     return out;.
	0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x30, 0x00,                                                       // }....0.
};
