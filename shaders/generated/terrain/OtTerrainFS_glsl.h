static const uint8_t OtTerrainFS_glsl[3276] =
{
	0x46, 0x53, 0x48, 0x0b, 0x92, 0x1b, 0x2b, 0xe2, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x75, // FSH...+........u
	0x5f, 0x63, 0x6c, 0x69, 0x70, 0x02, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // _clip...........
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x02, 0x09, 0x00, 0x00, 0x09, 0x00, 0x00, // u_terrain.......
	0x00, 0x00, 0x00, 0x10, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x31, 0x54, 0x65, 0x78, // ....s_region1Tex
	0x74, 0x75, 0x72, 0x65, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x73, // ture...........s
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x32, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, // _region2Texture.
	0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, // ..........s_regi
	0x6f, 0x6e, 0x33, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, // on3Texture......
	0x00, 0x00, 0x00, 0x00, 0x10, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x34, 0x54, 0x65, // .....s_region4Te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, // xture..........(
	0x0c, 0x00, 0x00, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // ...varying vec3 
	0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // v_normal;.varyin
	0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // g vec3 v_positio
	0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // n;.uniform vec4 
	0x75, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // u_clip;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x39, // vec4 u_terrain[9
	0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // ];.uniform sampl
	0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x31, 0x54, 0x65, // er2D s_region1Te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, // xture;.uniform s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // ampler2D s_regio
	0x6e, 0x32, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // n2Texture;.unifo
	0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x72, // rm sampler2D s_r
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x33, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x3b, 0x0a, 0x75, // egion3Texture;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x34, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, //  s_region4Textur
	0x65, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, // e;.void main ().
	0x7b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x5f, // {.  vec3 albedo_
	0x31, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // 1;.  vec4 tmpvar
	0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x2e, 0x77, // _2;.  tmpvar_2.w
	0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, //  = 1.0;.  tmpvar
	0x5f, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, // _2.xyz = v_posit
	0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, // ion;.  float tmp
	0x76, 0x61, 0x72, 0x5f, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // var_3;.  tmpvar_
	0x33, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x75, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x2c, // 3 = dot (u_clip,
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, //  tmpvar_2);.  if
	0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x20, 0x3c, 0x20, 0x30, 0x2e, //  ((tmpvar_3 < 0.
	0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, // 0)) {.    discar
	0x64, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, // d;.  };.  vec2 t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // mpvar_4;.  tmpva
	0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x28, 0x76, 0x5f, // r_4 = fract(((v_
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, // position.xz / u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x20, 0x2a, 0x20, // terrain[1].x) * 
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, // u_terrain[2].x))
	0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ;.  vec2 tmpvar_
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x20, 0x3d, 0x20, // 5;.  tmpvar_5 = 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // fract(((v_positi
	0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // on.xz / u_terrai
	0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, // n[1].y) * u_terr
	0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, // ain[2].y));.  ve
	0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x74, // c2 tmpvar_6;.  t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, // mpvar_6 = fract(
	0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, // ((v_position.xz 
	0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, // / u_terrain[1].z
	0x29, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, // ) * u_terrain[2]
	0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, // .z));.  vec2 tmp
	0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // var_7;.  tmpvar_
	0x37, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x28, 0x28, 0x76, 0x5f, 0x70, 0x6f, // 7 = fract(((v_po
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x7a, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, // sition.xz / u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x75, 0x5f, // rrain[1].w) * u_
	0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, // terrain[2].w));.
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, //   float tmpvar_8
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x3d, 0x20, 0x28, // ;.  tmpvar_8 = (
	0x28, 0x76, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x20, 0x2d, 0x20, // (v_position.y - 
	0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x29, 0x20, // u_terrain[0].z) 
	0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // / u_terrain[0].y
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // );.  vec3 tmpvar
	0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, // _9;.  if (bool(u
	0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x35, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, // _terrain[5].w)) 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, // {.    tmpvar_9 =
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x72, 0x65, //  texture2D (s_re
	0x67, 0x69, 0x6f, 0x6e, 0x31, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2c, 0x20, 0x74, 0x6d, // gion1Texture, tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x7d, // pvar_4).xyz;.  }
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, //  else {.    tmpv
	0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // ar_9 = u_terrain
	0x5b, 0x35, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, // [5].xyz;.  };.  
	0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, // vec3 tmpvar_10;.
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, //   if (bool(u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, // rain[6].w)) {.  
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x74, 0x65, //   tmpvar_10 = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, // xture2D (s_regio
	0x6e, 0x32, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // n2Texture, tmpva
	0x72, 0x5f, 0x35, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, // r_5).xyz;.  } el
	0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // se {.    tmpvar_
	0x31, 0x30, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x36, // 10 = u_terrain[6
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, // ].xyz;.  };.  ve
	0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, // c3 tmpvar_11;.  
	0x69, 0x66, 0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // if (bool(u_terra
	0x69, 0x6e, 0x5b, 0x37, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // in[7].w)) {.    
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, // tmpvar_11 = text
	0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x33, // ure2D (s_region3
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // Texture, tmpvar_
	0x36, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, // 6).xyz;.  } else
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, //  {.    tmpvar_11
	0x20, 0x3d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x37, 0x5d, 0x2e, //  = u_terrain[7].
	0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, // xyz;.  };.  vec3
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, //  tmpvar_12;.  if
	0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, //  (bool(u_terrain
	0x5b, 0x38, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, // [8].w)) {.    tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // pvar_12 = textur
	0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x34, 0x54, 0x65, // e2D (s_region4Te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x29, // xture, tmpvar_7)
	0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, // .xyz;.  } else {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x20, 0x3d, // .    tmpvar_12 =
	0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x38, 0x5d, 0x2e, 0x78, 0x79, //  u_terrain[8].xy
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // z;.  };.  float 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, // tmpvar_13;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x20, 0x3d, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x20, 0x28, // var_13 = clamp (
	0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x73, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, // ((.    abs(v_nor
	0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x35, 0x29, // mal.y).   - 0.5)
	0x20, 0x2f, 0x20, 0x30, 0x2e, 0x31, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, //  / 0.1), 0.0, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, // 0);.  float tmpv
	0x61, 0x72, 0x5f, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ar_14;.  tmpvar_
	0x31, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x74, 0x6d, 0x70, // 14 = (1.0 - (tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x20, 0x2a, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // var_13 * (tmpvar
	0x5f, 0x31, 0x33, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x33, 0x2e, 0x30, 0x20, // _13 * .    (3.0 
	0x2d, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // - (2.0 * tmpvar_
	0x31, 0x33, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, // 13)).  )));.  ve
	0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, // c3 tmpvar_15;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, // tmpvar_15 = mix 
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, // (tmpvar_10, tmpv
	0x61, 0x72, 0x5f, 0x31, 0x31, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, // ar_11, tmpvar_14
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // );.  vec3 tmpvar
	0x5f, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, // _16;.  tmpvar_16
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, //  = mix (tmpvar_1
	0x32, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x2c, 0x20, 0x74, 0x6d, // 2, tmpvar_11, tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // pvar_14);.  if (
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, 0x65, // (tmpvar_8 < u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, // rrain[3].x)) {. 
	0x20, 0x20, 0x20, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x74, 0x6d, //    albedo_1 = tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, // pvar_9;.  } else
	0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, //  {.    if ((tmpv
	0x61, 0x72, 0x5f, 0x38, 0x20, 0x3c, 0x20, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, // ar_8 < (u_terrai
	0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // n[3].x + u_terra
	0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, // in[4].x))) {.   
	0x20, 0x20, 0x20, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, //    albedo_1 = mi
	0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x2c, 0x20, 0x74, 0x6d, 0x70, // x (tmpvar_9, tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x2c, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // var_15, ((tmpvar
	0x5f, 0x38, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, // _8 - u_terrain[3
	0x5d, 0x2e, 0x78, 0x29, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // ].x) / u_terrain
	0x5b, 0x34, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, // [4].x));.    } e
	0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // lse {.      if (
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, 0x65, // (tmpvar_8 < u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, // rrain[3].y)) {. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x5f, 0x31, 0x20, //        albedo_1 
	0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // = tmpvar_15;.   
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //    } else {.    
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //     if ((tmpvar_
	0x38, 0x20, 0x3c, 0x20, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, // 8 < (u_terrain[3
	0x5d, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // ].y + u_terrain[
	0x34, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 4].y))) {.      
	0x20, 0x20, 0x20, 0x20, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6d, //     albedo_1 = m
	0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x2c, 0x20, 0x74, // ix (tmpvar_15, t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x2c, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, // mpvar_11, ((tmpv
	0x61, 0x72, 0x5f, 0x38, 0x20, 0x2d, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, // ar_8 - u_terrain
	0x5b, 0x33, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, // [3].y) / u_terra
	0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // in[4].y));.     
	0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //    } else {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, //       if ((tmpva
	0x72, 0x5f, 0x38, 0x20, 0x3c, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, // r_8 < u_terrain[
	0x33, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3].z)) {.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x5f, 0x31, 0x20, 0x3d, 0x20, //      albedo_1 = 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // tmpvar_11;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, //      } else {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, //           if ((t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x3c, 0x20, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x72, // mpvar_8 < (u_ter
	0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x7a, 0x20, 0x2b, 0x20, 0x75, 0x5f, 0x74, 0x65, // rain[3].z + u_te
	0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, // rrain[4].z))) {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x6c, //               al
	0x62, 0x65, 0x64, 0x6f, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, // bedo_1 = mix (tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // pvar_11, tmpvar_
	0x31, 0x36, 0x2c, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x2d, // 16, ((tmpvar_8 -
	0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x33, 0x5d, 0x2e, 0x7a, 0x29, //  u_terrain[3].z)
	0x20, 0x2f, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x69, 0x6e, 0x5b, 0x34, 0x5d, 0x2e, //  / u_terrain[4].
	0x7a, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z));.           
	0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  } else {.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x5f, 0x31, //         albedo_1
	0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, 0x3b, 0x0a, 0x20, 0x20, //  = tmpvar_16;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, //           };.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        };.      
	0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, //   };.      };.  
	0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, //   };.  };.  vec4
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, //  tmpvar_17;.  tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, // pvar_17.w = 1.0;
	0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x2e, 0x78, 0x79, 0x7a, // .  tmpvar_17.xyz
	0x20, 0x3d, 0x20, 0x61, 0x6c, 0x62, 0x65, 0x64, 0x6f, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x67, //  = albedo_1;.  g
	0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x5b, 0x30, 0x5d, 0x20, 0x3d, 0x20, // l_FragData[0] = 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, // tmpvar_17;.  vec
	0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x74, // 4 tmpvar_18;.  t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, // mpvar_18.w = 0.0
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x2e, 0x78, 0x79, // ;.  tmpvar_18.xy
	0x7a, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x76, 0x5f, // z = normalize(v_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, // normal);.  gl_Fr
	0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x5b, 0x31, 0x5d, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, // agData[1] = tmpv
	0x61, 0x72, 0x5f, 0x31, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, // ar_18;.  gl_Frag
	0x44, 0x61, 0x74, 0x61, 0x5b, 0x32, 0x5d, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, // Data[2] = vec4(0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, // .0, 1.0, 1.0, 0.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // 0);.  vec4 tmpva
	0x72, 0x5f, 0x31, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // r_19;.  tmpvar_1
	0x39, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, // 9.x = 0.0;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, // var_19.y = 0.0;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, 0x2e, 0x7a, 0x20, 0x3d, 0x20, //   tmpvar_19.z = 
	0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, // 0.0;.  tmpvar_19
	0x2e, 0x77, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, // .w = 0.0;.  gl_F
	0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x5b, 0x33, 0x5d, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, // ragData[3] = tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,                         // var_19;.}...
};
