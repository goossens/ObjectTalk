static const uint8_t OtWaterFS_glsl[4114] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0x87, 0x44, 0x57, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x0a, 0x75, // FSH.N.DW.......u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x04, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, // _viewProj.......
	0x00, 0x00, 0x00, 0x07, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x02, 0x04, 0x00, 0x00, 0x04, // ....u_water.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, // ......u_lighting
	0x02, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6e, 0x6f, 0x72, // ...........s_nor
	0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x01, 0x00, // malmapSampler...
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // ........s_reflec
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x01, 0x00, 0x00, 0x01, // tionSampler.....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, // ......s_refracti
	0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, // onSampler.......
	0x00, 0x00, 0x00, 0x6a, 0x0f, 0x00, 0x00, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, // ...j...varying v
	0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x66, 0x61, 0x72, 0x3b, 0x0a, 0x76, 0x61, 0x72, 0x79, 0x69, // ec3 v_far;.varyi
	0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x3b, 0x0a, // ng vec3 v_near;.
	0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, // uniform mat4 u_v
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, // iewProj;.uniform
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x34, 0x5d, //  vec4 u_water[4]
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, // ;.uniform vec4 u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x33, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, // _lighting[3];.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, // iform sampler2D 
	0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, // s_normalmapSampl
	0x65, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // er;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, // ler2D s_reflecti
	0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, // onSampler;.unifo
	0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x72, // rm sampler2D s_r
	0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // efractionSampler
	0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, // ;.void main ().{
	0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // .  float tmpvar_
	0x31, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // 1;.  float tmpva
	0x72, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x31, 0x5f, // r_2;.  vec2 uv1_
	0x33, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // 3;.  float tmpva
	0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, // r_4;.  tmpvar_4 
	0x3d, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x30, 0x5d, 0x2e, 0x78, // = ((u_water[0].x
	0x20, 0x2d, 0x20, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, //  - v_near.y) / (
	0x76, 0x5f, 0x66, 0x61, 0x72, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, // v_far.y - v_near
	0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, // .y));.  if ((tmp
	0x76, 0x61, 0x72, 0x5f, 0x34, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7b, 0x0a, // var_4 < 0.0)) {.
	0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x20, 0x20, 0x7d, //     discard;.  }
	0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ;.  vec3 tmpvar_
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x20, 0x3d, 0x20, // 5;.  tmpvar_5 = 
	0x28, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x20, 0x2b, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, // (v_near + (tmpva
	0x72, 0x5f, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x5f, 0x66, 0x61, 0x72, 0x20, 0x2d, 0x20, 0x76, // r_4 * (v_far - v
	0x5f, 0x6e, 0x65, 0x61, 0x72, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, // _near)));.  vec4
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, //  tmpvar_6;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, // var_6.w = 1.0;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, //  tmpvar_6.xyz = 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, // tmpvar_5;.  vec4
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, //  tmpvar_7;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, // var_7 = (u_viewP
	0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x29, 0x3b, // roj * tmpvar_6);
	0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, // .  vec3 tmpvar_8
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, 0x3d, 0x20, 0x28, // ;.  tmpvar_8 = (
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x74, // tmpvar_7.xyz / t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, // mpvar_7.w);.  if
	0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x2e, 0x7a, 0x20, 0x3e, 0x20, //  ((tmpvar_8.z > 
	0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x20, 0x7b, // u_water[0].y)) {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x3b, 0x0a, 0x20, 0x20, // .    discard;.  
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // };.  vec2 tmpvar
	0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, // _9;.  tmpvar_9 =
	0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x2e, 0x78, 0x7a, 0x20, 0x2f, //  ((tmpvar_5.xz /
	0x20, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x20, 0x2a, //  u_water[1].y) *
	0x20, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x3b, 0x0a, //  u_water[1].x);.
	0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, //   vec2 tmpvar_10
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x30, 0x2e, 0x78, 0x20, // ;.  tmpvar_10.x 
	0x3d, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, // = (u_water[1].z 
	0x2f, 0x20, 0x31, 0x37, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // / 17.0);.  tmpva
	0x72, 0x5f, 0x31, 0x30, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, // r_10.y = (u_wate
	0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2f, 0x20, 0x32, 0x39, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // r[1].z / 29.0);.
	0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, //   vec2 tmpvar_11
	0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x2e, 0x78, 0x20, // ;.  tmpvar_11.x 
	0x3d, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, // = (u_water[1].z 
	0x2f, 0x20, 0x2d, 0x31, 0x39, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // / -19.0);.  tmpv
	0x61, 0x72, 0x5f, 0x31, 0x31, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x61, 0x74, // ar_11.y = (u_wat
	0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2f, 0x20, 0x33, 0x31, 0x2e, 0x30, 0x29, 0x3b, // er[1].z / 31.0);
	0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // .  vec2 tmpvar_1
	0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x2e, 0x78, // 2;.  tmpvar_12.x
	0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, //  = (u_water[1].z
	0x20, 0x2f, 0x20, 0x31, 0x30, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, //  / 101.0);.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x61, // var_12.y = (u_wa
	0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2f, 0x20, 0x39, 0x37, 0x2e, 0x30, 0x29, // ter[1].z / 97.0)
	0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ;.  vec2 tmpvar_
	0x31, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x2e, // 13;.  tmpvar_13.
	0x78, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, // x = (u_water[1].
	0x7a, 0x20, 0x2f, 0x20, 0x31, 0x30, 0x39, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, // z / 109.0);.  tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x33, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x77, // pvar_13.y = (u_w
	0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2f, 0x20, 0x2d, 0x31, 0x31, 0x33, // ater[1].z / -113
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, // .0);.  vec3 tmpv
	0x61, 0x72, 0x5f, 0x31, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ar_14;.  tmpvar_
	0x31, 0x34, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, // 14 = normalize((
	0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x28, 0x28, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // (.    ((((textur
	0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, // e2D (s_normalmap
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // Sampler, .      
	0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, // (tmpvar_9 + tmpv
	0x61, 0x72, 0x5f, 0x31, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x20, 0x2b, 0x20, 0x74, // ar_10).    ) + t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // exture2D (s_norm
	0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x0a, 0x20, // almapSampler, . 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x2d, //      (tmpvar_9 -
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x31, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, //  tmpvar_11).    
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, // )) + texture2D (
	0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, // s_normalmapSampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x2b, 0x20, // er, (tmpvar_9 + 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x32, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x74, // tmpvar_12))) + t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // exture2D (s_norm
	0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x74, // almapSampler, (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // mpvar_9 - tmpvar
	0x5f, 0x31, 0x33, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x7a, 0x79, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, // _13))).xzy * 0.5
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x76, 0x65, // ).   - 1.0) * ve
	0x63, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x35, // c3(1.5, 1.0, 1.5
	0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x75, 0x76, 0x31, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x28, // )));.  uv1_3 = (
	0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, // gl_FragCoord.xy 
	0x2f, 0x20, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x30, 0x5d, 0x2e, 0x7a, 0x77, 0x29, // / u_water[0].zw)
	0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ;.  vec2 tmpvar_
	0x31, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x2e, // 15;.  tmpvar_15.
	0x78, 0x20, 0x3d, 0x20, 0x75, 0x76, 0x31, 0x5f, 0x33, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x74, // x = uv1_3.x;.  t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x28, 0x31, 0x2e, // mpvar_15.y = (1.
	0x30, 0x20, 0x2d, 0x20, 0x75, 0x76, 0x31, 0x5f, 0x33, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, // 0 - uv1_3.y);.  
	0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, 0x3b, 0x0a, // vec4 tmpvar_16;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, 0x20, 0x3d, 0x20, 0x74, 0x65, //   tmpvar_16 = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x20, 0x28, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // xture2D (s_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x74, 0x6d, // ctionSampler, tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, // pvar_15);.  vec3
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, //  tmpvar_17;.  if
	0x20, 0x28, 0x62, 0x6f, 0x6f, 0x6c, 0x28, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x33, //  (bool(u_water[3
	0x5d, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // ].w)) {.    tmpv
	0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // ar_17 = texture2
	0x44, 0x20, 0x28, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, // D (s_refractionS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x75, 0x76, 0x31, 0x5f, 0x33, 0x29, 0x2e, 0x78, // ampler, uv1_3).x
	0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, // yz;.  } else {. 
	0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x75, //    tmpvar_17 = u
	0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, // _water[3].xyz;. 
	0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //  };.  vec3 tmpva
	0x72, 0x5f, 0x31, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // r_18;.  tmpvar_1
	0x38, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x75, // 8 = normalize((u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // _lighting[0].xyz
	0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, //  - tmpvar_5));. 
	0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, 0x3b, //  vec4 tmpvar_19;
	0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, 0x2e, 0x77, 0x20, 0x3d, // .  tmpvar_19.w =
	0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, //  1.0;.  tmpvar_1
	0x39, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x20, 0x28, 0x74, 0x6d, 0x70, // 9.xyz = mix (tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x36, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, // var_16.xyz, tmpv
	0x61, 0x72, 0x5f, 0x31, 0x37, 0x2c, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, // ar_17, pow (tmpv
	0x61, 0x72, 0x5f, 0x31, 0x38, 0x2e, 0x79, 0x2c, 0x20, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, // ar_18.y, u_water
	0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // [2].w));.  tmpva
	0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, // r_1 = u_water[2]
	0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x3d, // .x;.  tmpvar_2 =
	0x20, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x3b, 0x0a, 0x20, //  u_water[2].y;. 
	0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x3b, //  vec3 tmpvar_20;
	0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x20, 0x3d, 0x20, 0x6e, // .  tmpvar_20 = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // ormalize(u_light
	0x69, 0x6e, 0x67, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, // ing[1].xyz);.  v
	0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x3b, 0x0a, 0x20, // ec3 tmpvar_21;. 
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, //  tmpvar_21 = mix
	0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x30, //  (vec3(0.04, 0.0
	0x34, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x29, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // 4, 0.04), tmpvar
	0x5f, 0x31, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // _19.xyz, tmpvar_
	0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // 1);.  vec3 tmpva
	0x72, 0x5f, 0x32, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, // r_22;.  tmpvar_2
	0x32, 0x20, 0x3d, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x74, // 2 = normalize((t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // mpvar_18 + tmpva
	0x72, 0x5f, 0x32, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // r_20));.  float 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, // tmpvar_23;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // var_23 = (tmpvar
	0x5f, 0x32, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x29, 0x3b, 0x0a, // _2 * tmpvar_2);.
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, //   float tmpvar_2
	0x34, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x20, 0x3d, // 4;.  tmpvar_24 =
	0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x20, 0x2a, 0x20, 0x74, 0x6d, //  (tmpvar_23 * tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x33, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // pvar_23);.  floa
	0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x74, // t tmpvar_25;.  t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x35, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, // mpvar_25 = max (
	0x64, 0x6f, 0x74, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2c, 0x20, // dot (tmpvar_14, 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // tmpvar_22), 0.0)
	0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ;.  float tmpvar
	0x5f, 0x32, 0x36, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x36, // _26;.  tmpvar_26
	0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, //  = max (((.    (
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, // tmpvar_25 * tmpv
	0x61, 0x72, 0x5f, 0x32, 0x35, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, // ar_25).   * .   
	0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x20, 0x2d, 0x20, 0x31, 0x2e, //  (tmpvar_24 - 1.
	0x30, 0x29, 0x0a, 0x20, 0x20, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x30, // 0).  ) + 1.0), 0
	0x2e, 0x30, 0x30, 0x30, 0x31, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // .0001);.  float 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, // tmpvar_27;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, // var_27 = max (do
	0x74, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2c, 0x20, 0x74, 0x6d, // t (tmpvar_14, tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // pvar_18), 0.0);.
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, //   float tmpvar_2
	0x38, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x20, 0x3d, // 8;.  tmpvar_28 =
	0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, //  max (dot (tmpva
	0x72, 0x5f, 0x31, 0x34, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x29, // r_14, tmpvar_20)
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // , 0.0);.  float 
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, // tmpvar_29;.  tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // var_29 = (tmpvar
	0x5f, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x6c, 0x6f, // _2 + 1.0);.  flo
	0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x3b, 0x0a, 0x20, 0x20, // at tmpvar_30;.  
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x74, 0x6d, // tmpvar_30 = ((tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x39, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // pvar_29 * tmpvar
	0x5f, 0x32, 0x39, 0x29, 0x20, 0x2f, 0x20, 0x38, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x66, // _29) / 8.0);.  f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x31, 0x3b, 0x0a, // loat tmpvar_31;.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x74, //   tmpvar_31 = (t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // mpvar_2 + 1.0);.
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, //   float tmpvar_3
	0x32, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x32, 0x20, 0x3d, // 2;.  tmpvar_32 =
	0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x31, 0x20, 0x2a, 0x20, 0x74, //  ((tmpvar_31 * t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x31, 0x29, 0x20, 0x2f, 0x20, 0x38, 0x2e, 0x30, 0x29, // mpvar_31) / 8.0)
	0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // ;.  vec3 tmpvar_
	0x33, 0x33, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x20, // 33;.  tmpvar_33 
	0x3d, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, 0x20, 0x2b, 0x20, 0x28, // = (tmpvar_21 + (
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x31, // (1.0 - tmpvar_21
	0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x20, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6c, // ) * pow (.    cl
	0x61, 0x6d, 0x70, 0x20, 0x28, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x6d, 0x61, 0x78, 0x20, // amp ((1.0 - max 
	0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x32, 0x2c, // (dot (tmpvar_22,
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x38, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, //  tmpvar_18), 0.0
	0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, // )), 0.0, 1.0).  
	0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, // , 5.0)));.  vec4
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, //  tmpvar_34;.  tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x28, // pvar_34.xyz = ((
	0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // (.    ((((.     
	0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, //  (vec3(1.0, 1.0,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, //  1.0) - tmpvar_3
	0x33, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 3).     * .     
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, //  (1.0 - tmpvar_1
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // ).    ) * tmpvar
	0x5f, 0x31, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2f, 0x20, 0x33, 0x2e, 0x31, 0x34, 0x31, // _19.xyz) / 3.141
	0x35, 0x39, 0x33, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 593) + (((.     
	0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x34, 0x20, 0x2f, 0x20, 0x28, 0x28, //  (tmpvar_24 / ((
	0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x33, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // 3.141593 * tmpva
	0x72, 0x5f, 0x32, 0x36, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, // r_26) * tmpvar_2
	0x36, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, // 6)).     * .    
	0x20, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x20, 0x2f, 0x20, //   ((tmpvar_28 / 
	0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x38, 0x20, 0x2a, 0x20, 0x0a, 0x20, // ((tmpvar_28 * . 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x6d, //        (1.0 - tm
	0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x32, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, // pvar_32).      )
	0x20, 0x2b, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x32, 0x29, 0x29, 0x20, 0x2a, //  + tmpvar_32)) *
	0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x20, 0x2f, 0x20, 0x28, 0x28, //  (tmpvar_27 / ((
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x37, 0x20, 0x2a, 0x20, 0x0a, 0x20, 0x20, 0x20, // tmpvar_27 * .   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x74, 0x6d, 0x70, 0x76, //      (1.0 - tmpv
	0x61, 0x72, 0x5f, 0x33, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x20, 0x2b, // ar_30).      ) +
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x30, 0x29, 0x29, 0x29, 0x0a, 0x20, 0x20, //  tmpvar_30))).  
	0x20, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x33, 0x29, //   ) * tmpvar_33)
	0x20, 0x2f, 0x20, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x34, 0x2e, 0x30, //  / ((.      (4.0
	0x20, 0x2a, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x74, 0x6d, 0x70, //  * max (dot (tmp
	0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, // var_14, tmpvar_1
	0x38, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2a, // 8), 0.0)).     *
	0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x64, 0x6f, 0x74, //  .      max (dot
	0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x34, 0x2c, 0x20, 0x74, 0x6d, 0x70, //  (tmpvar_14, tmp
	0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, // var_20), 0.0).  
	0x20, 0x20, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x31, 0x29, 0x29, 0x29, 0x0a, //   ) + 0.0001))).
	0x20, 0x20, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, //    * u_lighting[
	0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x78, 0x20, 0x28, 0x0a, // 2].xyz) * max (.
	0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //     dot (tmpvar_
	0x31, 0x34, 0x2c, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x32, 0x30, 0x29, 0x0a, 0x20, // 14, tmpvar_20). 
	0x20, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x75, 0x5f, 0x6c, //  , 0.0)) + ((u_l
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x20, 0x2a, 0x20, 0x74, // ighting[2].w * t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, // mpvar_19.xyz) * 
	0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x29, 0x3b, 0x0a, // u_water[2].z));.
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x2e, 0x77, 0x20, 0x3d, 0x20, //   tmpvar_34.w = 
	0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, // 1.0;.  gl_FragCo
	0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x33, 0x34, 0x3b, // lor = tmpvar_34;
	0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, // .  gl_FragDepth 
	0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x2e, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, // = tmpvar_8.z;.}.
	0x0a, 0x00,                                                                                     // ..
};
