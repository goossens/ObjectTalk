static const uint8_t OtWaterFS_mtl[5096] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0x87, 0x44, 0x57, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x0d, 0x75, // FSH.N.DW.......u
	0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0x50, 0x00, // _invViewProj..P.
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, // .......s_normalm
	0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // apSamplerSampler
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x6e, 0x6f, 0x72, // ...........s_nor
	0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x54, 0x65, 0x78, // malmapSamplerTex
	0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, // ture...........s
	0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _reflectionSampl
	0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, // erSampler.......
	0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // ....s_reflection
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, // SamplerTexture..
	0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, // .........s_refra
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, // ctionSamplerSamp
	0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, // ler...........s_
	0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // refractionSample
	0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // rTexture........
	0x00, 0x00, 0x1f, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, // ...s_refractionD
	0x65, 0x70, 0x74, 0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, // epthSamplerSampl
	0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x73, 0x5f, 0x72, // er...........s_r
	0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x53, 0x61, // efractionDepthSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, // mplerTexture....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x12, 0x04, // .......u_water..
	0x90, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, // .........u_viewP
	0x72, 0x6f, 0x6a, 0x14, 0x01, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, // roj...........u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // viewRect........
	0x00, 0x00, 0x0a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x03, 0xd0, // ...u_lighting...
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ........s_normal
	0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // mapSampler......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, // .....s_reflectio
	0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // nSampler........
	0x00, 0x00, 0x13, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, // ...s_refractionS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ampler..........
	0x18, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, // .s_refractionDep
	0x74, 0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // thSampler.......
	0x00, 0x00, 0x00, 0xbd, 0x11, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, // .......#include 
	0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, 0x23, // <metal_stdlib>.#
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, 0x69, // include <simd/si
	0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, 0x6d, // md.h>..using nam
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, 0x73, // espace metal;..s
	0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, 0x0a, // truct _Global.{.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, //     float4 u_vie
	0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // wRect;.    float
	0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, // 4x4 u_viewProj;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, //     float4x4 u_i
	0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // nvViewProj;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x34, // float4 u_water[4
	0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // ];.    float4 u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x33, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, // lighting[3];.};.
	0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, // .struct xlatMtlM
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // ain_out.{.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, // oat4 bgfx_FragDa
	0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, // ta0 [[color(0)]]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x5f, 0x46, // ;.    float gl_F
	0x72, 0x61, 0x67, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x5b, 0x5b, 0x64, 0x65, 0x70, 0x74, 0x68, // ragDepth [[depth
	0x28, 0x61, 0x6e, 0x79, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // (any)]];.};..str
	0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // uct xlatMtlMain_
	0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // in.{.    float3 
	0x76, 0x5f, 0x66, 0x61, 0x72, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, // v_far [[user(loc
	0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // n0)]];.    float
	0x33, 0x20, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, // 3 v_near [[user(
	0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, // locn1)]];.};..fr
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // agment xlatMtlMa
	0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, // in_out xlatMtlMa
	0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, // in(xlatMtlMain_i
	0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, // n in [[stage_in]
	0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, // ], constant _Glo
	0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, // bal& _mtl_u [[bu
	0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ffer(0)]], textu
	0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6e, 0x6f, // re2d<float> s_no
	0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // rmalmapSampler [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [texture(0)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, // s_reflectionSamp
	0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, // ler [[texture(1)
	0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, // ]], texture2d<fl
	0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, // oat> s_refractio
	0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // nSampler [[textu
	0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // re(2)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, // 2d<float> s_refr
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, // actionDepthSampl
	0x65, 0x72, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, // er [[texture(3)]
	0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, // ], sampler s_nor
	0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, // malmapSamplerSam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, // pler [[sampler(0
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x72, // )]], sampler s_r
	0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // eflectionSampler
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Sampler [[sample
	0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // r(1)]], sampler 
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, // s_refractionSamp
	0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, // lerSampler [[sam
	0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // pler(2)]], sampl
	0x65, 0x72, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, // er s_refractionD
	0x65, 0x70, 0x74, 0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, // epthSamplerSampl
	0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x33, 0x29, 0x5d, // er [[sampler(3)]
	0x5d, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, // ], float4 gl_Fra
	0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, // gCoord [[positio
	0x6e, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, // n]]).{.    xlatM
	0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, // tlMain_out out =
	0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //  {};.    float _
	0x38, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 818 = (_mtl_u.u_
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, // water[0].x - in.
	0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x69, 0x6e, 0x2e, // v_near.y) / (in.
	0x76, 0x5f, 0x66, 0x61, 0x72, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, // v_far.y - in.v_n
	0x65, 0x61, 0x72, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, // ear.y);.    if (
	0x5f, 0x38, 0x31, 0x38, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // _818 < 0.0).    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, // {.        discar
	0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, // d_fragment();.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //   }.    float3 _
	0x38, 0x32, 0x39, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x20, // 829 = in.v_near 
	0x2b, 0x20, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x66, 0x61, 0x72, 0x20, 0x2d, 0x20, 0x69, // + ((in.v_far - i
	0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x38, 0x31, 0x38, // n.v_near) * _818
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x38, // );.    float4 _8
	0x33, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, // 37 = _mtl_u.u_vi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // ewProj * float4(
	0x5f, 0x38, 0x32, 0x39, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // _829, 1.0);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x38, 0x34, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x38, // float3 _843 = _8
	0x33, 0x37, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 37.xyz / float3(
	0x5f, 0x38, 0x33, 0x37, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // _837.w);.    if 
	0x28, 0x5f, 0x38, 0x34, 0x33, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // (_843.z > _mtl_u
	0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x0a, 0x20, // .u_water[0].y). 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, //    {.        dis
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, // card_fragment();
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // .    }.    float
	0x32, 0x20, 0x5f, 0x38, 0x35, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x38, 0x32, 0x39, 0x2e, 0x78, // 2 _859 = (_829.x
	0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // z / float2(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x29, // u.u_water[1].y))
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, //  * _mtl_u.u_wate
	0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // r[1].x;.    floa
	0x74, 0x33, 0x20, 0x5f, 0x39, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // t3 _917 = fast::
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, // normalize((((((s
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // _normalmapSample
	0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // r.sample(s_norma
	0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, // lmapSamplerSampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x38, 0x35, 0x39, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, // er, (_859 + floa
	0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, // t2(_mtl_u.u_wate
	0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x38, 0x38, 0x32, // r[1].z * 0.05882
	0x33, 0x35, 0x32, 0x39, 0x36, 0x33, 0x30, 0x38, 0x39, 0x39, 0x34, 0x32, 0x39, 0x33, 0x32, 0x31, // 3529630899429321
	0x32, 0x38, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 2890625, _mtl_u.
	0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, // u_water[1].z * 0
	0x2e, 0x30, 0x33, 0x34, 0x34, 0x38, 0x32, 0x37, 0x35, 0x38, 0x34, 0x39, 0x32, 0x32, 0x33, 0x31, // .034482758492231
	0x33, 0x36, 0x39, 0x30, 0x31, 0x38, 0x35, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x29, 0x29, // 3690185546875)))
	0x20, 0x2b, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, //  + s_normalmapSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6e, // mpler.sample(s_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, // ormalmapSamplerS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x38, 0x35, 0x39, 0x20, 0x2d, 0x20, // ampler, (_859 - 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // float2(_mtl_u.u_
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x30, // water[1].z * (-0
	0x2e, 0x30, 0x35, 0x32, 0x36, 0x33, 0x31, 0x35, 0x37, 0x39, 0x33, 0x33, 0x39, 0x35, 0x30, 0x34, // .052631579339504
	0x32, 0x34, 0x31, 0x39, 0x34, 0x33, 0x33, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, // 241943359375), _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, // mtl_u.u_water[1]
	0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x32, 0x32, 0x35, 0x38, 0x30, 0x36, 0x33, // .z * 0.032258063
	0x35, 0x35, 0x34, 0x37, 0x36, 0x33, 0x37, 0x39, 0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, // 5547637939453125
	0x29, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, // )))) + s_normalm
	0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // apSampler.sample
	0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, // (s_normalmapSamp
	0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x38, 0x35, // lerSampler, (_85
	0x39, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 9 + float2(_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, // u.u_water[1].z *
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x39, 0x39, 0x30, 0x30, 0x39, 0x38, 0x39, 0x39, 0x34, 0x32, 0x32, //  0.0099009899422
	0x35, 0x32, 0x36, 0x33, 0x35, 0x39, 0x35, 0x35, 0x38, 0x31, 0x30, 0x35, 0x34, 0x36, 0x38, 0x37, // 5263595581054687
	0x35, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, // 5, _mtl_u.u_wate
	0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x33, 0x30, // r[1].z * 0.01030
	0x39, 0x32, 0x37, 0x38, 0x30, 0x33, 0x33, 0x36, 0x37, 0x33, 0x37, 0x36, 0x33, 0x32, 0x37, 0x35, // 9278033673763275
	0x31, 0x34, 0x36, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, // 146484375)))) + 
	0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, // s_normalmapSampl
	0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // er.sample(s_norm
	0x61, 0x6c, 0x6d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, // almapSamplerSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x38, 0x35, 0x39, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, // ler, (_859 - flo
	0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, // at2(_mtl_u.u_wat
	0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x39, 0x31, // er[1].z * 0.0091
	0x37, 0x34, 0x33, 0x31, 0x31, 0x35, 0x33, 0x33, 0x35, 0x37, 0x30, 0x32, 0x38, 0x39, 0x36, 0x31, // 7431153357028961
	0x31, 0x38, 0x31, 0x36, 0x34, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 181640625, _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, // u.u_water[1].z *
	0x20, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x38, 0x38, 0x34, 0x39, 0x35, 0x35, 0x37, 0x34, 0x38, //  (-0.00884955748
	0x39, 0x31, 0x35, 0x36, 0x37, 0x32, 0x33, 0x30, 0x32, 0x32, 0x34, 0x36, 0x30, 0x39, 0x33, 0x37, // 9156723022460937
	0x35, 0x29, 0x29, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x7a, 0x79, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, // 5))))).xzy * 0.5
	0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, // ) - float3(1.0))
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, //  * float3(1.5, 1
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // .0, 1.5));.    f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x39, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, // loat2 _923 = gl_
	0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x5f, // FragCoord.xy / _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, // mtl_u.u_viewRect
	0x2e, 0x7a, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .zw;.    float3 
	0x5f, 0x39, 0x35, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, // _951 = fast::nor
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // malize(_mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, // lighting[0].xyz 
	0x2d, 0x20, 0x5f, 0x38, 0x32, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // - _829);.    flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x39, 0x36, 0x31, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, // at2 _961 = gl_Fr
	0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, // agCoord.xy / _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x2e, 0x7a, // l_u.u_viewRect.z
	0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, // w;.    float4 _1
	0x31, 0x32, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, // 124 = _mtl_u.u_i
	0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // nvViewProj * flo
	0x61, 0x74, 0x34, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x39, 0x36, 0x31, 0x2e, 0x78, 0x2c, 0x20, // at4(fma(_961.x, 
	0x32, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, // 2.0, -1.0), fma(
	0x5f, 0x39, 0x36, 0x31, 0x2e, 0x79, 0x2c, 0x20, 0x2d, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // _961.y, -2.0, 1.
	0x30, 0x29, 0x2c, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, // 0), s_refraction
	0x44, 0x65, 0x70, 0x74, 0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, // DepthSampler.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, // ple(s_refraction
	0x44, 0x65, 0x70, 0x74, 0x68, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, // DepthSamplerSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x39, 0x32, 0x33, 0x29, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, // ler, _923).x, 1.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x39, // 0);.    float _9
	0x38, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, // 80 = fast::clamp
	0x28, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x32, 0x34, 0x2e, 0x78, // (length((_1124.x
	0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x31, 0x32, // yz / float3(_112
	0x34, 0x2e, 0x77, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x38, 0x32, 0x39, 0x29, 0x2c, 0x20, 0x30, // 4.w)) - _829), 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // .0, 1.0);.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x32, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, // oat3 _1002 = fas
	0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, // t::normalize(_mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x31, // l_u.u_lighting[1
	0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ].xyz);.    floa
	0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // t3 _1166 = float
	0x34, 0x28, 0x6d, 0x69, 0x78, 0x28, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, // 4(mix(s_reflecti
	0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // onSampler.sample
	0x28, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, // (s_reflectionSam
	0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // plerSampler, flo
	0x61, 0x74, 0x32, 0x28, 0x5f, 0x39, 0x32, 0x33, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, // at2(_923.x, 1.0 
	0x2d, 0x20, 0x5f, 0x39, 0x32, 0x33, 0x2e, 0x79, 0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // - _923.y)).xyz, 
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // select(_mtl_u.u_
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x73, 0x5f, // water[3].xyz, s_
	0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // refractionSample
	0x72, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, // r.sample(s_refra
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x53, 0x61, 0x6d, 0x70, // ctionSamplerSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x39, 0x32, 0x33, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, // ler, _923).xyz, 
	0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, // bool3(_mtl_u.u_w
	0x61, 0x74, 0x65, 0x72, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, // ater[3].w != 0.0
	0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x72, 0x28, // )), float3(powr(
	0x5f, 0x39, 0x35, 0x31, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // _951.y, _mtl_u.u
	0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x29, 0x2c, 0x20, // _water[2].w))), 
	0x5f, 0x39, 0x38, 0x30, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // _980).xyz;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x32, 0x20, 0x3d, 0x20, 0x6d, 0x69, // loat3 _1272 = mi
	0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x39, 0x39, 0x39, // x(float3(0.03999
	0x39, 0x39, 0x39, 0x39, 0x31, 0x30, 0x35, 0x39, 0x33, 0x30, 0x33, 0x32, 0x38, 0x33, 0x36, 0x39, // 9999105930328369
	0x31, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x36, 0x2c, 0x20, // 140625), _1166, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // float3(_mtl_u.u_
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // water[2].x));.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x37, 0x20, 0x3d, //   float3 _1177 =
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, //  fast::normalize
	0x28, 0x5f, 0x39, 0x35, 0x31, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x32, 0x29, 0x3b, 0x0a, // (_951 + _1002);.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x32, 0x38, 0x34, //     float3 _1284
	0x20, 0x3d, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x32, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, //  = _1272 + ((flo
	0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x32, 0x37, 0x32, // at3(1.0) - _1272
	0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, // ) * powr(fast::c
	0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // lamp(1.0 - fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x31, 0x37, 0x37, 0x2c, 0x20, // :max(dot(_1177, 
	0x5f, 0x39, 0x35, 0x31, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, // _951), 0.0), 0.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // , 1.0), 5.0));. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x34, 0x20, 0x3d, //    float _1294 =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, //  _mtl_u.u_water[
	0x32, 0x5d, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 2].y * _mtl_u.u_
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // water[2].y;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, // float _1301 = fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x31, 0x37, // st::max(dot(_917
	0x2c, 0x20, 0x5f, 0x31, 0x31, 0x37, 0x37, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // , _1177), 0.0);.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x30, 0x20, //     float _1310 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x6d, 0x61, 0x28, // = fast::max(fma(
	0x5f, 0x31, 0x33, 0x30, 0x31, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x30, 0x31, 0x2c, 0x20, 0x66, // _1301 * _1301, f
	0x6d, 0x61, 0x28, 0x5f, 0x31, 0x32, 0x39, 0x34, 0x2c, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x34, 0x2c, // ma(_1294, _1294,
	0x20, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x39, 0x2e, //  -1.0), 1.0), 9.
	0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, // 9999997473787516
	0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, // 355514526367188e
	0x2d, 0x30, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // -05);.    float 
	0x5f, 0x31, 0x33, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, // _1330 = fast::ma
	0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x39, 0x35, 0x31, // x(dot(_917, _951
	0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // ), 0.0);.    flo
	0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x33, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // at _1334 = fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x5f, // :max(dot(_917, _
	0x31, 0x30, 0x30, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 1002), 0.0);.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x34, 0x39, 0x20, 0x3d, 0x20, 0x5f, //  float _1349 = _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, // mtl_u.u_water[2]
	0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // .y + 1.0;.    fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x34, // oat _1352 = _134
	0x39, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x34, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 9 * _1349;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, // loat _1367 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, // l_u.u_water[2].y
	0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //  + 1.0;.    floa
	0x74, 0x20, 0x5f, 0x31, 0x33, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x37, 0x20, // t _1370 = _1367 
	0x2a, 0x20, 0x5f, 0x31, 0x33, 0x36, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, // * _1367;.    out
	0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, // .bgfx_FragData0 
	0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x28, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x28, // = float4(((fma((
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, // (float3(1.0) - _
	0x31, 0x32, 0x38, 0x34, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, // 1284) * (1.0 - _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, // mtl_u.u_water[2]
	0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x31, 0x36, 0x36, 0x2c, 0x20, 0x66, 0x6c, // .x)) * _1166, fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x31, 0x38, 0x33, 0x30, 0x39, 0x38, 0x37, 0x33, // oat3(0.318309873
	0x33, 0x34, 0x32, 0x35, 0x31, 0x34, 0x30, 0x33, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, // 3425140380859375
	0x29, 0x2c, 0x20, 0x28, 0x5f, 0x31, 0x32, 0x38, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x28, 0x5f, // ), (_1284 * (((_
	0x31, 0x32, 0x39, 0x34, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x32, 0x39, 0x34, 0x29, 0x20, 0x2f, 0x20, // 1294 * _1294) / 
	0x28, 0x28, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x37, 0x34, 0x31, 0x30, 0x31, 0x32, // ((3.141592741012
	0x35, 0x37, 0x33, 0x32, 0x34, 0x32, 0x31, 0x38, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, // 5732421875 * _13
	0x31, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x33, 0x31, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, // 10) * _1310)) * 
	0x28, 0x28, 0x5f, 0x31, 0x33, 0x33, 0x34, 0x20, 0x2f, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, // ((_1334 / fma(_1
	0x33, 0x33, 0x34, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x31, 0x33, 0x37, 0x30, 0x2c, // 334, fma(-_1370,
	0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x31, //  0.125, 1.0), _1
	0x33, 0x37, 0x30, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, // 370 * 0.125)) * 
	0x28, 0x5f, 0x31, 0x33, 0x33, 0x30, 0x20, 0x2f, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x5f, 0x31, 0x33, // (_1330 / fma(_13
	0x33, 0x30, 0x2c, 0x20, 0x66, 0x6d, 0x61, 0x28, 0x2d, 0x5f, 0x31, 0x33, 0x35, 0x32, 0x2c, 0x20, // 30, fma(-_1352, 
	0x30, 0x2e, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x33, // 0.125, 1.0), _13
	0x35, 0x32, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x29, 0x29, 0x29, 0x29, 0x29, 0x20, // 52 * 0.125))))) 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x66, 0x6d, 0x61, 0x28, 0x34, 0x2e, 0x30, // / float3(fma(4.0
	0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, //  * fast::max(dot
	0x28, 0x5f, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x39, 0x35, 0x31, 0x29, 0x2c, 0x20, 0x30, 0x2e, // (_917, _951), 0.
	0x30, 0x29, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, // 0), fast::max(do
	0x74, 0x28, 0x5f, 0x39, 0x31, 0x37, 0x2c, 0x20, 0x5f, 0x31, 0x30, 0x30, 0x32, 0x29, 0x2c, 0x20, // t(_917, _1002), 
	0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, // 0.0), 9.99999974
	0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, // 7378751635551452
	0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2a, // 6367188e-05))) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, //  _mtl_u.u_lighti
	0x6e, 0x67, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, // ng[2].xyz) * fas
	0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x39, 0x31, 0x37, 0x2c, // t::max(dot(_917,
	0x20, 0x5f, 0x31, 0x30, 0x30, 0x32, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, //  _1002), 0.0)) +
	0x20, 0x28, 0x28, 0x5f, 0x31, 0x31, 0x36, 0x36, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, //  ((_1166 * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x32, 0x5d, 0x2e, // u.u_lighting[2].
	0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, // w) * _mtl_u.u_wa
	0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x39, 0x38, 0x30, 0x29, // ter[2].z), _980)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, // ;.    out.gl_Fra
	0x67, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x5f, 0x38, 0x34, 0x33, 0x2e, 0x7a, 0x3b, // gDepth = _843.z;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, // .    return out;
	0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0x80, 0x01,                                                 // .}......
};
