static const uint8_t OtWaterFS_mtl[19018] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0x87, 0x44, 0x57, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x13, 0x73, // FSH.N.DW....(..s
	0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _iblBrdfLutSampl
	0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x69, // er...........s_i
	0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // blBrdfLutTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x69, 0x62, 0x6c, // ...........s_ibl
	0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, // IrradianceMapSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, // pler...........s
	0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, // _iblIrradianceMa
	0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // pTexture........
	0x00, 0x00, 0x1a, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, // ...s_iblEnvironm
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // entMapSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, // ........s_iblEnv
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, // ironmentMapTextu
	0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x75, 0x5f, 0x69, // re...........u_i
	0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0x90, 0x00, 0x04, 0x00, // nvViewProj......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // .....s_shadowMap
	0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // 0Sampler........
	0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x54, // ...s_shadowMap0T
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, // .s_shadowMap1Sam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, // pler...........s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x54, 0x65, 0x78, 0x74, 0x75, // _shadowMap1Textu
	0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, // re...........s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap2Sampler
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, // ...........s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, // dowMap2Texture..
	0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // .........s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, // wMap3Sampler....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // .......s_shadowM
	0x61, 0x70, 0x33, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // ap3Texture......
	0x00, 0x00, 0x00, 0x00, 0x08, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x02, 0x10, // .....u_shadow...
	0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // ........u_shadow
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, // ViewProjTransfor
	0x6d, 0x14, 0x04, 0x30, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x6e, 0x6f, // m..0........s_no
	0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, // rmalmapTextureSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, // mpler...........
	0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, // s_normalmapTextu
	0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, // reTexture.......
	0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // ....s_reflection
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, // TextureSampler..
	0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // .........s_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, // ctionTextureText
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, // ure...........s_
	0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // refractionTextur
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // eSampler........
	0x00, 0x00, 0x1a, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, // ...s_refractionT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, // extureTexture...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, // ........s_refrac
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // tionDepthTexture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x1f, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, // ..s_refractionDe
	0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // pthTextureTextur
	0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x75, 0x5f, 0x77, 0x61, // e...........u_wa
	0x74, 0x65, 0x72, 0x12, 0x04, 0x30, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, // ter..0........u_
	0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0x50, 0x00, 0x04, 0x00, 0x00, 0x00, // viewProj..P.....
	0x00, 0x00, 0x0a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x04, 0xd0, // ...u_lighting...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // ........u_viewRe
	0x63, 0x74, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, 0x76, // ct...........u_v
	0x69, 0x65, 0x77, 0x14, 0x01, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, // iew...........s_
	0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // iblBrdfLut......
	0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, // .....s_iblIrradi
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // anceMap.........
	0x00, 0x13, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, // ..s_iblEnvironme
	0x6e, 0x74, 0x4d, 0x61, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, // ntMap...........
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x10, 0x00, 0x00, 0x00, // s_shadowMap0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // .......s_shadowM
	0x61, 0x70, 0x31, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, // ap1...........s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // shadowMap2......
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // .....s_shadowMap
	0x33, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6e, 0x6f, // 3...........s_no
	0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, // rmalmapTexture..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // .........s_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, // ctionTexture....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, // .......s_refract
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ionTexture......
	0x00, 0x00, 0x00, 0x00, 0x8e, 0x45, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, // .....E..#include
	0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, 0x62, 0x3e, 0x0a, //  <metal_stdlib>.
	0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, 0x64, 0x2f, 0x73, // #include <simd/s
	0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x61, // imd.h>..using na
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x3b, 0x0a, 0x0a, // mespace metal;..
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x0a, 0x7b, // struct _Global.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, // .    float4 u_vi
	0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // ewRect;.    floa
	0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, // t4x4 u_view;.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, //  float4x4 u_view
	0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // Proj;.    float4
	0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // x4 u_invViewProj
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6c, // ;.    float4 u_l
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ighting[4];.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // float4 u_shadow[
	0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, // 2];.    float4x4
	0x20, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, //  u_shadowViewPro
	0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x20, // jTransform[4];. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, //    float4 u_wate
	0x72, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, // r[4];.};..struct
	0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, //  xlatMtlMain_out
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x62, 0x67, // .{.    float4 bg
	0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x5b, 0x5b, 0x63, // fx_FragData0 [[c
	0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // olor(0)]];.    f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x65, 0x70, 0x74, // loat gl_FragDept
	0x68, 0x20, 0x5b, 0x5b, 0x64, 0x65, 0x70, 0x74, 0x68, 0x28, 0x61, 0x6e, 0x79, 0x29, 0x5d, 0x5d, // h [[depth(any)]]
	0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, // ;.};..struct xla
	0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // tMtlMain_in.{.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x66, 0x61, 0x72, 0x20, 0x5b, //   float3 v_far [
	0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, // [user(locn0)]];.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x65, 0x61, //     float3 v_nea
	0x72, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x31, 0x29, 0x5d, // r [[user(locn1)]
	0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, // ];.};..fragment 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, // xlatMtlMain_out 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, 0x6c, 0x61, 0x74, // xlatMtlMain(xlat
	0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x5b, 0x5b, // MtlMain_in in [[
	0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x6e, 0x73, // stage_in]], cons
	0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, 0x20, 0x5f, 0x6d, // tant _Global& _m
	0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x28, 0x30, 0x29, // tl_u [[buffer(0)
	0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, // ]], texture2d<fl
	0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, // oat> s_normalmap
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Texture [[textur
	0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // e(0)]], texture2
	0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // d<float> s_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, // ctionTexture [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, // exture(1)]], tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, // ture2d<float> s_
	0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // refractionTextur
	0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, 0x29, 0x5d, 0x5d, // e [[texture(2)]]
	0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, // , texture2d<floa
	0x74, 0x3e, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x20, // t> s_iblBrdfLut 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x35, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(5)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x63, 0x75, 0x62, 0x65, 0x3c, 0x66, 0x6c, 0x6f, 0x61, // texturecube<floa
	0x74, 0x3e, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, // t> s_iblIrradian
	0x63, 0x65, 0x4d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // ceMap [[texture(
	0x36, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x63, 0x75, 0x62, // 6)]], texturecub
	0x65, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, // e<float> s_iblEn
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, // vironmentMap [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x37, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, // exture(7)]], tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, // ture2d<float> s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, // shadowMap0 [[tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, // ture(10)]], text
	0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, // ure2d<float> s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, // hadowMap1 [[text
	0x75, 0x72, 0x65, 0x28, 0x31, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ure(11)]], textu
	0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, // re2d<float> s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, // adowMap2 [[textu
	0x72, 0x65, 0x28, 0x31, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // re(12)]], textur
	0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // e2d<float> s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // dowMap3 [[textur
	0x65, 0x28, 0x31, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // e(13)]], sampler
	0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, //  s_normalmapText
	0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, // ureSampler [[sam
	0x70, 0x6c, 0x65, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // pler(0)]], sampl
	0x65, 0x72, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, // er s_reflectionT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, // extureSampler [[
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, // sampler(1)]], sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, // mpler s_refracti
	0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // onTextureSampler
	0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, //  [[sampler(2)]],
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, //  sampler s_iblBr
	0x64, 0x66, 0x4c, 0x75, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, // dfLutSampler [[s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x35, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, // ampler(5)]], sam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, // pler s_iblIrradi
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, // anceMapSampler [
	0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x36, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // [sampler(6)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, // ampler s_iblEnvi
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // ronmentMapSample
	0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x37, 0x29, 0x5d, 0x5d, // r [[sampler(7)]]
	0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // , sampler s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, // owMap0Sampler [[
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, // sampler(10)]], s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // ampler s_shadowM
	0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, // ap1Sampler [[sam
	0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, // pler(11)]], samp
	0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // ler s_shadowMap2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Sampler [[sample
	0x72, 0x28, 0x31, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // r(12)]], sampler
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, //  s_shadowMap3Sam
	0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, // pler [[sampler(1
	0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x67, 0x6c, 0x5f, // 3)]], float4 gl_
	0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x5b, 0x5b, 0x70, 0x6f, 0x73, 0x69, // FragCoord [[posi
	0x74, 0x69, 0x6f, 0x6e, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x78, 0x6c, // tion]]).{.    xl
	0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x75, // atMtlMain_out ou
	0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // t = {};.    floa
	0x74, 0x20, 0x5f, 0x31, 0x36, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // t _1655 = (_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x20, 0x2d, // u.u_water[0].x -
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x79, 0x29, 0x20, 0x2f, 0x20, //  in.v_near.y) / 
	0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x66, 0x61, 0x72, 0x2e, 0x79, 0x20, 0x2d, 0x20, 0x69, 0x6e, // (in.v_far.y - in
	0x2e, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // .v_near.y);.    
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x35, 0x35, 0x20, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x29, // if (_1655 < 0.0)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, // .    {.        d
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, // iscard_fragment(
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // );.    }.    flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x2e, 0x76, // at3 _1666 = in.v
	0x5f, 0x6e, 0x65, 0x61, 0x72, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x66, // _near + ((in.v_f
	0x61, 0x72, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x29, 0x20, // ar - in.v_near) 
	0x2a, 0x20, 0x5f, 0x31, 0x36, 0x35, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // * _1655);.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, // oat4 _1674 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x20, 0x2a, // l_u.u_viewProj *
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x2c, 0x20, 0x31, //  float4(_1666, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, // .0);.    float3 
	0x5f, 0x31, 0x36, 0x38, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x34, 0x2e, 0x78, 0x79, // _1680 = _1674.xy
	0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x31, 0x36, 0x37, 0x34, // z / float3(_1674
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x36, // .w);.    if (_16
	0x38, 0x30, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 80.z > _mtl_u.u_
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // water[0].y).    
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, // {.        discar
	0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, // d_fragment();.  
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, //   }.    float2 _
	0x31, 0x36, 0x39, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x2e, 0x78, 0x7a, 0x20, // 1692 = _1666.xz 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, // * _mtl_u.u_water
	0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // [1].x;.    float
	0x33, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 3 _1773 = fast::
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, // normalize((((((s
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // _normalmapTextur
	0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // e.sample(s_norma
	0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, // lmapTextureSampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x6c, // er, ((_1692 * fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x39, 0x37, 0x30, 0x38, 0x37, 0x33, 0x37, // oat2(0.009708737
	0x39, 0x35, 0x34, 0x34, 0x39, 0x37, 0x33, 0x33, 0x37, 0x33, 0x34, 0x31, 0x33, 0x30, 0x38, 0x35, // 9544973373413085
	0x39, 0x33, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // 9375)) + float2(
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, // _mtl_u.u_water[1
	0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x38, 0x38, 0x32, 0x33, 0x35, 0x32, // ].z * 0.05882352
	0x39, 0x36, 0x33, 0x30, 0x38, 0x39, 0x39, 0x34, 0x32, 0x39, 0x33, 0x32, 0x31, 0x32, 0x38, 0x39, // 9630899429321289
	0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, // 0625, _mtl_u.u_w
	0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x33, // ater[1].z * 0.03
	0x34, 0x34, 0x38, 0x32, 0x37, 0x35, 0x38, 0x34, 0x39, 0x32, 0x32, 0x33, 0x31, 0x33, 0x36, 0x39, // 4482758492231369
	0x30, 0x31, 0x38, 0x35, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, // 0185546875))) + 
	0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, // s_normalmapTextu
	0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // re.sample(s_norm
	0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, // almapTextureSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x32, 0x20, 0x2a, 0x20, // ler, (((_1692 * 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x39, 0x33, 0x34, 0x35, 0x37, // float2(0.0093457
	0x39, 0x34, 0x30, 0x39, 0x36, 0x35, 0x38, 0x39, 0x30, 0x38, 0x38, 0x34, 0x33, 0x39, 0x39, 0x34, // 9409658908843994
	0x31, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 140625)) - float
	0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, // 2(_mtl_u.u_water
	0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x35, 0x32, 0x36, // [1].z * (-0.0526
	0x33, 0x31, 0x35, 0x37, 0x39, 0x33, 0x33, 0x39, 0x35, 0x30, 0x34, 0x32, 0x34, 0x31, 0x39, 0x34, // 3157933950424194
	0x33, 0x33, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 3359375), _mtl_u
	0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // .u_water[1].z * 
	0x30, 0x2e, 0x30, 0x33, 0x32, 0x32, 0x35, 0x38, 0x30, 0x36, 0x33, 0x35, 0x35, 0x34, 0x37, 0x36, // 0.03225806355476
	0x33, 0x37, 0x39, 0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, // 37939453125)) + 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x32, 0x33, 0x30, 0x30, 0x30, 0x30, 0x30, // float2(0.2300000
	0x30, 0x34, 0x31, 0x37, 0x32, 0x33, 0x32, 0x35, 0x31, 0x33, 0x34, 0x32, 0x37, 0x37, 0x33, 0x34, // 0417232513427734
	0x33, 0x37, 0x35, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // 375)))) + s_norm
	0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, // almapTexture.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, // ple(s_normalmapT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // extureSampler, (
	0x28, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // ((_1692 * float2
	0x28, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x31, 0x31, 0x34, 0x38, 0x32, 0x37, 0x32, 0x33, 0x31, 0x35, // (0.0011148272315
	0x30, 0x34, 0x30, 0x32, 0x33, 0x30, 0x37, 0x35, 0x31, 0x30, 0x33, 0x37, 0x35, 0x39, 0x37, 0x36, // 0402307510375976
	0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x30, 0x31, 0x37, 0x32, 0x39, // 5625, 0.00101729
	0x34, 0x30, 0x30, 0x39, 0x32, 0x31, 0x36, 0x31, 0x32, 0x39, 0x37, 0x37, 0x39, 0x38, 0x31, 0x35, // 4009216129779815
	0x36, 0x37, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, // 673828125)) + fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, // oat2(_mtl_u.u_wa
	0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x39, // ter[1].z * 0.009
	0x39, 0x30, 0x30, 0x39, 0x38, 0x39, 0x39, 0x34, 0x32, 0x32, 0x35, 0x32, 0x36, 0x33, 0x35, 0x39, // 9009899422526359
	0x35, 0x35, 0x38, 0x31, 0x30, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x5f, 0x6d, 0x74, // 55810546875, _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, // l_u.u_water[1].z
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x33, 0x30, 0x39, 0x32, 0x37, 0x38, 0x30, 0x33, //  * 0.01030927803
	0x33, 0x36, 0x37, 0x33, 0x37, 0x36, 0x33, 0x32, 0x37, 0x35, 0x31, 0x34, 0x36, 0x34, 0x38, 0x34, // 3673763275146484
	0x33, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // 375)) + float2(0
	0x2e, 0x35, 0x30, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x30, 0x34, 0x36, 0x33, 0x32, 0x35, 0x36, // .509999990463256
	0x38, 0x33, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x5f, // 8359375)))) + s_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // normalmapTexture
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // .sample(s_normal
	0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // mapTextureSample
	0x72, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x32, 0x20, 0x2a, 0x20, 0x66, 0x6c, // r, (((_1692 * fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x30, 0x30, 0x39, 0x30, 0x38, 0x31, // oat2(0.001009081
	0x37, 0x32, 0x33, 0x31, 0x36, 0x38, 0x34, 0x39, 0x32, 0x33, 0x31, 0x37, 0x31, 0x39, 0x39, 0x37, // 7231684923171997
	0x30, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x31, 0x34, // 0703125, 0.00114
	0x30, 0x32, 0x35, 0x30, 0x38, 0x32, 0x34, 0x33, 0x39, 0x31, 0x38, 0x34, 0x31, 0x38, 0x38, 0x38, // 0250824391841888
	0x34, 0x32, 0x37, 0x37, 0x33, 0x34, 0x33, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, // 427734375)) - fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, // oat2(_mtl_u.u_wa
	0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x39, // ter[1].z * 0.009
	0x31, 0x37, 0x34, 0x33, 0x31, 0x31, 0x35, 0x33, 0x33, 0x35, 0x37, 0x30, 0x32, 0x38, 0x39, 0x36, // 1743115335702896
	0x31, 0x31, 0x38, 0x31, 0x36, 0x34, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 1181640625, _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, // _u.u_water[1].z 
	0x2a, 0x20, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x38, 0x38, 0x34, 0x39, 0x35, 0x35, 0x37, 0x34, // * (-0.0088495574
	0x38, 0x39, 0x31, 0x35, 0x36, 0x37, 0x32, 0x33, 0x30, 0x32, 0x32, 0x34, 0x36, 0x30, 0x39, 0x33, // 8915672302246093
	0x37, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // 75))) + float2(0
	0x2e, 0x37, 0x30, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, 0x34, 0x32, 0x33, 0x32, 0x37, // .709999978542327
	0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, // 880859375)))) * 
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x31, 0x2e, // 0.5) - float4(1.
	0x30, 0x29, 0x29, 0x2e, 0x78, 0x7a, 0x79, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 0)).xzy * float3
	0x28, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, // (2.0, fast::clam
	0x70, 0x28, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // p(length(_mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, // u_lighting[0].xy
	0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, // z - _1666) * 0.0
	0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, 0x34, 0x39, 0x37, 0x34, 0x35, // 0100000004749745
	0x31, 0x33, 0x30, 0x35, 0x33, 0x38, 0x39, 0x34, 0x30, 0x34, 0x32, 0x39, 0x36, 0x38, 0x37, 0x35, // 1305389404296875
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x32, // , 1.0, 100.0), 2
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // .0));.    float2
	0x20, 0x5f, 0x31, 0x37, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, //  _1779 = gl_Frag
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // Coord.xy / _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x2e, 0x7a, 0x77, 0x3b, // u.u_viewRect.zw;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x30, 0x30, // .    float4 _200
	0x32, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // 2 = s_reflection
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // Texture.sample(s
	0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, // _reflectionTextu
	0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // reSampler, float
	0x32, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x39, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // 2(_1779.x, 1.0 -
	0x20, 0x5f, 0x31, 0x37, 0x37, 0x39, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  _1779.y));.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x30, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x73, // float4 _2011 = s
	0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, // _refractionTextu
	0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, // re.sample(s_refr
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, // actionTextureSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x39, 0x29, 0x3b, 0x0a, 0x20, 0x20, // pler, _1779);.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x30, 0x36, 0x39, 0x20, 0x3d, //   float3 _2069 =
	0x20, 0x6d, 0x69, 0x78, 0x28, 0x5f, 0x32, 0x30, 0x30, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, //  mix(_2002.xyz, 
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // select(_mtl_u.u_
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x32, // water[3].xyz, _2
	0x30, 0x31, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x5f, // 011.xyz, bool3(_
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x33, 0x5d, // mtl_u.u_water[3]
	0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // .w != 0.0)), flo
	0x61, 0x74, 0x33, 0x28, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, // at3(powr(fast::n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // ormalize(_mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, // u_lighting[0].xy
	0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x29, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x6d, // z - _1666).y, _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, // tl_u.u_water[2].
	0x77, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // w)));.    float3
	0x20, 0x5f, 0x31, 0x38, 0x37, 0x36, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, //  _1876 = fast::n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // ormalize(_mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, // u_lighting[0].xy
	0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // z - _1666);.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x31, 0x3b, 0x0a, 0x20, 0x20, // float3 _6081;.  
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, //   if (_mtl_u.u_l
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x30, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, 0x20, // ighting[0].w != 
	0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0).    {.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x38, 0x35, 0x20, //    float3 _1885 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // = fast::normaliz
	0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // e(_mtl_u.u_light
	0x69, 0x6e, 0x67, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ing[1].xyz);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x39, 0x30, //      float4 _190
	0x31, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, // 1 = _mtl_u.u_vie
	0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, 0x36, 0x36, // w * float4(_1666
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 1.0);.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x30, 0x37, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, // float _6079;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      do.        
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // {.            if
	0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, //  (_mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, // w[0].x != 0.0). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x20, 0x5f, 0x32, 0x31, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // at _2111 = fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // :max(0.050000000
	0x37, 0x34, 0x35, 0x30, 0x35, 0x38, 0x30, 0x35, 0x39, 0x36, 0x39, 0x32, 0x33, 0x38, 0x32, 0x38, // 7450580596923828
	0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x64, 0x6f, 0x74, // 125 * (1.0 - dot
	0x28, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x38, 0x35, 0x29, 0x29, 0x2c, // (_1773, _1885)),
	0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x38, 0x38, 0x38, 0x32, //  0.0049999998882
	0x34, 0x31, 0x32, 0x39, 0x31, 0x30, 0x34, 0x36, 0x31, 0x34, 0x32, 0x35, 0x37, 0x38, 0x31, 0x32, // 4129104614257812
	0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5);.            
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, 0x39, 0x30, 0x31, 0x2e, //     if ((-_1901.
	0x7a, 0x29, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // z) < _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // adow[1].x).     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x31, 0x32, 0x36, 0x20, 0x3d, 0x20, //  float4 _2126 = 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, // _mtl_u.u_shadowV
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, // iewProjTransform
	0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, // [0] * float4(_16
	0x36, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 66, 1.0);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x31, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, // oat4 _2131 = _21
	0x32, 0x36, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, 0x31, 0x32, // 26 / float4(_212
	0x36, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 6.w);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, //           float2
	0x20, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, //  _2267 = float2(
	0x28, 0x5f, 0x32, 0x31, 0x33, 0x31, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, // (_2131.x + 1.0) 
	0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, // * 0.5, 1.0 - ((_
	0x32, 0x31, 0x33, 0x31, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, // 2131.y + 1.0) * 
	0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.5));.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, 0x31, 0x31, 0x20, 0x2a, //  _2140 = _2111 *
	0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  (2.0 / _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x20, // _shadow[1].x);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x20, 0x3d, //    float _2143 =
	0x20, 0x5f, 0x32, 0x31, 0x33, 0x31, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  _2131.z;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x34, 0x33, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, // oat _2437 = ((((
	0x28, 0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, // ((((step(_2143, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap0.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, // ple(s_shadowMap0
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, // Sampler, (_2267 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, // + (float2(-1.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, // w[0].y))).x + _2
	0x31, 0x34, 0x30, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x34, // 140) + step(_214
	0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, // 3, s_shadowMap0.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, // ap0Sampler, (_22
	0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, // 67 + (float2(-1.
	0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 5, -0.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, 0x20, 0x2b, // )).x + _2140)) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, //  step(_2143, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap0.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, // (s_shadowMap0Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, // pler, (_2267 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, // float2(-1.5, 0.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, // dow[0].y))).x + 
	0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // _2140)) + step(_
	0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 2143, s_shadowMa
	0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p0.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap0Sampler, (
	0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _2267 + (float2(
	0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // -1.5, 1.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, // y))).x + _2140))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, //  + step(_2143, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap0.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, // le(s_shadowMap0S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, // ampler, (_2267 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, //  (float2(-0.5, -
	0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, //  + _2140)) + ste
	0x70, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p(_2143, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap0.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap0Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_2267 + (floa
	0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // t2(-0.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, 0x20, 0x2b, // )).x + _2140)) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, //  step(_2143, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap0.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, // (s_shadowMap0Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, // pler, (_2267 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, // float2(-0.5, 0.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, // dow[0].y))).x + 
	0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // _2140)) + step(_
	0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 2143, s_shadowMa
	0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p0.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap0Sampler, (
	0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _2267 + (float2(
	0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // -0.5, 1.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, // y))).x + _2140))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, //  + step(_2143, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap0.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, // le(s_shadowMap0S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, // ampler, (_2267 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, //  (float2(0.5, -1
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, // hadow[0].y))).x 
	0x2b, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // + _2140)) + step
	0x28, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_2143, s_shadow
	0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map0.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap0Sampler,
	0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_2267 + (float
	0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(0.5, -0.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, // ].y))).x + _2140
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x28, //        _6079 = (
	0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x32, 0x34, 0x33, 0x37, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, // (((((_2437 + ste
	0x70, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p(_2143, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap0.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap0Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_2267 + (floa
	0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // t2(0.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, // ).x + _2140)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_2143, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap0.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap0Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_2267 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, // loat2(0.5, 1.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, // w[0].y))).x + _2
	0x31, 0x34, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, // 140)) + step(_21
	0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, // 43, s_shadowMap0
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, // Map0Sampler, (_2
	0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, // 267 + (float2(1.
	0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 5, -1.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, 0x20, 0x2b, // )).x + _2140)) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, //  step(_2143, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap0.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, // (s_shadowMap0Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, // pler, (_2267 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, // float2(1.5, -0.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, // dow[0].y))).x + 
	0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // _2140)) + step(_
	0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 2143, s_shadowMa
	0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p0.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap0Sampler, (
	0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _2267 + (float2(
	0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 1.5, 0.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, 0x29, 0x29, 0x20, // ))).x + _2140)) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x33, 0x2c, 0x20, 0x73, 0x5f, // + step(_2143, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap0.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, // e(s_shadowMap0Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x36, 0x37, 0x20, 0x2b, 0x20, // mpler, (_2267 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // (float2(1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x30, // ].y))).x + _2140
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // )) * 0.0625;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //         }.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, //                {
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, 0x39, 0x30, 0x31, //      if ((-_1901
	0x2e, 0x7a, 0x29, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .z) < _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, // hadow[1].y).    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, //           float4
	0x20, 0x5f, 0x32, 0x31, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  _2160 = _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, // u_shadowViewProj
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x31, 0x5d, 0x20, 0x2a, 0x20, 0x66, // Transform[1] * f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, // loat4(_1666, 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x34, 0x20, 0x5f, 0x32, 0x31, 0x36, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, 0x36, 0x30, 0x20, // 4 _2165 = _2160 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, 0x31, 0x36, 0x30, 0x2e, 0x77, // / float4(_2160.w
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // );.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x32, 0x20, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // 2 _2847 = float2
	0x28, 0x28, 0x5f, 0x32, 0x31, 0x36, 0x35, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, // ((_2165.x + 1.0)
	0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x28, //  * 0.5, 1.0 - ((
	0x5f, 0x32, 0x31, 0x36, 0x35, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _2165.y + 1.0) *
	0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.5));.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x32, // float _2174 = _2
	0x31, 0x31, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, // 111 * (2.0 / _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, // l_u.u_shadow[1].
	0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // y);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, 0x36, 0x35, 0x2e, // t _2177 = _2165.
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // z;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x33, 0x30, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, //  _3017 = (((((((
	0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, // (step(_2177, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap1.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, // (s_shadowMap1Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, // pler, (_2847 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // float2(-1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x34, // ].y))).x + _2174
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, // ) + step(_2177, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap1.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, // ple(s_shadowMap1
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, // Sampler, (_2847 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, // + (float2(-1.5, 
	0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // -0.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _2174)) + st
	0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_2177, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap1.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap1Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_2847 + (flo
	0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(-1.5, 0.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, // [0].y))).x + _21
	0x37, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, // 74)) + step(_217
	0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, // 7, s_shadowMap1.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, // ap1Sampler, (_28
	0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, // 47 + (float2(-1.
	0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, // ).x + _2174)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_2177, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap1.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap1Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_2847 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, // loat2(-0.5, -1.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, // dow[0].y))).x + 
	0x5f, 0x32, 0x31, 0x37, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // _2174)) + step(_
	0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 2177, s_shadowMa
	0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p1.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap1Sampler, (
	0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _2847 + (float2(
	0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // -0.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _2174)) + st
	0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_2177, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap1.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap1Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_2847 + (flo
	0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(-0.5, 0.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, // [0].y))).x + _21
	0x37, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, // 74)) + step(_217
	0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, // 7, s_shadowMap1.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, // ap1Sampler, (_28
	0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, // 47 + (float2(-0.
	0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 5, 1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, // ).x + _2174)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_2177, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap1.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap1Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_2847 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, // loat2(0.5, -1.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // ow[0].y))).x + _
	0x32, 0x31, 0x37, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, // 2174)) + step(_2
	0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 177, s_shadowMap
	0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 1.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap1Sampler, (_
	0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, // 2847 + (float2(0
	0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // .5, -0.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x34, 0x29, 0x3b, 0x0a, // ))).x + _2174);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x37, 0x39, 0x20, 0x3d, 0x20, //         _6079 = 
	0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x33, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x73, 0x74, // ((((((_3017 + st
	0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_2177, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap1.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap1Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_2847 + (flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // at2(0.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x34, 0x29, 0x29, 0x20, 0x2b, // )).x + _2174)) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, //  step(_2177, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap1.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, // (s_shadowMap1Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, // pler, (_2847 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, // float2(0.5, 1.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // ow[0].y))).x + _
	0x32, 0x31, 0x37, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, // 2174)) + step(_2
	0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 177, s_shadowMap
	0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 1.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap1Sampler, (_
	0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, // 2847 + (float2(1
	0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // .5, -1.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x34, 0x29, 0x29, 0x20, // ))).x + _2174)) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, // + step(_2177, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap1.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, // e(s_shadowMap1Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, // mpler, (_2847 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, // (float2(1.5, -0.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x32, 0x31, 0x37, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //  _2174)) + step(
	0x5f, 0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _2177, s_shadowM
	0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap1.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap1Sampler, 
	0x28, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_2847 + (float2
	0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // (1.5, 0.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x34, 0x29, 0x29, // y))).x + _2174))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x37, 0x2c, 0x20, 0x73, //  + step(_2177, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap1.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, // le(s_shadowMap1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x34, 0x37, 0x20, 0x2b, // ampler, (_2847 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, //  (float2(1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x37, // 0].y))).x + _217
	0x34, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, // 4)) * 0.0625;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  }.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, //        else.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, //           if ((-
	0x5f, 0x31, 0x39, 0x30, 0x31, 0x2e, 0x7a, 0x29, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // _1901.z) < _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, // u.u_shadow[1].z)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //          {.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, //        float4 _2
	0x31, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // 194 = _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, // hadowViewProjTra
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x32, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, // nsform[2] * floa
	0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, // t4(_1666, 1.0);.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x34, 0x20, 0x5f, 0x32, 0x31, 0x39, 0x39, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, 0x39, 0x34, // t4 _2199 = _2194
	0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, 0x31, 0x39, 0x34, 0x2e, //  / float4(_2194.
	0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x34, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x66, // float2 _3427 = f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x32, 0x31, 0x39, 0x39, 0x2e, 0x78, 0x20, 0x2b, // loat2((_2199.x +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, //  1.0) * 0.5, 1.0
	0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x32, 0x31, 0x39, 0x39, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, //  - ((_2199.y + 1
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // .0) * 0.5));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x32, 0x32, 0x30, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, 0x31, 0x31, 0x20, 0x2a, 0x20, 0x28, // 2208 = _2111 * (
	0x32, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // 2.0 / _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // hadow[1].z);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, //          float _
	0x32, 0x32, 0x31, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, 0x39, 0x39, 0x2e, 0x7a, 0x3b, 0x0a, // 2211 = _2199.z;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x20, 0x5f, 0x33, 0x35, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, // t _3597 = ((((((
	0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, // ((step(_2211, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap2.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, // e(s_shadowMap2Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, // mpler, (_3427 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // (float2(-1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x30, // 0].y))).x + _220
	0x38, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, 0x31, 0x2c, // 8) + step(_2211,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, //  s_shadowMap2.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x32, 0x37, // 2Sampler, (_3427
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, //  + (float2(-1.5,
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  -0.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // .x + _2208)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_2211, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap2.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap2Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_3427 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, // oat2(-1.5, 0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, // w[0].y))).x + _2
	0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, // 208)) + step(_22
	0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // 11, s_shadowMap2
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, // Map2Sampler, (_3
	0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, // 427 + (float2(-1
	0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // .5, 1.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, // )).x + _2208)) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, //  step(_2211, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap2.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, // (s_shadowMap2Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, // pler, (_3427 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, // float2(-0.5, -1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x32, 0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //  _2208)) + step(
	0x5f, 0x32, 0x32, 0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _2211, s_shadowM
	0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap2.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap2Sampler, 
	0x28, 0x5f, 0x33, 0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_3427 + (float2
	0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // (-0.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // .x + _2208)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_2211, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap2.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap2Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_3427 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, // oat2(-0.5, 0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, // w[0].y))).x + _2
	0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, // 208)) + step(_22
	0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // 11, s_shadowMap2
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, // Map2Sampler, (_3
	0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, // 427 + (float2(-0
	0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // .5, 1.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, // )).x + _2208)) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, //  step(_2211, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap2.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, // (s_shadowMap2Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, // pler, (_3427 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, // float2(0.5, -1.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, // dow[0].y))).x + 
	0x5f, 0x32, 0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, // _2208)) + step(_
	0x32, 0x32, 0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 2211, s_shadowMa
	0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p2.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap2Sampler, (
	0x5f, 0x33, 0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _3427 + (float2(
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // 0.5, -0.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x38, 0x29, 0x3b, // y))).x + _2208);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, //              _60
	0x37, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x33, 0x35, 0x39, 0x37, // 79 = ((((((_3597
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, 0x31, 0x2c, 0x20, 0x73, //  + step(_2211, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, // le(s_shadowMap2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x32, 0x37, 0x20, 0x2b, // ampler, (_3427 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, //  (float2(0.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x30, // 0].y))).x + _220
	0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, 0x31, // 8)) + step(_2211
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, // , s_shadowMap2.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x32, // p2Sampler, (_342
	0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, // 7 + (float2(0.5,
	0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  1.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _2208)) + st
	0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_2211, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap2.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap2Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_3427 + (flo
	0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(1.5, -1.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, // [0].y))).x + _22
	0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, // 08)) + step(_221
	0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, // 1, s_shadowMap2.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, // ap2Sampler, (_34
	0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, // 27 + (float2(1.5
	0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // , -0.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, // ).x + _2208)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_2211, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap2.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap2Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_3427 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, // loat2(1.5, 0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, // w[0].y))).x + _2
	0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, // 208)) + step(_22
	0x31, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // 11, s_shadowMap2
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, // Map2Sampler, (_3
	0x34, 0x32, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, // 427 + (float2(1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x32, 0x32, 0x30, 0x38, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, //  _2208)) * 0.062
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, //                b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // reak;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, //               }.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, //         else.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, 0x39, 0x30, 0x31, 0x2e, 0x7a, //    if ((-_1901.z
	0x29, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) < _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // dow[1].w).      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       {.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, //         float4 _
	0x32, 0x32, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 2228 = _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, // shadowViewProjTr
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x33, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, // ansform[3] * flo
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, 0x36, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, // at4(_1666, 1.0);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x32, 0x33, 0x33, 0x20, 0x3d, 0x20, //  float4 _2233 = 
	0x5f, 0x32, 0x32, 0x32, 0x38, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, // _2228 / float4(_
	0x32, 0x32, 0x32, 0x38, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2228.w);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, //          float2 
	0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, // _4007 = float2((
	0x5f, 0x32, 0x32, 0x33, 0x33, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, // _2233.x + 1.0) *
	0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x32, //  0.5, 1.0 - ((_2
	0x32, 0x33, 0x33, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, // 233.y + 1.0) * 0
	0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .5));.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x32, 0x34, //       float _224
	0x32, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, 0x31, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, // 2 = _2111 * (2.0
	0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  / _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ow[1].w);.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, //           float 
	0x5f, 0x32, 0x32, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x32, 0x33, 0x33, 0x2e, 0x7a, 0x3b, // _2245 = _2233.z;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x31, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x28, //  float _4177 = (
	0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, // (((((((step(_224
	0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, // 5, s_shadowMap3.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, // ap3Sampler, (_40
	0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, // 07 + (float2(-1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x32, 0x32, 0x34, 0x32, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, //  _2242) + step(_
	0x32, 0x32, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 2245, s_shadowMa
	0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p3.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap3Sampler, (
	0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _4007 + (float2(
	0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // -1.5, -0.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x32, 0x29, // .y))).x + _2242)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, 0x2c, 0x20, // ) + step(_2245, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap3.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, // ple(s_shadowMap3
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, // Sampler, (_4007 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, // + (float2(-1.5, 
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, //  + _2242)) + ste
	0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p(_2245, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap3.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap3Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_4007 + (floa
	0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // t2(-1.5, 1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, // 0].y))).x + _224
	0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, // 2)) + step(_2245
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, // , s_shadowMap3.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, // p3Sampler, (_400
	0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, // 7 + (float2(-0.5
	0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // , -1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, // ).x + _2242)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_2245, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap3.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap3Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_4007 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // loat2(-0.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x32, 0x29, // .y))).x + _2242)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, 0x2c, 0x20, // ) + step(_2245, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap3.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, // ple(s_shadowMap3
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, // Sampler, (_4007 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, // + (float2(-0.5, 
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, //  + _2242)) + ste
	0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p(_2245, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap3.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap3Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_4007 + (floa
	0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // t2(-0.5, 1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, // 0].y))).x + _224
	0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, // 2)) + step(_2245
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, // , s_shadowMap3.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, // p3Sampler, (_400
	0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, // 7 + (float2(0.5,
	0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  -1.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // .x + _2242)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_2245, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap3.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap3Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_4007 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, // oat2(0.5, -0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, // w[0].y))).x + _2
	0x32, 0x34, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 242);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x28, 0x28, //       _6079 = ((
	0x28, 0x28, 0x28, 0x28, 0x5f, 0x34, 0x31, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // ((((_4177 + step
	0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_2245, s_shadow
	0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map3.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap3Sampler,
	0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_4007 + (float
	0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 2(0.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // .x + _2242)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_2245, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap3.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap3Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_4007 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, // oat2(0.5, 1.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, // [0].y))).x + _22
	0x34, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, // 42)) + step(_224
	0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, // 5, s_shadowMap3.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, // ap3Sampler, (_40
	0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, // 07 + (float2(1.5
	0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // , -1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, // ).x + _2242)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_2245, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap3.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap3Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_4007 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, // loat2(1.5, -0.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // ow[0].y))).x + _
	0x32, 0x32, 0x34, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, // 2242)) + step(_2
	0x32, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 245, s_shadowMap
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 3.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap3Sampler, (_
	0x34, 0x30, 0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, // 4007 + (float2(1
	0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // .5, 0.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x32, 0x29, 0x29, 0x20, 0x2b, // )).x + _2242)) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, //  step(_2245, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap3.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, // (s_shadowMap3Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x30, 0x37, 0x20, 0x2b, 0x20, 0x28, // pler, (_4007 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // float2(1.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x34, 0x32, 0x29, // .y))).x + _2242)
	0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ) * 0.0625;.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // k;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, //                }
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, //              els
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x5f, 0x36, 0x30, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _6079 = 1.0;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, //              bre
	0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ak;.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // }.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, //               br
	0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, // eak; // unreacha
	0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, // ble workaround. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //        }.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, //  break; // unrea
	0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, // chable workaroun
	0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // d.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, //             brea
	0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, // k; // unreachabl
	0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, // e workaround.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, //                b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, // reak; // unreach
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, // able workaround.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, //           else. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, //              _60
	0x37, 0x39, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 79 = 1.0;.      
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, //           break;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // .            }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, // ; // unreachable
	0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, //  workaround.    
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x28, 0x66, 0x61, 0x6c, 0x73, //     } while(fals
	0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // e);.        floa
	0x74, 0x33, 0x20, 0x5f, 0x34, 0x37, 0x30, 0x36, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, // t3 _4706 = mix(f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, // loat3(0.03999999
	0x39, 0x31, 0x30, 0x35, 0x39, 0x33, 0x30, 0x33, 0x32, 0x38, 0x33, 0x36, 0x39, 0x31, 0x34, 0x30, // 9105930328369140
	0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x36, 0x39, 0x2c, 0x20, 0x66, 0x6c, 0x6f, // 625), _2069, flo
	0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, // at3(_mtl_u.u_wat
	0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // er[2].x));.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x36, 0x31, 0x33, 0x20, //    float3 _4613 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, // = fast::normaliz
	0x65, 0x28, 0x5f, 0x31, 0x38, 0x37, 0x36, 0x20, 0x2b, 0x20, 0x5f, 0x31, 0x38, 0x38, 0x35, 0x29, // e(_1876 + _1885)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // ;.        float3
	0x20, 0x5f, 0x34, 0x37, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x37, 0x30, 0x36, 0x20, 0x2b, //  _4718 = _4706 +
	0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, //  ((float3(1.0) -
	0x20, 0x5f, 0x34, 0x37, 0x30, 0x36, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x66, //  _4706) * powr(f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // ast::clamp(1.0 -
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, //  fast::max(dot(_
	0x34, 0x36, 0x31, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, // 4613, _1876), 0.
	0x30, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x35, // 0), 0.0, 1.0), 5
	0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // .0));.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // oat _4728 = _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x20, // _u.u_water[2].y 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, // * _mtl_u.u_water
	0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // [2].y;.        f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x33, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x37, // loat _4731 = _47
	0x32, 0x38, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x37, 0x32, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 28 * _4728;.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x33, 0x35, 0x20, //     float _4735 
	0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, // = fast::max(dot(
	0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, 0x20, 0x5f, 0x34, 0x36, 0x31, 0x33, 0x29, 0x2c, 0x20, 0x30, // _1773, _4613), 0
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // .0);.        flo
	0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x34, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // at _4744 = fast:
	0x3a, 0x6d, 0x61, 0x78, 0x28, 0x28, 0x28, 0x5f, 0x34, 0x37, 0x33, 0x35, 0x20, 0x2a, 0x20, 0x5f, // :max(((_4735 * _
	0x34, 0x37, 0x33, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x34, 0x37, 0x33, 0x31, 0x20, 0x2d, // 4735) * (_4731 -
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x39, 0x2e, //  1.0)) + 1.0, 9.
	0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, // 9999997473787516
	0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, // 355514526367188e
	0x2d, 0x30, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // -05);.        fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x36, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, // oat _4764 = fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, // ::max(dot(_1773,
	0x20, 0x5f, 0x31, 0x38, 0x37, 0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, //  _1876), 0.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, //        float _47
	0x36, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, // 68 = fast::max(d
	0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x38, 0x35, 0x29, // ot(_1773, _1885)
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 0.0);.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x38, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x6d, // float _4783 = _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, // tl_u.u_water[2].
	0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // y + 1.0;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x28, //  float _4787 = (
	0x5f, 0x34, 0x37, 0x38, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x37, 0x38, 0x33, 0x29, 0x20, 0x2a, // _4783 * _4783) *
	0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.125;.        
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x38, 0x30, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x6d, // float _4801 = _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, // tl_u.u_water[2].
	0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // y + 1.0;.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x38, 0x30, 0x35, 0x20, 0x3d, 0x20, 0x28, //  float _4805 = (
	0x5f, 0x34, 0x38, 0x30, 0x31, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x38, 0x30, 0x31, 0x29, 0x20, 0x2a, // _4801 * _4801) *
	0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  0.125;.        
	0x5f, 0x36, 0x30, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, // _6081 = ((((((((
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x34, // float3(1.0) - _4
	0x37, 0x31, 0x38, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x6d, // 718) * (1.0 - _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, // tl_u.u_water[2].
	0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x30, 0x36, 0x39, 0x29, 0x20, 0x2a, 0x20, 0x66, // x)) * _2069) * f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x31, 0x38, 0x33, 0x30, 0x39, 0x38, 0x37, // loat3(0.31830987
	0x33, 0x33, 0x34, 0x32, 0x35, 0x31, 0x34, 0x30, 0x33, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, // 3342514038085937
	0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x37, 0x31, 0x38, 0x20, 0x2a, 0x20, // 5)) + ((_4718 * 
	0x28, 0x28, 0x5f, 0x34, 0x37, 0x33, 0x31, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x33, 0x2e, 0x31, 0x34, // ((_4731 / ((3.14
	0x31, 0x35, 0x39, 0x32, 0x37, 0x34, 0x31, 0x30, 0x31, 0x32, 0x35, 0x37, 0x33, 0x32, 0x34, 0x32, // 1592741012573242
	0x31, 0x38, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x37, 0x34, 0x34, 0x29, 0x20, 0x2a, 0x20, // 1875 * _4744) * 
	0x5f, 0x34, 0x37, 0x34, 0x34, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x37, 0x36, // _4744)) * ((_476
	0x38, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x37, 0x36, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x31, // 8 / ((_4768 * (1
	0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x38, 0x30, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x5f, // .0 - _4805)) + _
	0x34, 0x38, 0x30, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x34, 0x37, 0x36, 0x34, 0x20, // 4805)) * (_4764 
	0x2f, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x37, 0x36, 0x34, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, // / ((_4764 * (1.0
	0x20, 0x2d, 0x20, 0x5f, 0x34, 0x37, 0x38, 0x37, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x5f, 0x34, 0x37, //  - _4787)) + _47
	0x38, 0x37, 0x29, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, // 87))))) / float3
	0x28, 0x28, 0x28, 0x34, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, // (((4.0 * fast::m
	0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, 0x20, 0x5f, 0x31, // ax(dot(_1773, _1
	0x38, 0x37, 0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, // 876), 0.0)) * fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, // st::max(dot(_177
	0x33, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x38, 0x35, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // 3, _1885), 0.0))
	0x20, 0x2b, 0x20, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, //  + 9.99999974737
	0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, // 8751635551452636
	0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // 7188e-05))) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, // tl_u.u_lighting[
	0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 2].xyz) * fast::
	0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, 0x20, 0x5f, // max(dot(_1773, _
	0x31, 0x38, 0x38, 0x35, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 1885), 0.0)) * _
	0x36, 0x30, 0x37, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x32, 0x30, 0x36, 0x39, 0x20, // 6079) + ((_2069 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, // * _mtl_u.u_light
	0x69, 0x6e, 0x67, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // ing[2].w) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, // _u.u_water[2].z)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, // ;.    }.    else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, // .    {.        _
	0x36, 0x30, 0x38, 0x31, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, // 6081 = float3(0.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 0);.    }.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oat3 _6082;.    
	0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, // if (_mtl_u.u_lig
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, // hting[3].x != 0.
	0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0).    {.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x39, 0x32, 0x38, 0x20, 0x3d, 0x20, //  float3 _4928 = 
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x39, // mix(float3(0.039
	0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x31, 0x30, 0x35, 0x39, 0x33, 0x30, 0x33, 0x32, 0x38, 0x33, // 9999991059303283
	0x36, 0x39, 0x31, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x36, 0x39, // 69140625), _2069
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , float3(_mtl_u.
	0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // u_water[2].x));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x34, 0x39, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x39, 0x32, 0x38, 0x20, 0x2b, 0x20, 0x28, // 4945 = _4928 + (
	0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // (fast::max(float
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // 3(1.0 - _mtl_u.u
	0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x34, // _water[2].y), _4
	0x39, 0x32, 0x38, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x39, 0x32, 0x38, 0x29, 0x20, 0x2a, 0x20, // 928) - _4928) * 
	0x70, 0x6f, 0x77, 0x72, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, // powr(fast::clamp
	0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, // (1.0 - fast::max
	0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, // (dot(_1773, _187
	0x36, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, // 6), 0.0), 0.0, 1
	0x2e, 0x30, 0x29, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // .0), 5.0));.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x34, 0x39, 0x38, 0x31, //     float4 _4981
	0x20, 0x3d, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x2e, //  = s_iblBrdfLut.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, // sample(s_iblBrdf
	0x4c, 0x75, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // LutSampler, floa
	0x74, 0x32, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, // t2(fast::max(dot
	0x28, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x37, 0x36, 0x29, 0x2c, 0x20, // (_1773, _1876), 
	0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, // 0.0), _mtl_u.u_w
	0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ater[2].y));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x30, //      _6082 = _60
	0x38, 0x31, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // 81 + ((((((float
	0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x39, 0x34, 0x35, 0x29, 0x20, // 3(1.0) - _4945) 
	0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // * (1.0 - _mtl_u.
	0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, // u_water[2].x)) *
	0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, //  s_iblIrradiance
	0x4d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x69, 0x62, 0x6c, // Map.sample(s_ibl
	0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, // IrradianceMapSam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x29, 0x2e, 0x78, 0x79, 0x7a, // pler, _1773).xyz
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x30, 0x36, 0x39, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x73, 0x5f, // ) * _2069) + (s_
	0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, // iblEnvironmentMa
	0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, // p.sample(s_iblEn
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, // vironmentMapSamp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x2d, 0x5f, 0x31, // ler, reflect(-_1
	0x38, 0x37, 0x36, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x33, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x76, // 876, _1773), lev
	0x65, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, // el(_mtl_u.u_wate
	0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x69, // r[2].y * float(i
	0x6e, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, // nt(_mtl_u.u_ligh
	0x74, 0x69, 0x6e, 0x67, 0x5b, 0x33, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x79, // ting[3].y)))).xy
	0x7a, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x39, 0x34, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x34, // z * ((_4945 * _4
	0x39, 0x38, 0x31, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 981.x) + float3(
	0x5f, 0x34, 0x39, 0x38, 0x31, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // _4981.y)))) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, // tl_u.u_water[2].
	0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, // z);.    }.    el
	0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // se.    {.       
	0x20, 0x5f, 0x36, 0x30, 0x38, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x31, 0x3b, 0x0a, //  _6082 = _6081;.
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x62, 0x67, //     }.    out.bg
	0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, 0x3d, 0x20, 0x66, // fx_FragData0 = f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x36, 0x30, 0x38, 0x32, 0x2c, 0x20, 0x31, 0x2e, 0x30, // loat4(_6082, 1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x46, 0x72, // );.    out.gl_Fr
	0x61, 0x67, 0x44, 0x65, 0x70, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x30, 0x2e, // agDepth = _1680.
	0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, // z;.    return ou
	0x74, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00, 0x00, 0xd0, 0x03,                                     // t;.}......
};
