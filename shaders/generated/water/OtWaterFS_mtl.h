static const uint8_t OtWaterFS_mtl[19542] =
{
	0x46, 0x53, 0x48, 0x0b, 0x4e, 0x87, 0x44, 0x57, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x13, 0x73, // FSH.N.DW....)..s
	0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _iblBrdfLutSampl
	0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x69, // er...........s_i
	0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // blBrdfLutTexture
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x69, 0x62, 0x6c, // ...........s_ibl
	0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, // IrradianceMapSam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, // pler...........s
	0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, // _iblIrradianceMa
	0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // pTexture........
	0x00, 0x00, 0x1a, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, // ...s_iblEnvironm
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, // entMapSampler...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, // ........s_iblEnv
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, // ironmentMapTextu
	0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x75, 0x5f, 0x69, // re...........u_i
	0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0x90, 0x00, 0x04, 0x00, // nvViewProj......
	0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // .....s_shadowMap
	0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // 0Sampler........
	0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x54, // ...s_shadowMap0T
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // exture..........
	0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, // .s_shadowMap1Sam
	0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, // pler...........s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x54, 0x65, 0x78, 0x74, 0x75, // _shadowMap1Textu
	0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, // re...........s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap2Sampler
	0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, // ...........s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, // dowMap2Texture..
	0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // .........s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, // wMap3Sampler....
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // .......s_shadowM
	0x61, 0x70, 0x33, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, // ap3Texture......
	0x00, 0x00, 0x00, 0x00, 0x08, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x02, 0x10, // .....u_shadow...
	0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // ........u_shadow
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, // ViewProjTransfor
	0x6d, 0x14, 0x04, 0x30, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x73, 0x5f, 0x6e, 0x6f, // m..0........s_no
	0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, // rmalmapTextureSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, // mpler...........
	0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, // s_normalmapTextu
	0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, // reTexture.......
	0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // ....s_reflection
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, // TextureSampler..
	0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // .........s_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, // ctionTextureText
	0x75, 0x72, 0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x73, 0x5f, // ure...........s_
	0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // refractionTextur
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, // eSampler........
	0x00, 0x00, 0x1a, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, // ...s_refractionT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x11, 0x01, 0xff, // extureTexture...
	0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, // ........s_refrac
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // tionDepthTexture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, // Sampler.........
	0x00, 0x1f, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, // ..s_refractionDe
	0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // pthTextureTextur
	0x65, 0x11, 0x01, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x75, 0x5f, 0x77, 0x61, // e...........u_wa
	0x74, 0x65, 0x72, 0x12, 0x04, 0x30, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, // ter..0........u_
	0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x14, 0x01, 0x50, 0x00, 0x04, 0x00, 0x00, 0x00, // viewProj..P.....
	0x00, 0x00, 0x0a, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x04, 0xd0, // ...u_lighting...
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, // ........u_viewRe
	0x63, 0x74, 0x12, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x75, 0x5f, 0x76, // ct...........u_v
	0x69, 0x65, 0x77, 0x14, 0x01, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, // iew...........s_
	0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // iblBrdfLut......
	0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, // .....s_iblIrradi
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // anceMap.........
	0x00, 0x13, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, // ..s_iblEnvironme
	0x6e, 0x74, 0x4d, 0x61, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, // ntMap...........
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x10, 0x00, 0x00, 0x00, // s_shadowMap0....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // .......s_shadowM
	0x61, 0x70, 0x31, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, // ap1...........s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // shadowMap2......
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // .....s_shadowMap
	0x33, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x73, 0x5f, 0x6e, 0x6f, // 3...........s_no
	0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, // rmalmapTexture..
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, // .........s_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, // ctionTexture....
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, // .......s_refract
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // ionTexture......
	0x00, 0x00, 0x00, 0x00, 0x18, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, // .....s_refractio
	0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x00, 0x00, // nDepthTexture...
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x47, 0x00, 0x00, 0x23, 0x69, 0x6e, 0x63, 0x6c, // .......wG..#incl
	0x75, 0x64, 0x65, 0x20, 0x3c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x64, 0x6c, 0x69, // ude <metal_stdli
	0x62, 0x3e, 0x0a, 0x23, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x20, 0x3c, 0x73, 0x69, 0x6d, // b>.#include <sim
	0x64, 0x2f, 0x73, 0x69, 0x6d, 0x64, 0x2e, 0x68, 0x3e, 0x0a, 0x0a, 0x75, 0x73, 0x69, 0x6e, 0x67, // d/simd.h>..using
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x6c, //  namespace metal
	0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, // ;..struct _Globa
	0x6c, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, // l.{.    float4 u
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // _viewRect;.    f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, // loat4x4 u_view;.
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x76, //     float4x4 u_v
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // iewProj;.    flo
	0x61, 0x74, 0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, // at4x4 u_invViewP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // roj;.    float4 
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x20, // u_lighting[4];. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //    float4 u_shad
	0x6f, 0x77, 0x5b, 0x32, 0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ow[2];.    float
	0x34, 0x78, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, // 4x4 u_shadowView
	0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x34, 0x5d, // ProjTransform[4]
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x77, // ;.    float4 u_w
	0x61, 0x74, 0x65, 0x72, 0x5b, 0x34, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, // ater[4];.};..str
	0x75, 0x63, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, // uct xlatMtlMain_
	0x6f, 0x75, 0x74, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // out.{.    float4
	0x20, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x30, 0x20, //  bgfx_FragData0 
	0x5b, 0x5b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x20, 0x20, // [[color(0)]];.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, //   float gl_FragD
	0x65, 0x70, 0x74, 0x68, 0x20, 0x5b, 0x5b, 0x64, 0x65, 0x70, 0x74, 0x68, 0x28, 0x61, 0x6e, 0x79, // epth [[depth(any
	0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, // )]];.};..struct 
	0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x0a, 0x7b, // xlatMtlMain_in.{
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, 0x66, 0x61, // .    float3 v_fa
	0x72, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, 0x30, 0x29, 0x5d, // r [[user(locn0)]
	0x5d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x76, 0x5f, // ];.    float3 v_
	0x6e, 0x65, 0x61, 0x72, 0x20, 0x5b, 0x5b, 0x75, 0x73, 0x65, 0x72, 0x28, 0x6c, 0x6f, 0x63, 0x6e, // near [[user(locn
	0x31, 0x29, 0x5d, 0x5d, 0x3b, 0x0a, 0x7d, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, // 1)]];.};..fragme
	0x6e, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, // nt xlatMtlMain_o
	0x75, 0x74, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x28, 0x78, // ut xlatMtlMain(x
	0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x20, 0x69, 0x6e, // latMtlMain_in in
	0x20, 0x5b, 0x5b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5d, 0x5d, 0x2c, 0x20, 0x63, //  [[stage_in]], c
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x20, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x26, // onstant _Global&
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x20, 0x5b, 0x5b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, //  _mtl_u [[buffer
	0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, // (0)]], texture2d
	0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // <float> s_normal
	0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, // mapTexture [[tex
	0x74, 0x75, 0x72, 0x65, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, // ture(0)]], textu
	0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x72, 0x65, // re2d<float> s_re
	0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, // flectionTexture 
	0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, // [[texture(1)]], 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, // texture2d<float>
	0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, //  s_refractionTex
	0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x32, // ture [[texture(2
	0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, // )]], texture2d<f
	0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, // loat> s_refracti
	0x6f, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x5b, // onDepthTexture [
	0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, // [texture(3)]], t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // exture2d<float> 
	0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x20, 0x5b, 0x5b, 0x74, // s_iblBrdfLut [[t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x35, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, // exture(5)]], tex
	0x74, 0x75, 0x72, 0x65, 0x63, 0x75, 0x62, 0x65, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, // turecube<float> 
	0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, // s_iblIrradianceM
	0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x36, 0x29, 0x5d, // ap [[texture(6)]
	0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x63, 0x75, 0x62, 0x65, 0x3c, 0x66, // ], texturecube<f
	0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, // loat> s_iblEnvir
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, // onmentMap [[text
	0x75, 0x72, 0x65, 0x28, 0x37, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // ure(7)]], textur
	0x65, 0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // e2d<float> s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // dowMap0 [[textur
	0x65, 0x28, 0x31, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // e(10)]], texture
	0x32, 0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // 2d<float> s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // owMap1 [[texture
	0x28, 0x31, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, // (11)]], texture2
	0x64, 0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // d<float> s_shado
	0x77, 0x4d, 0x61, 0x70, 0x32, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, // wMap2 [[texture(
	0x31, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x64, // 12)]], texture2d
	0x3c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x3e, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // <float> s_shadow
	0x4d, 0x61, 0x70, 0x33, 0x20, 0x5b, 0x5b, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x31, // Map3 [[texture(1
	0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, // 3)]], sampler s_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // normalmapTexture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // Sampler [[sample
	0x72, 0x28, 0x30, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // r(0)]], sampler 
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, // s_reflectionText
	0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, // ureSampler [[sam
	0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, // pler(1)]], sampl
	0x65, 0x72, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, // er s_refractionT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, // extureSampler [[
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, // sampler(2)]], sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, // mpler s_refracti
	0x6f, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, // onDepthTextureSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, // mpler [[sampler(
	0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, // 3)]], sampler s_
	0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // iblBrdfLutSample
	0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x35, 0x29, 0x5d, 0x5d, // r [[sampler(5)]]
	0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, // , sampler s_iblI
	0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, // rradianceMapSamp
	0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x36, 0x29, // ler [[sampler(6)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x69, 0x62, // ]], sampler s_ib
	0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x53, // lEnvironmentMapS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // ampler [[sampler
	0x28, 0x37, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, // (7)]], sampler s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap0Sampl
	0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x30, 0x29, // er [[sampler(10)
	0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, // ]], sampler s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, // adowMap1Sampler 
	0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x31, 0x29, 0x5d, 0x5d, 0x2c, // [[sampler(11)]],
	0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, //  sampler s_shado
	0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, // wMap2Sampler [[s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x28, 0x31, 0x32, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x73, 0x61, // ampler(12)]], sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // mpler s_shadowMa
	0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x20, 0x5b, 0x5b, 0x73, 0x61, 0x6d, 0x70, // p3Sampler [[samp
	0x6c, 0x65, 0x72, 0x28, 0x31, 0x33, 0x29, 0x5d, 0x5d, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // ler(13)]], float
	0x34, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x20, 0x5b, // 4 gl_FragCoord [
	0x5b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5d, 0x5d, 0x29, 0x0a, 0x7b, 0x0a, 0x20, // [position]]).{. 
	0x20, 0x20, 0x20, 0x78, 0x6c, 0x61, 0x74, 0x4d, 0x74, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x6f, //    xlatMtlMain_o
	0x75, 0x74, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, // ut out = {};.   
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x30, 0x20, 0x3d, 0x20, 0x28, //  float _1660 = (
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x30, // _mtl_u.u_water[0
	0x5d, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x2e, // ].x - in.v_near.
	0x79, 0x29, 0x20, 0x2f, 0x20, 0x28, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x66, 0x61, 0x72, 0x2e, 0x79, // y) / (in.v_far.y
	0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x79, 0x29, 0x3b, //  - in.v_near.y);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x31, 0x36, 0x36, 0x30, 0x20, 0x3c, // .    if (_1660 <
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  0.0).    {.    
	0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, //     discard_frag
	0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, // ment();.    }.  
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x31, 0x20, 0x3d, //   float3 _1671 =
	0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x69, //  in.v_near + ((i
	0x6e, 0x2e, 0x76, 0x5f, 0x66, 0x61, 0x72, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x2e, 0x76, 0x5f, 0x6e, // n.v_far - in.v_n
	0x65, 0x61, 0x72, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x31, 0x36, 0x36, 0x30, 0x29, 0x3b, 0x0a, 0x20, // ear) * _1660);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x39, 0x20, //    float4 _1679 
	0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x50, // = _mtl_u.u_viewP
	0x72, 0x6f, 0x6a, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, // roj * float4(_16
	0x37, 0x31, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // 71, 1.0);.    fl
	0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, // oat3 _1685 = _16
	0x37, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 79.xyz / float3(
	0x5f, 0x31, 0x36, 0x37, 0x39, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // _1679.w);.    if
	0x20, 0x28, 0x5f, 0x31, 0x36, 0x38, 0x35, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x5f, 0x6d, 0x74, 0x6c, //  (_1685.z > _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // _u.u_water[0].y)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, // .    {.        d
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x28, // iscard_fragment(
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // );.    }.    flo
	0x61, 0x74, 0x32, 0x20, 0x5f, 0x31, 0x36, 0x39, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x37, // at2 _1697 = _167
	0x31, 0x2e, 0x78, 0x7a, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1.xz * _mtl_u.u_
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // water[1].x;.    
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x66, // float3 _1778 = f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x28, // ast::normalize((
	0x28, 0x28, 0x28, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, // ((((s_normalmapT
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // exture.sample(s_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // normalmapTexture
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x37, // Sampler, ((_1697
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x39, 0x37, //  * float2(0.0097
	0x30, 0x38, 0x37, 0x33, 0x37, 0x39, 0x35, 0x34, 0x34, 0x39, 0x37, 0x33, 0x33, 0x37, 0x33, 0x34, // 0873795449733734
	0x31, 0x33, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, // 130859375)) + fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, // oat2(_mtl_u.u_wa
	0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x38, // ter[1].z * 0.058
	0x38, 0x32, 0x33, 0x35, 0x32, 0x39, 0x36, 0x33, 0x30, 0x38, 0x39, 0x39, 0x34, 0x32, 0x39, 0x33, // 8235296308994293
	0x32, 0x31, 0x32, 0x38, 0x39, 0x30, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 212890625, _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, // u.u_water[1].z *
	0x20, 0x30, 0x2e, 0x30, 0x33, 0x34, 0x34, 0x38, 0x32, 0x37, 0x35, 0x38, 0x34, 0x39, 0x32, 0x32, //  0.0344827584922
	0x33, 0x31, 0x33, 0x36, 0x39, 0x30, 0x31, 0x38, 0x35, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, 0x29, // 313690185546875)
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, // )) + s_normalmap
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // Texture.sample(s
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // _normalmapTextur
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x36, // eSampler, (((_16
	0x39, 0x37, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x30, // 97 * float2(0.00
	0x39, 0x33, 0x34, 0x35, 0x37, 0x39, 0x34, 0x30, 0x39, 0x36, 0x35, 0x38, 0x39, 0x30, 0x38, 0x38, // 9345794096589088
	0x34, 0x33, 0x39, 0x39, 0x34, 0x31, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x29, 0x20, 0x2d, 0x20, // 43994140625)) - 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // float2(_mtl_u.u_
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x30, // water[1].z * (-0
	0x2e, 0x30, 0x35, 0x32, 0x36, 0x33, 0x31, 0x35, 0x37, 0x39, 0x33, 0x33, 0x39, 0x35, 0x30, 0x34, // .052631579339504
	0x32, 0x34, 0x31, 0x39, 0x34, 0x33, 0x33, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x2c, 0x20, 0x5f, // 241943359375), _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, // mtl_u.u_water[1]
	0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x32, 0x32, 0x35, 0x38, 0x30, 0x36, 0x33, // .z * 0.032258063
	0x35, 0x35, 0x34, 0x37, 0x36, 0x33, 0x37, 0x39, 0x33, 0x39, 0x34, 0x35, 0x33, 0x31, 0x32, 0x35, // 5547637939453125
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x32, 0x33, // )) + float2(0.23
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x31, 0x37, 0x32, 0x33, 0x32, 0x35, 0x31, 0x33, 0x34, // 0000004172325134
	0x32, 0x37, 0x37, 0x33, 0x34, 0x33, 0x37, 0x35, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // 27734375)))) + s
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, // _normalmapTextur
	0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, // e.sample(s_norma
	0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, // lmapTextureSampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x37, 0x20, 0x2a, 0x20, 0x66, // er, (((_1697 * f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x31, 0x31, 0x34, 0x38, 0x32, // loat2(0.00111482
	0x37, 0x32, 0x33, 0x31, 0x35, 0x30, 0x34, 0x30, 0x32, 0x33, 0x30, 0x37, 0x35, 0x31, 0x30, 0x33, // 7231504023075103
	0x37, 0x35, 0x39, 0x37, 0x36, 0x35, 0x36, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, // 759765625, 0.001
	0x30, 0x31, 0x37, 0x32, 0x39, 0x34, 0x30, 0x30, 0x39, 0x32, 0x31, 0x36, 0x31, 0x32, 0x39, 0x37, // 0172940092161297
	0x37, 0x39, 0x38, 0x31, 0x35, 0x36, 0x37, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x29, 0x29, // 79815673828125))
	0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  + float2(_mtl_u
	0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // .u_water[1].z * 
	0x30, 0x2e, 0x30, 0x30, 0x39, 0x39, 0x30, 0x30, 0x39, 0x38, 0x39, 0x39, 0x34, 0x32, 0x32, 0x35, // 0.00990098994225
	0x32, 0x36, 0x33, 0x35, 0x39, 0x35, 0x35, 0x38, 0x31, 0x30, 0x35, 0x34, 0x36, 0x38, 0x37, 0x35, // 2635955810546875
	0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, // , _mtl_u.u_water
	0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x31, 0x30, 0x33, 0x30, 0x39, // [1].z * 0.010309
	0x32, 0x37, 0x38, 0x30, 0x33, 0x33, 0x36, 0x37, 0x33, 0x37, 0x36, 0x33, 0x32, 0x37, 0x35, 0x31, // 2780336737632751
	0x34, 0x36, 0x34, 0x38, 0x34, 0x33, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, // 46484375)) + flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x30, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x30, 0x34, // at2(0.5099999904
	0x36, 0x33, 0x32, 0x35, 0x36, 0x38, 0x33, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x29, 0x29, 0x29, // 632568359375))))
	0x20, 0x2b, 0x20, 0x73, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, //  + s_normalmapTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x6e, // xture.sample(s_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, // ormalmapTextureS
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x28, 0x28, 0x5f, 0x31, 0x36, 0x39, 0x37, // ampler, (((_1697
	0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x30, //  * float2(0.0010
	0x30, 0x39, 0x30, 0x38, 0x31, 0x37, 0x32, 0x33, 0x31, 0x36, 0x38, 0x34, 0x39, 0x32, 0x33, 0x31, // 0908172316849231
	0x37, 0x31, 0x39, 0x39, 0x37, 0x30, 0x37, 0x30, 0x33, 0x31, 0x32, 0x35, 0x2c, 0x20, 0x30, 0x2e, // 719970703125, 0.
	0x30, 0x30, 0x31, 0x31, 0x34, 0x30, 0x32, 0x35, 0x30, 0x38, 0x32, 0x34, 0x33, 0x39, 0x31, 0x38, // 0011402508243918
	0x34, 0x31, 0x38, 0x38, 0x38, 0x34, 0x32, 0x37, 0x37, 0x33, 0x34, 0x33, 0x37, 0x35, 0x29, 0x29, // 41888427734375))
	0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, //  - float2(_mtl_u
	0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, // .u_water[1].z * 
	0x30, 0x2e, 0x30, 0x30, 0x39, 0x31, 0x37, 0x34, 0x33, 0x31, 0x31, 0x35, 0x33, 0x33, 0x35, 0x37, // 0.00917431153357
	0x30, 0x32, 0x38, 0x39, 0x36, 0x31, 0x31, 0x38, 0x31, 0x36, 0x34, 0x30, 0x36, 0x32, 0x35, 0x2c, // 028961181640625,
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, //  _mtl_u.u_water[
	0x31, 0x5d, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x30, 0x2e, 0x30, 0x30, 0x38, 0x38, 0x34, // 1].z * (-0.00884
	0x39, 0x35, 0x35, 0x37, 0x34, 0x38, 0x39, 0x31, 0x35, 0x36, 0x37, 0x32, 0x33, 0x30, 0x32, 0x32, // 9557489156723022
	0x34, 0x36, 0x30, 0x39, 0x33, 0x37, 0x35, 0x29, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, 0x6f, // 4609375))) + flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x37, 0x30, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x38, 0x35, // at2(0.7099999785
	0x34, 0x32, 0x33, 0x32, 0x37, 0x38, 0x38, 0x30, 0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x29, // 42327880859375))
	0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x66, 0x6c, 0x6f, 0x61, // )) * 0.5) - floa
	0x74, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x2e, 0x78, 0x7a, 0x79, 0x20, 0x2a, 0x20, 0x66, // t4(1.0)).xzy * f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x32, 0x2e, 0x30, 0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, // loat3(2.0, fast:
	0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x5f, 0x6d, // :clamp(length(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, // tl_u.u_lighting[
	0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x31, 0x29, 0x20, // 0].xyz - _1671) 
	0x2a, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x34, 0x37, // * 0.001000000047
	0x34, 0x39, 0x37, 0x34, 0x35, 0x31, 0x33, 0x30, 0x35, 0x33, 0x38, 0x39, 0x34, 0x30, 0x34, 0x32, // 4974513053894042
	0x39, 0x36, 0x38, 0x37, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x30, 0x30, 0x2e, // 96875, 1.0, 100.
	0x30, 0x29, 0x2c, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 0), 2.0));.    f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x34, 0x20, 0x3d, 0x20, 0x67, 0x6c, // loat2 _1784 = gl
	0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x20, 0x2f, 0x20, // _FragCoord.xy / 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, // _mtl_u.u_viewRec
	0x74, 0x2e, 0x7a, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // t.zw;.    float4
	0x20, 0x5f, 0x32, 0x30, 0x31, 0x32, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, //  _2012 = s_refle
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, // ctionTexture.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, // ple(s_reflection
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // TextureSampler, 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x5f, 0x31, 0x37, 0x38, 0x34, 0x2e, 0x78, 0x2c, 0x20, // float2(_1784.x, 
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x34, 0x2e, 0x79, 0x29, 0x29, 0x3b, // 1.0 - _1784.y));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x30, 0x32, // .    float4 _202
	0x31, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, // 1 = s_refraction
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // Texture.sample(s
	0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, // _refractionTextu
	0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x34, // reSampler, _1784
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, // );.    float4 _2
	0x30, 0x33, 0x30, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, // 030 = s_refracti
	0x6f, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, // onDepthTexture.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, // ample(s_refracti
	0x6f, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, // onDepthTextureSa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x38, 0x34, 0x29, 0x3b, 0x0a, 0x20, // mpler, _1784);. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x31, 0x38, 0x32, 0x33, 0x20, //    float2 _1823 
	0x3d, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, // = gl_FragCoord.x
	0x79, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x76, 0x69, 0x65, // y / _mtl_u.u_vie
	0x77, 0x52, 0x65, 0x63, 0x74, 0x2e, 0x7a, 0x77, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, // wRect.zw;.    fl
	0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x30, 0x36, 0x37, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, // oat4 _2067 = _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // l_u.u_invViewPro
	0x6a, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x28, 0x5f, 0x31, 0x38, 0x32, // j * float4((_182
	0x33, 0x2e, 0x78, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, // 3.x * 2.0) - 1.0
	0x2c, 0x20, 0x28, 0x5f, 0x31, 0x38, 0x32, 0x33, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x28, 0x2d, 0x32, // , (_1823.y * (-2
	0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x33, // .0)) + 1.0, _203
	0x30, 0x2e, 0x78, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // 0.x, 1.0);.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x32, 0x30, 0x37, 0x39, 0x20, 0x3d, 0x20, 0x6d, 0x69, // loat3 _2079 = mi
	0x78, 0x28, 0x5f, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, 0x6d, 0x74, // x(_2012.xyz, _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x33, 0x5d, 0x2e, 0x78, // l_u.u_water[3].x
	0x79, 0x7a, 0x20, 0x2a, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, // yz * select(floa
	0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x32, 0x31, 0x2e, 0x78, // t3(1.0), _2021.x
	0x79, 0x7a, 0x2c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // yz, bool3(_mtl_u
	0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x33, 0x5d, 0x2e, 0x77, 0x20, 0x21, 0x3d, // .u_water[3].w !=
	0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x70, //  0.0)), float3(p
	0x6f, 0x77, 0x72, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, // owr(dot(fast::no
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // rmalize(_mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, // _lighting[0].xyz
	0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x31, 0x29, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x38, //  - _1671), _1778
	0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, // ), _mtl_u.u_wate
	0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, // r[2].w)));.    f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x31, 0x38, 0x38, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, // loat3 _1885 = fa
	0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, // st::normalize(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, // tl_u.u_lighting[
	0x30, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x31, 0x29, 0x3b, // 0].xyz - _1671);
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x30, 0x39, // .    float3 _609
	0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 0;.    if (_mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x30, 0x5d, 0x2e, // u.u_lighting[0].
	0x77, 0x20, 0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, // w != 0.0).    {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x31, 0x38, 0x39, 0x34, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, // 1894 = fast::nor
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // malize(_mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, // lighting[1].xyz)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // ;.        float4
	0x20, 0x5f, 0x31, 0x39, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  _1910 = _mtl_u.
	0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, // u_view * float4(
	0x5f, 0x31, 0x36, 0x37, 0x31, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // _1671, 1.0);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x38, //      float _6088
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, // ;.        do.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, //    if (_mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x30, // shadow[0].x != 0
	0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0).            
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x31, 0x32, 0x31, 0x20, 0x3d, 0x20, //   float _2121 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x30, 0x2e, 0x30, 0x35, 0x30, 0x30, // fast::max(0.0500
	0x30, 0x30, 0x30, 0x30, 0x30, 0x37, 0x34, 0x35, 0x30, 0x35, 0x38, 0x30, 0x35, 0x39, 0x36, 0x39, // 0000074505805969
	0x32, 0x33, 0x38, 0x32, 0x38, 0x31, 0x32, 0x35, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, // 23828125 * (1.0 
	0x2d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x38, // - dot(_1778, _18
	0x39, 0x34, 0x29, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, 0x39, 0x39, 0x39, 0x39, 0x39, // 94)), 0.00499999
	0x39, 0x38, 0x38, 0x38, 0x32, 0x34, 0x31, 0x32, 0x39, 0x31, 0x30, 0x34, 0x36, 0x31, 0x34, 0x32, // 9888241291046142
	0x35, 0x37, 0x38, 0x31, 0x32, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 578125);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, //          if ((-_
	0x31, 0x39, 0x31, 0x30, 0x2e, 0x7a, 0x29, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 1910.z) < _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x78, 0x29, 0x0a, // .u_shadow[1].x).
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x31, //       float4 _21
	0x33, 0x36, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 36 = _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, // adowViewProjTran
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x30, 0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // sform[0] * float
	0x34, 0x28, 0x5f, 0x31, 0x36, 0x37, 0x31, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, // 4(_1671, 1.0);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x31, 0x20, //    float4 _2141 
	0x3d, 0x20, 0x5f, 0x32, 0x31, 0x33, 0x36, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, // = _2136 / float4
	0x28, 0x5f, 0x32, 0x31, 0x33, 0x36, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // (_2136.w);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x32, 0x32, 0x37, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, // loat2 _2277 = fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x31, 0x2e, 0x78, 0x20, 0x2b, 0x20, // oat2((_2141.x + 
	0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, // 1.0) * 0.5, 1.0 
	0x2d, 0x20, 0x28, 0x28, 0x5f, 0x32, 0x31, 0x34, 0x31, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, // - ((_2141.y + 1.
	0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // 0) * 0.5));.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x31, 0x35, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x32, // float _2150 = _2
	0x31, 0x32, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, // 121 * (2.0 / _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, // l_u.u_shadow[1].
	0x78, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // x);.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, //         float _2
	0x31, 0x35, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, 0x34, 0x31, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, // 153 = _2141.z;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x34, 0x34, 0x37, 0x20, 0x3d, //    float _2447 =
	0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, //  ((((((((step(_2
	0x31, 0x35, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 153, s_shadowMap
	0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 0.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap0Sampler, (_
	0x32, 0x32, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, // 2277 + (float2(-
	0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x35, 0x30, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, //  + _2150) + step
	0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_2153, s_shadow
	0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map0.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap0Sampler,
	0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_2277 + (float
	0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // 2(-1.5, -0.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x35, // 0].y))).x + _215
	0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, // 0)) + step(_2153
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, // , s_shadowMap0.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, // p0Sampler, (_227
	0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, // 7 + (float2(-1.5
	0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 0.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x35, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // .x + _2150)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_2153, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap0.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap0Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_2277 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, // oat2(-1.5, 1.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, // w[0].y))).x + _2
	0x31, 0x35, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, // 150)) + step(_21
	0x35, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, // 53, s_shadowMap0
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, // Map0Sampler, (_2
	0x32, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, // 277 + (float2(-0
	0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // .5, -1.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x35, 0x30, 0x29, 0x29, 0x20, // ))).x + _2150)) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, 0x2c, 0x20, 0x73, 0x5f, // + step(_2153, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap0.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, // e(s_shadowMap0Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, 0x37, 0x20, 0x2b, 0x20, // mpler, (_2277 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // (float2(-0.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x35, // 0].y))).x + _215
	0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, // 0)) + step(_2153
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, // , s_shadowMap0.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, // p0Sampler, (_227
	0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, // 7 + (float2(-0.5
	0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , 0.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x35, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // .x + _2150)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_2153, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap0.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap0Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_2277 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, // oat2(-0.5, 1.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, // w[0].y))).x + _2
	0x31, 0x35, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, // 150)) + step(_21
	0x35, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, // 53, s_shadowMap0
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, // Map0Sampler, (_2
	0x32, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // 277 + (float2(0.
	0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 5, -1.5) * _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[0].y)
	0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x35, 0x30, 0x29, 0x29, 0x20, 0x2b, // )).x + _2150)) +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, //  step(_2153, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap0.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, // (s_shadowMap0Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, // pler, (_2277 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, // float2(0.5, -0.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, // dow[0].y))).x + 
	0x5f, 0x32, 0x31, 0x35, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // _2150);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x38, //             _608
	0x38, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x32, 0x34, 0x34, 0x37, 0x20, // 8 = ((((((_2447 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, 0x2c, 0x20, 0x73, 0x5f, // + step(_2153, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap0.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, // e(s_shadowMap0Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, 0x37, 0x20, 0x2b, 0x20, // mpler, (_2277 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // (float2(0.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x35, 0x30, // ].y))).x + _2150
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, 0x2c, // )) + step(_2153,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, //  s_shadowMap0.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, 0x37, // 0Sampler, (_2277
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, //  + (float2(0.5, 
	0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 1.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x35, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, //  + _2150)) + ste
	0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p(_2153, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap0.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap0Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_2277 + (floa
	0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // t2(1.5, -1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x35, // 0].y))).x + _215
	0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, // 0)) + step(_2153
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, // , s_shadowMap0.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, // p0Sampler, (_227
	0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, // 7 + (float2(1.5,
	0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  -0.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x35, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // .x + _2150)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, 0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_2153, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap0.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap0Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, 0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_2277 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, // oat2(1.5, 0.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, // [0].y))).x + _21
	0x35, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x35, // 50)) + step(_215
	0x33, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x30, 0x2e, // 3, s_shadowMap0.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x30, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x32, // ap0Sampler, (_22
	0x37, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, // 77 + (float2(1.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, // dow[0].y))).x + 
	0x5f, 0x32, 0x31, 0x35, 0x30, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, // _2150)) * 0.0625
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, //       break;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, //              }. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //                e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse.            
	0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     {.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, //           if ((-
	0x5f, 0x31, 0x39, 0x31, 0x30, 0x2e, 0x7a, 0x29, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // _1910.z) < _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, // u.u_shadow[1].y)
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x30, 0x20, 0x3d, 0x20, 0x5f, 0x6d, // loat4 _2170 = _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, // tl_u.u_shadowVie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x31, // wProjTransform[1
	0x5d, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, 0x37, 0x31, // ] * float4(_1671
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // , 1.0);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x31, 0x37, 0x35, 0x20, 0x3d, 0x20, 0x5f, // float4 _2175 = _
	0x32, 0x31, 0x37, 0x30, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, // 2170 / float4(_2
	0x31, 0x37, 0x30, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 170.w);.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x32, 0x38, 0x35, 0x37, 0x20, 0x3d, 0x20, 0x66, // float2 _2857 = f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x35, 0x2e, 0x78, 0x20, 0x2b, // loat2((_2175.x +
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, //  1.0) * 0.5, 1.0
	0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x32, 0x31, 0x37, 0x35, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, //  - ((_2175.y + 1
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // .0) * 0.5));.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, //      float _2184
	0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, 0x32, 0x31, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, //  = _2121 * (2.0 
	0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // / _mtl_u.u_shado
	0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w[1].y);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x20, 0x3d, 0x20, 0x5f, //  float _2187 = _
	0x32, 0x31, 0x37, 0x35, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2175.z;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x30, 0x32, 0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, // float _3027 = ((
	0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, // ((((((step(_2187
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, // , s_shadowMap1.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, // p1Sampler, (_285
	0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, // 7 + (float2(-1.5
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, // ) * _mtl_u.u_sha
	0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, // dow[0].y))).x + 
	0x5f, 0x32, 0x31, 0x38, 0x34, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, // _2184) + step(_2
	0x31, 0x38, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 187, s_shadowMap
	0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 1.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap1Sampler, (_
	0x32, 0x38, 0x35, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, // 2857 + (float2(-
	0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // 1.5, -0.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, 0x29, 0x29, // y))).x + _2184))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x2c, 0x20, 0x73, //  + step(_2187, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap1.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, // le(s_shadowMap1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x37, 0x20, 0x2b, // ampler, (_2857 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, //  (float2(-1.5, 0
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, // hadow[0].y))).x 
	0x2b, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // + _2184)) + step
	0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_2187, s_shadow
	0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map1.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap1Sampler,
	0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_2857 + (float
	0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(-1.5, 1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, // ].y))).x + _2184
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x2c, // )) + step(_2187,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, //  s_shadowMap1.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x37, // 1Sampler, (_2857
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, //  + (float2(-0.5,
	0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  -1.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // .x + _2184)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_2187, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap1.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap1Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_2857 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // oat2(-0.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, 0x29, 0x29, // y))).x + _2184))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x2c, 0x20, 0x73, //  + step(_2187, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap1.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, // le(s_shadowMap1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x37, 0x20, 0x2b, // ampler, (_2857 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, //  (float2(-0.5, 0
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, // hadow[0].y))).x 
	0x2b, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // + _2184)) + step
	0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_2187, s_shadow
	0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map1.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap1Sampler,
	0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_2857 + (float
	0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(-0.5, 1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, // ].y))).x + _2184
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x2c, // )) + step(_2187,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, //  s_shadowMap1.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x37, // 1Sampler, (_2857
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, //  + (float2(0.5, 
	0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // -1.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _2184)) + st
	0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_2187, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap1.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap1Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_2857 + (flo
	0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(0.5, -0.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, // [0].y))).x + _21
	0x38, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 84);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, //              _60
	0x38, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x33, 0x30, 0x32, 0x37, // 88 = ((((((_3027
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x2c, 0x20, 0x73, //  + step(_2187, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap1.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, // le(s_shadowMap1S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x37, 0x20, 0x2b, // ampler, (_2857 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, //  (float2(0.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x38, // 0].y))).x + _218
	0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, // 4)) + step(_2187
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, // , s_shadowMap1.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, // p1Sampler, (_285
	0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, // 7 + (float2(0.5,
	0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  1.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _2184)) + st
	0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_2187, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap1.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap1Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_2857 + (flo
	0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, // at2(1.5, -1.5) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, //  _mtl_u.u_shadow
	0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, // [0].y))).x + _21
	0x38, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, // 84)) + step(_218
	0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, // 7, s_shadowMap1.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, // ap1Sampler, (_28
	0x35, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, // 57 + (float2(1.5
	0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // , -0.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, // ).x + _2184)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, 0x38, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_2187, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap1.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap1Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, 0x38, 0x35, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_2857 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, // loat2(1.5, 0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, // w[0].y))).x + _2
	0x31, 0x38, 0x34, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x31, // 184)) + step(_21
	0x38, 0x37, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x31, // 87, s_shadowMap1
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x31, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x32, // Map1Sampler, (_2
	0x38, 0x35, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, // 857 + (float2(1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x32, 0x31, 0x38, 0x34, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, //  _2184)) * 0.062
	0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 5;.             
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, //            break
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //       }.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, //             else
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      {.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, //                i
	0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, 0x39, 0x31, 0x30, 0x2e, 0x7a, 0x29, 0x20, 0x3c, 0x20, // f ((-_1910.z) < 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x31, 0x5d, 0x2e, 0x7a, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1].z).          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, //               {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, //             floa
	0x74, 0x34, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x34, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // t4 _2204 = _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, // u.u_shadowViewPr
	0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x32, 0x5d, 0x20, 0x2a, // ojTransform[2] *
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, 0x37, 0x31, 0x2c, 0x20, 0x31, //  float4(_1671, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .0);.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x32, 0x30, 0x39, 0x20, 0x3d, 0x20, //  float4 _2209 = 
	0x5f, 0x32, 0x32, 0x30, 0x34, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, // _2204 / float4(_
	0x32, 0x32, 0x30, 0x34, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2204.w);.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x33, 0x34, 0x33, //      float2 _343
	0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x32, 0x32, 0x30, // 7 = float2((_220
	0x39, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, // 9.x + 1.0) * 0.5
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x28, 0x28, 0x5f, 0x32, 0x32, 0x30, 0x39, 0x2e, // , 1.0 - ((_2209.
	0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, // y + 1.0) * 0.5))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, 0x32, // oat _2218 = _212
	0x31, 0x20, 0x2a, 0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 1 * (2.0 / _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x7a, 0x29, // u.u_shadow[1].z)
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x32, 0x32, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x32, 0x30, // oat _2221 = _220
	0x39, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 9.z;.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x33, 0x36, 0x30, 0x37, 0x20, 0x3d, 0x20, 0x28, //  float _3607 = (
	0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, // (((((((step(_222
	0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, // 1, s_shadowMap2.
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // sample(s_shadowM
	0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, // ap2Sampler, (_34
	0x33, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, // 37 + (float2(-1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, //  _2218) + step(_
	0x32, 0x32, 0x32, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // 2221, s_shadowMa
	0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // p2.sample(s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, // owMap2Sampler, (
	0x5f, 0x33, 0x34, 0x33, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, // _3437 + (float2(
	0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // -1.5, -0.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, // .y))).x + _2218)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, 0x2c, 0x20, // ) + step(_2221, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap2.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // ple(s_shadowMap2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, 0x37, 0x20, // Sampler, (_3437 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, // + (float2(-1.5, 
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, //  + _2218)) + ste
	0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p(_2221, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap2.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap2Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_3437 + (floa
	0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // t2(-1.5, 1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, // 0].y))).x + _221
	0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, // 8)) + step(_2221
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, // , s_shadowMap2.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, // p2Sampler, (_343
	0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, // 7 + (float2(-0.5
	0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // , -1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, // ).x + _2218)) + 
	0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, // step(_2221, s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // adowMap2.sample(
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, // s_shadowMap2Samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, // ler, (_3437 + (f
	0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // loat2(-0.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, // .y))).x + _2218)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, 0x2c, 0x20, // ) + step(_2221, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap2.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // ple(s_shadowMap2
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, 0x37, 0x20, // Sampler, (_3437 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, // + (float2(-0.5, 
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, //  + _2218)) + ste
	0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p(_2221, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap2.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap2Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_3437 + (floa
	0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // t2(-0.5, 1.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, // 0].y))).x + _221
	0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, // 8)) + step(_2221
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, // , s_shadowMap2.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, // p2Sampler, (_343
	0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, // 7 + (float2(0.5,
	0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, //  -1.5) * _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, // u_shadow[0].y)))
	0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, // .x + _2218)) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_2221, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap2.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap2Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_3437 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, // oat2(0.5, -0.5) 
	0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // * _mtl_u.u_shado
	0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, // w[0].y))).x + _2
	0x32, 0x31, 0x38, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 218);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, //   _6088 = ((((((
	0x5f, 0x33, 0x36, 0x30, 0x37, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, // _3607 + step(_22
	0x32, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, // 21, s_shadowMap2
	0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // .sample(s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, // Map2Sampler, (_3
	0x34, 0x33, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, // 437 + (float2(0.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //  _2218)) + step(
	0x5f, 0x32, 0x32, 0x32, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _2221, s_shadowM
	0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap2.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap2Sampler, 
	0x28, 0x5f, 0x33, 0x34, 0x33, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_3437 + (float2
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, // (0.5, 1.5) * _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, // l_u.u_shadow[0].
	0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, 0x29, // y))).x + _2218))
	0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, 0x2c, 0x20, 0x73, //  + step(_2221, s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, // _shadowMap2.samp
	0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, // le(s_shadowMap2S
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, 0x37, 0x20, 0x2b, // ampler, (_3437 +
	0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, //  (float2(1.5, -1
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, // hadow[0].y))).x 
	0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // + _2218)) + step
	0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_2221, s_shadow
	0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map2.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap2Sampler,
	0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_3437 + (float
	0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(1.5, -0.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, // ].y))).x + _2218
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, 0x2c, // )) + step(_2221,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, //  s_shadowMap2.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, 0x37, // 2Sampler, (_3437
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, //  + (float2(1.5, 
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, //  + _2218)) + ste
	0x70, 0x28, 0x5f, 0x32, 0x32, 0x32, 0x31, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // p(_2221, s_shado
	0x77, 0x4d, 0x61, 0x70, 0x32, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, // wMap2.sample(s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x32, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // hadowMap2Sampler
	0x2c, 0x20, 0x28, 0x5f, 0x33, 0x34, 0x33, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, // , (_3437 + (floa
	0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // t2(1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x31, 0x38, 0x29, 0x29, 0x20, 0x2a, 0x20, // ).x + _2218)) * 
	0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 0.0625;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //     break;.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    }.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, //              els
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // e.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //           {.    
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x2d, 0x5f, 0x31, //         if ((-_1
	0x39, 0x31, 0x30, 0x2e, 0x7a, 0x29, 0x20, 0x3c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // 910.z) < _mtl_u.
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x0a, 0x20, // u_shadow[1].w). 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //            {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, //              flo
	0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x32, 0x33, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // at4 _2238 = _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x50, // _u.u_shadowViewP
	0x72, 0x6f, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5b, 0x33, 0x5d, 0x20, // rojTransform[3] 
	0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x31, 0x36, 0x37, 0x31, 0x2c, 0x20, // * float4(_1671, 
	0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 1.0);.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x32, 0x32, //       float4 _22
	0x34, 0x33, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x32, 0x33, 0x38, 0x20, 0x2f, 0x20, 0x66, 0x6c, 0x6f, // 43 = _2238 / flo
	0x61, 0x74, 0x34, 0x28, 0x5f, 0x32, 0x32, 0x33, 0x38, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, 0x20, // at4(_2238.w);.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, //               fl
	0x6f, 0x61, 0x74, 0x32, 0x20, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, // oat2 _4017 = flo
	0x61, 0x74, 0x32, 0x28, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x33, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x31, // at2((_2243.x + 1
	0x2e, 0x30, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, // .0) * 0.5, 1.0 -
	0x20, 0x28, 0x28, 0x5f, 0x32, 0x32, 0x34, 0x33, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, //  ((_2243.y + 1.0
	0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ) * 0.5));.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, //            float
	0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x31, 0x32, 0x31, 0x20, 0x2a, //  _2252 = _2121 *
	0x20, 0x28, 0x32, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, //  (2.0 / _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x31, 0x5d, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x20, // _shadow[1].w);. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, //                f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x32, 0x32, // loat _2255 = _22
	0x34, 0x33, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 43.z;.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x31, 0x38, //       float _418
	0x37, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x73, 0x74, 0x65, 0x70, // 7 = ((((((((step
	0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_2255, s_shadow
	0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map3.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap3Sampler,
	0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_4017 + (float
	0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, // 2(-1.5) * _mtl_u
	0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, // .u_shadow[0].y))
	0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x29, 0x20, 0x2b, 0x20, 0x73, // ).x + _2252) + s
	0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, // tep(_2255, s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, // dowMap3.sample(s
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, // _shadowMap3Sampl
	0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, // er, (_4017 + (fl
	0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x35, 0x29, // oat2(-1.5, -0.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // ow[0].y))).x + _
	0x32, 0x32, 0x35, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, // 2252)) + step(_2
	0x32, 0x35, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 255, s_shadowMap
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 3.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap3Sampler, (_
	0x34, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, // 4017 + (float2(-
	0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 1.5, 0.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x29, 0x29, 0x20, // ))).x + _2252)) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, 0x20, 0x73, 0x5f, // + step(_2255, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap3.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, // e(s_shadowMap3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, // mpler, (_4017 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, // (float2(-1.5, 1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //  _2252)) + step(
	0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _2255, s_shadowM
	0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap3.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap3Sampler, 
	0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_4017 + (float2
	0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // (-0.5, -1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, // ].y))).x + _2252
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, // )) + step(_2255,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, //  s_shadowMap3.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, // 3Sampler, (_4017
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x29, //  + (float2(-0.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // ow[0].y))).x + _
	0x32, 0x32, 0x35, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, // 2252)) + step(_2
	0x32, 0x35, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // 255, s_shadowMap
	0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, // 3.sample(s_shado
	0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, // wMap3Sampler, (_
	0x34, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, // 4017 + (float2(-
	0x30, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, // 0.5, 0.5) * _mtl
	0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, // _u.u_shadow[0].y
	0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x29, 0x29, 0x20, // ))).x + _2252)) 
	0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, 0x20, 0x73, 0x5f, // + step(_2255, s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, // shadowMap3.sampl
	0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, // e(s_shadowMap3Sa
	0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, // mpler, (_4017 + 
	0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x2d, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, 0x2e, // (float2(-0.5, 1.
	0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, // 5) * _mtl_u.u_sh
	0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, // adow[0].y))).x +
	0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //  _2252)) + step(
	0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, // _2255, s_shadowM
	0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, // ap3.sample(s_sha
	0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // dowMap3Sampler, 
	0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, // (_4017 + (float2
	0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // (0.5, -1.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x29, // .y))).x + _2252)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, 0x20, // ) + step(_2255, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap3.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, // ple(s_shadowMap3
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, // Sampler, (_4017 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x2d, // + (float2(0.5, -
	0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 0.5) * _mtl_u.u_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, // shadow[0].y))).x
	0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //  + _2252);.     
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x38, //            _6088
	0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x5f, 0x34, 0x31, 0x38, 0x37, 0x20, 0x2b, //  = ((((((_4187 +
	0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, //  step(_2255, s_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // hadowMap3.sample
	0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, // (s_shadowMap3Sam
	0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, // pler, (_4017 + (
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // float2(0.5) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, // tl_u.u_shadow[0]
	0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x29, // .y))).x + _2252)
	0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, 0x20, // ) + step(_2255, 
	0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, // s_shadowMap3.sam
	0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, // ple(s_shadowMap3
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, // Sampler, (_4017 
	0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x30, 0x2e, 0x35, 0x2c, 0x20, 0x31, // + (float2(0.5, 1
	0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, // .5) * _mtl_u.u_s
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, // hadow[0].y))).x 
	0x2b, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, // + _2252)) + step
	0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, // (_2255, s_shadow
	0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, // Map3.sample(s_sh
	0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // adowMap3Sampler,
	0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  (_4017 + (float
	0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, // 2(1.5, -1.5) * _
	0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, // mtl_u.u_shadow[0
	0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, // ].y))).x + _2252
	0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, // )) + step(_2255,
	0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, //  s_shadowMap3.sa
	0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, // mple(s_shadowMap
	0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, // 3Sampler, (_4017
	0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, //  + (float2(1.5, 
	0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // -0.5) * _mtl_u.u
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, // _shadow[0].y))).
	0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x35, 0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, // x + _2252)) + st
	0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, 0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, // ep(_2255, s_shad
	0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // owMap3.sample(s_
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, // shadowMap3Sample
	0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, 0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, // r, (_4017 + (flo
	0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2a, 0x20, // at2(1.5, 0.5) * 
	0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5b, // _mtl_u.u_shadow[
	0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, 0x32, 0x32, 0x35, // 0].y))).x + _225
	0x32, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, 0x5f, 0x32, 0x32, 0x35, 0x35, // 2)) + step(_2255
	0x2c, 0x20, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, 0x70, 0x33, 0x2e, 0x73, // , s_shadowMap3.s
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x4d, 0x61, // ample(s_shadowMa
	0x70, 0x33, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x28, 0x5f, 0x34, 0x30, 0x31, // p3Sampler, (_401
	0x37, 0x20, 0x2b, 0x20, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x31, 0x2e, 0x35, 0x29, // 7 + (float2(1.5)
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, //  * _mtl_u.u_shad
	0x6f, 0x77, 0x5b, 0x30, 0x5d, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x2e, 0x78, 0x20, 0x2b, 0x20, 0x5f, // ow[0].y))).x + _
	0x32, 0x32, 0x35, 0x32, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x32, 0x35, 0x3b, // 2252)) * 0.0625;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  break;.        
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //     }.          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   else.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //    {.           
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, //      _6088 = 1.0
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ;.              
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   break;.       
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //      }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, //    break; // unr
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, // eachable workaro
	0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // und.            
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, //             }.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, //       break; // 
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, // unreachable work
	0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // around.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, //            }.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, //  break; // unrea
	0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, // chable workaroun
	0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // d.              
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x20, 0x20, 0x20, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, //     break; // un
	0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, // reachable workar
	0x6f, 0x75, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ound.           
	0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, //  }.            e
	0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse.            
	0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // {.              
	0x20, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x38, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, //   _6088 = 1.0;. 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, //                b
	0x72, 0x65, 0x61, 0x6b, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // reak;.          
	0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //   }.            
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x63, // break; // unreac
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x61, 0x72, 0x6f, 0x75, 0x6e, 0x64, // hable workaround
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, // .        } while
	0x28, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // (false);.       
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x37, 0x31, 0x36, 0x20, 0x3d, 0x20, //  float3 _4716 = 
	0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x33, 0x39, // mix(float3(0.039
	0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x31, 0x30, 0x35, 0x39, 0x33, 0x30, 0x33, 0x32, 0x38, 0x33, // 9999991059303283
	0x36, 0x39, 0x31, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x32, 0x30, 0x37, 0x39, // 69140625), _2079
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // , float3(_mtl_u.
	0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, // u_water[2].x));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, //         float3 _
	0x34, 0x36, 0x32, 0x33, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6e, 0x6f, 0x72, // 4623 = fast::nor
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x31, 0x38, 0x38, 0x35, 0x20, 0x2b, 0x20, 0x5f, // malize(_1885 + _
	0x31, 0x38, 0x39, 0x34, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // 1894);.        f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x37, 0x32, 0x38, 0x20, 0x3d, 0x20, 0x5f, 0x34, // loat3 _4728 = _4
	0x37, 0x31, 0x36, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, // 716 + ((float3(1
	0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x37, 0x31, 0x36, 0x29, 0x20, 0x2a, 0x20, 0x70, // .0) - _4716) * p
	0x6f, 0x77, 0x72, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, // owr(fast::clamp(
	0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 1.0 - fast::max(
	0x64, 0x6f, 0x74, 0x28, 0x5f, 0x34, 0x36, 0x32, 0x33, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x38, 0x35, // dot(_4623, _1885
	0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, // ), 0.0), 0.0, 1.
	0x30, 0x29, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 0), 5.0));.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x33, 0x38, 0x20, 0x3d, //    float _4738 =
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, //  _mtl_u.u_water[
	0x32, 0x5d, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 2].y * _mtl_u.u_
	0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // water[2].y;.    
	0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x34, 0x31, 0x20, //     float _4741 
	0x3d, 0x20, 0x5f, 0x34, 0x37, 0x33, 0x38, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x37, 0x33, 0x38, 0x3b, // = _4738 * _4738;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // .        float _
	0x34, 0x37, 0x34, 0x35, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, // 4745 = fast::max
	0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x38, 0x2c, 0x20, 0x5f, 0x34, 0x36, 0x32, // (dot(_1778, _462
	0x33, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 3), 0.0);.      
	0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x35, 0x34, 0x20, 0x3d, 0x20, //   float _4754 = 
	0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x28, 0x28, 0x5f, 0x34, 0x37, 0x34, // fast::max(((_474
	0x35, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x37, 0x34, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x34, // 5 * _4745) * (_4
	0x37, 0x34, 0x31, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x31, 0x2e, // 741 - 1.0)) + 1.
	0x30, 0x2c, 0x20, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x37, 0x34, 0x37, 0x33, 0x37, // 0, 9.99999974737
	0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, 0x35, 0x32, 0x36, 0x33, 0x36, // 8751635551452636
	0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // 7188e-05);.     
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x37, 0x34, 0x20, 0x3d, //    float _4774 =
	0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, //  fast::max(dot(_
	0x31, 0x37, 0x37, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x38, 0x35, 0x29, 0x2c, 0x20, 0x30, 0x2e, // 1778, _1885), 0.
	0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, // 0);.        floa
	0x74, 0x20, 0x5f, 0x34, 0x37, 0x37, 0x38, 0x20, 0x3d, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // t _4778 = fast::
	0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x38, 0x2c, 0x20, 0x5f, // max(dot(_1778, _
	0x31, 0x38, 0x39, 0x34, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 1894), 0.0);.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x39, 0x33, //      float _4793
	0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, //  = _mtl_u.u_wate
	0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, // r[2].y + 1.0;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x37, 0x39, //       float _479
	0x37, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x34, 0x37, 0x39, 0x33, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x37, // 7 = (_4793 * _47
	0x39, 0x33, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 93) * 0.125;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x38, 0x31, 0x31, //      float _4811
	0x20, 0x3d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, //  = _mtl_u.u_wate
	0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x20, 0x2b, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, // r[2].y + 1.0;.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x34, 0x38, 0x31, //       float _481
	0x35, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x34, 0x38, 0x31, 0x31, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x38, // 5 = (_4811 * _48
	0x31, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x31, 0x32, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, // 11) * 0.125;.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x28, //      _6090 = (((
	0x28, 0x28, 0x28, 0x28, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, // (((((float3(1.0)
	0x20, 0x2d, 0x20, 0x5f, 0x34, 0x37, 0x32, 0x38, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, //  - _4728) * (1.0
	0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, //  - _mtl_u.u_wate
	0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x30, 0x37, 0x39, // r[2].x)) * _2079
	0x29, 0x20, 0x2a, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x31, 0x38, // ) * float3(0.318
	0x33, 0x30, 0x39, 0x38, 0x37, 0x33, 0x33, 0x34, 0x32, 0x35, 0x31, 0x34, 0x30, 0x33, 0x38, 0x30, // 3098733425140380
	0x38, 0x35, 0x39, 0x33, 0x37, 0x35, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x37, // 859375)) + ((_47
	0x32, 0x38, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x37, 0x34, 0x31, 0x20, 0x2f, 0x20, 0x28, // 28 * ((_4741 / (
	0x28, 0x33, 0x2e, 0x31, 0x34, 0x31, 0x35, 0x39, 0x32, 0x37, 0x34, 0x31, 0x30, 0x31, 0x32, 0x35, // (3.1415927410125
	0x37, 0x33, 0x32, 0x34, 0x32, 0x31, 0x38, 0x37, 0x35, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x37, 0x35, // 732421875 * _475
	0x34, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x34, 0x37, 0x35, 0x34, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, // 4) * _4754)) * (
	0x28, 0x5f, 0x34, 0x37, 0x37, 0x38, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x37, 0x37, 0x38, // (_4778 / ((_4778
	0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x38, 0x31, 0x35, 0x29, //  * (1.0 - _4815)
	0x29, 0x20, 0x2b, 0x20, 0x5f, 0x34, 0x38, 0x31, 0x35, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // ) + _4815)) * (_
	0x34, 0x37, 0x37, 0x34, 0x20, 0x2f, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x37, 0x37, 0x34, 0x20, 0x2a, // 4774 / ((_4774 *
	0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x37, 0x39, 0x37, 0x29, 0x29, 0x20, //  (1.0 - _4797)) 
	0x2b, 0x20, 0x5f, 0x34, 0x37, 0x39, 0x37, 0x29, 0x29, 0x29, 0x29, 0x29, 0x20, 0x2f, 0x20, 0x66, // + _4797))))) / f
	0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x28, 0x28, 0x34, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x66, 0x61, // loat3(((4.0 * fa
	0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, // st::max(dot(_177
	0x38, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x38, 0x35, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, // 8, _1885), 0.0))
	0x20, 0x2a, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, //  * fast::max(dot
	0x28, 0x5f, 0x31, 0x37, 0x37, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x39, 0x34, 0x29, 0x2c, 0x20, // (_1778, _1894), 
	0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x39, 0x2e, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, // 0.0)) + 9.999999
	0x37, 0x34, 0x37, 0x33, 0x37, 0x38, 0x37, 0x35, 0x31, 0x36, 0x33, 0x35, 0x35, 0x35, 0x31, 0x34, // 7473787516355514
	0x35, 0x32, 0x36, 0x33, 0x36, 0x37, 0x31, 0x38, 0x38, 0x65, 0x2d, 0x30, 0x35, 0x29, 0x29, 0x29, // 526367188e-05)))
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, //  * _mtl_u.u_ligh
	0x74, 0x69, 0x6e, 0x67, 0x5b, 0x32, 0x5d, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x66, // ting[2].xyz) * f
	0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, // ast::max(dot(_17
	0x37, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x38, 0x39, 0x34, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, // 78, _1894), 0.0)
	0x29, 0x20, 0x2a, 0x20, 0x5f, 0x36, 0x30, 0x38, 0x38, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x5f, // ) * _6088) + ((_
	0x32, 0x30, 0x37, 0x39, 0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, // 2079 * _mtl_u.u_
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x32, 0x5d, 0x2e, 0x77, 0x29, 0x20, 0x2a, // lighting[2].w) *
	0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, //  _mtl_u.u_water[
	0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, // 2].z);.    }.   
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, //  else.    {.    
	0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x39, 0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, //     _6090 = floa
	0x74, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // t3(0.0);.    }. 
	0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x36, 0x30, 0x39, 0x31, 0x3b, //    float3 _6091;
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, // .    if (_mtl_u.
	0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x33, 0x5d, 0x2e, 0x78, 0x20, // u_lighting[3].x 
	0x21, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, // != 0.0).    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x39, //       float3 _49
	0x33, 0x38, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, // 38 = mix(float3(
	0x30, 0x2e, 0x30, 0x33, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x31, 0x30, 0x35, 0x39, 0x33, // 0.03999999910593
	0x30, 0x33, 0x32, 0x38, 0x33, 0x36, 0x39, 0x31, 0x34, 0x30, 0x36, 0x32, 0x35, 0x29, 0x2c, 0x20, // 0328369140625), 
	0x5f, 0x32, 0x30, 0x37, 0x39, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x6d, // _2079, float3(_m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, // tl_u.u_water[2].
	0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // x));.        flo
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x34, 0x39, 0x35, 0x35, 0x20, 0x3d, 0x20, 0x5f, 0x34, 0x39, 0x33, // at3 _4955 = _493
	0x38, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, // 8 + ((fast::max(
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x6d, 0x74, // float3(1.0 - _mt
	0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, // l_u.u_water[2].y
	0x29, 0x2c, 0x20, 0x5f, 0x34, 0x39, 0x33, 0x38, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x34, 0x39, 0x33, // ), _4938) - _493
	0x38, 0x29, 0x20, 0x2a, 0x20, 0x70, 0x6f, 0x77, 0x72, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, // 8) * powr(fast::
	0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x66, 0x61, 0x73, 0x74, // clamp(1.0 - fast
	0x3a, 0x3a, 0x6d, 0x61, 0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x38, 0x2c, // ::max(dot(_1778,
	0x20, 0x5f, 0x31, 0x38, 0x38, 0x35, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x30, //  _1885), 0.0), 0
	0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x35, 0x2e, 0x30, 0x29, 0x29, 0x3b, // .0, 1.0), 5.0));
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x20, // .        float4 
	0x5f, 0x34, 0x39, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x42, 0x72, 0x64, // _4991 = s_iblBrd
	0x66, 0x4c, 0x75, 0x74, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, 0x69, 0x62, // fLut.sample(s_ib
	0x6c, 0x42, 0x72, 0x64, 0x66, 0x4c, 0x75, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, // lBrdfLutSampler,
	0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x28, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x6d, 0x61, //  float2(fast::ma
	0x78, 0x28, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x31, 0x37, 0x37, 0x38, 0x2c, 0x20, 0x5f, 0x31, 0x38, // x(dot(_1778, _18
	0x38, 0x35, 0x29, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, // 85), 0.0), _mtl_
	0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x29, 0x29, // u.u_water[2].y))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x39, 0x31, 0x20, // ;.        _6091 
	0x3d, 0x20, 0x5f, 0x36, 0x30, 0x39, 0x30, 0x20, 0x2b, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, // = _6090 + ((((((
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x34, // float3(1.0) - _4
	0x39, 0x35, 0x35, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x6d, // 955) * (1.0 - _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, // tl_u.u_water[2].
	0x78, 0x29, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, // x)) * s_iblIrrad
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, // ianceMap.sample(
	0x73, 0x5f, 0x69, 0x62, 0x6c, 0x49, 0x72, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4d, // s_iblIrradianceM
	0x61, 0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x38, // apSampler, _1778
	0x29, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x32, 0x30, 0x37, 0x39, 0x29, 0x20, // ).xyz) * _2079) 
	0x2b, 0x20, 0x28, 0x73, 0x5f, 0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, // + (s_iblEnvironm
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x28, 0x73, 0x5f, // entMap.sample(s_
	0x69, 0x62, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, // iblEnvironmentMa
	0x70, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, // pSampler, reflec
	0x74, 0x28, 0x2d, 0x5f, 0x31, 0x38, 0x38, 0x35, 0x2c, 0x20, 0x5f, 0x31, 0x37, 0x37, 0x38, 0x29, // t(-_1885, _1778)
	0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // , level(_mtl_u.u
	0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x79, 0x20, 0x2a, 0x20, 0x66, 0x6c, // _water[2].y * fl
	0x6f, 0x61, 0x74, 0x28, 0x69, 0x6e, 0x74, 0x28, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, // oat(int(_mtl_u.u
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5b, 0x33, 0x5d, 0x2e, 0x79, 0x29, 0x29, // _lighting[3].y))
	0x29, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x5f, 0x34, 0x39, 0x35, 0x35, // )).xyz * ((_4955
	0x20, 0x2a, 0x20, 0x5f, 0x34, 0x39, 0x39, 0x31, 0x2e, 0x78, 0x29, 0x20, 0x2b, 0x20, 0x66, 0x6c, //  * _4991.x) + fl
	0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x34, 0x39, 0x39, 0x31, 0x2e, 0x79, 0x29, 0x29, 0x29, 0x29, // oat3(_4991.y))))
	0x20, 0x2a, 0x20, 0x5f, 0x6d, 0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, //  * _mtl_u.u_wate
	0x72, 0x5b, 0x32, 0x5d, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, // r[2].z);.    }. 
	0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7b, 0x0a, 0x20, 0x20, //    else.    {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x36, 0x30, 0x39, 0x31, 0x20, 0x3d, 0x20, 0x5f, 0x36, //       _6091 = _6
	0x30, 0x39, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, // 090;.    }.    o
	0x75, 0x74, 0x2e, 0x62, 0x67, 0x66, 0x78, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, // ut.bgfx_FragData
	0x30, 0x20, 0x3d, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x36, 0x30, 0x39, 0x31, // 0 = float4(_6091
	0x2c, 0x20, 0x66, 0x61, 0x73, 0x74, 0x3a, 0x3a, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x6c, 0x65, // , fast::clamp(le
	0x6e, 0x67, 0x74, 0x68, 0x28, 0x28, 0x5f, 0x32, 0x30, 0x36, 0x37, 0x2e, 0x78, 0x79, 0x7a, 0x20, // ngth((_2067.xyz 
	0x2f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x32, 0x30, 0x36, 0x37, 0x2e, 0x77, // / float3(_2067.w
	0x29, 0x29, 0x20, 0x2d, 0x20, 0x5f, 0x31, 0x36, 0x37, 0x31, 0x29, 0x20, 0x2a, 0x20, 0x5f, 0x6d, // )) - _1671) * _m
	0x74, 0x6c, 0x5f, 0x75, 0x2e, 0x75, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5b, 0x30, 0x5d, 0x2e, // tl_u.u_water[0].
	0x7a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x29, 0x3b, 0x0a, 0x20, // z, 0.0, 1.0));. 
	0x20, 0x20, 0x20, 0x6f, 0x75, 0x74, 0x2e, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x44, 0x65, //    out.gl_FragDe
	0x70, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x5f, 0x31, 0x36, 0x38, 0x35, 0x2e, 0x7a, 0x3b, 0x0a, 0x20, // pth = _1685.z;. 
	0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x75, 0x74, 0x3b, 0x0a, 0x7d, //    return out;.}
	0x0a, 0x0a, 0x00, 0x00, 0xd0, 0x03,                                                             // ......
};
